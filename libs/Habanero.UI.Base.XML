<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Habanero.UI.Base</name>
    </assembly>
    <members>
        <member name="T:Habanero.UI.Base.IWizardForm">
            <summary>
            Represents a form containing a wizard control that guides users
            through a process step by step.
            This form simply wraps the WizardControl in a form and handles communication with the user.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IFormHabanero">
            <summary>
            Represents a window or dialog box that makes up an application's user interface
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IControlHabanero">
            <summary>
            Defines controls, which are components with visual representation
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.Focus">
            <summary>
            Sets focus to this control
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.Select">
            <summary>
            Activates the control  
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.SuspendLayout">
            <summary>
            Temporarily suspends the layout logic for the control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.ResumeLayout(System.Boolean)">
            <summary>
            Resumes usual layout logic, optionally forcing an immediate
            layout of pending layout requests
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlHabanero.Dispose">
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IControlHabanero.Click">
            <summary>
            Occurs when the control is clicked
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IControlHabanero.DoubleClick">
            <summary>
            Occurs when the control is double-clicked
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IControlHabanero.Resize">
            <summary>
            Occurs when the control is resized
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IControlHabanero.VisibleChanged">
            <summary>
            Occurs when the Visible property value changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Width">
            <summary>
            Gets or sets the width of the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Visible">
            <summary>
            Gets or sets a value indicating whether the control is displayed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.TabIndex">
            <summary>
            Gets or sets the tab order of the control within its container
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Focused">
            <summary>Gets a value indicating whether the control has input focus.</summary>
            <returns>true if the control has focus; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Height">
            <summary>
            Gets or sets the height of the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Top">
            <summary>
            Gets or sets the distance, in pixels, between the top edge of the
            control and the top edge of its container's client area
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Bottom">
            <summary>
            Gets the distance, in pixels, between the bottom edge of the
            control and the top edge of its container's client area
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Left">
            <summary>
            Gets or sets the distance, in pixels, between the left edge of the
            control and the left edge of its container's client area
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Right">
            <summary>
            Gets the distance, in pixels, between the right edge of the
            control and the left edge of its container's client area
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Text">
            <summary>
            Gets or sets the text associated with this control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Name">
            <summary>
            Gets or sets the name of the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.ForeColor">
            <summary>
            Gets or sets the foreground color of the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.BackColor">
            <summary>
            Gets or sets the background color for the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the
            focus to this control using the TAB key
            </summary>
            <value>true if the user can give the focus to the control using the
            TAB key; otherwise, false. The default is true.This property will
            always return true for an instance of the Form class.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Size">
            <summary>
            Gets or sets the height and width of the control
            </summary>
            <value>The System.Drawing.Size that represents the height
            and width of the control in pixels</value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.ClientSize">
            <summary>
            Gets or sets the client size the control
            </summary>
            <value>The System.Drawing.Size that represents the height
            and width of the client area of the control in pixels</value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.HasChildren">
            <summary>
            Gets a value indicating whether the control contains one or more child controls
            </summary>
            <value>
            	<c>true</c> if this control has children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that
            GetPreferredSize(System.Drawing.Size) can specify
            </summary>
            <returns>An ordered pair of type System.Drawing.Size
            representing the width and height of a rectangle</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that
            GetPreferredSize(System.Drawing.Size) can specify
            </summary>
            <returns>An ordered pair of type System.Drawing.Size
            representing the width and height of a rectangle</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Font">
            <summary>
            Gets or sets the font of the text displayed by the control
            </summary>
            <value>The System.Drawing.Font to apply to the text displayed
            by the control. The default is the value of the DefaultFont property.</value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the
            control relative to the upper-left corner of its container
            </summary>
            <value>The System.Drawing.Point that represents the upper-left
            corner of the control relative to the upper-left corner of its container</value>
        </member>
        <member name="P:Habanero.UI.Base.IControlHabanero.Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IControlHabanero.TextChanged">
            <summary>
            Occurs when the .Text property value changes
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.Show">
            <summary>
            Shows the form to the user
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.Hide">
            <summary>
            Conceals the form from the user.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.Show(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Shows the form with the specified owner to the user.
            </summary>
            <param name="owner">Any object that implements System.Windows.Forms.IWin32Window and represents the top-level window that will own this form.</param>
            <exception cref="T:System.ArgumentException">The form specified in the owner parameter is the same as the form being shown.</exception>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.Refresh">
            <summary>
            Forces the form to invalidate its client area and
            immediately redraw itself and any child controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.PerformLayout">
            <summary>
            Forces the form to apply layout logic to all its child controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.Close">
            <summary>
            Closes the form
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormHabanero.ShowDialog">
            <summary>
            Shows the form as a modal dialog box with the currently active window set as its owner
            </summary>
            <returns>One of the DialogResult values</returns>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.MdiParent">
            <summary>
            Gets or sets the current multiple document interface (MDI) parent form of this form
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.WindowState">
            <summary>
            Gets or sets the form's window state.  The default is Normal.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IFormHabanero.Closed">
            <summary>
            Occurs after the form is closed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.StartPosition">
            <summary>
            Gets or sets the form start position.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.IsMdiContainer">
            <summary>
             Indicator of whether this form is an mdiChild or not.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.DialogResult">
            <summary>
            Gets or sets the dialog result that indicates what action was
            taken to close the form
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFormHabanero.FormBorderStyle">
            <summary>
             Gets or sets the border style of the form.
            </summary>
            <returns>A <see cref="T:Habanero.UI.Base.FormBorderStyle"/> that represents the style of border to display for the form. 
             The default is <see cref="F:Habanero.UI.Base.FormBorderStyle.Sizable"/>.
            </returns>
             <exceptions>
             <see cref="T:System.ComponentModel.InvalidEnumArgumentException"/>: The value specified is outside the range of valid values.
             </exceptions>
        </member>
        <member name="P:Habanero.UI.Base.IWizardForm.WizardText">
            <summary>
            Gets and sets the text to dispaly
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardForm.WizardControl">
            <summary>
            Gets the WizardControl
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ValidationProvider">
            <summary>
            Provides validation properties to controls that can be validated
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.#ctor(Habanero.UI.Base.IErrorProvider)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.ValidationProvider"/>
            </summary>
            <param name="errorProvider"></param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.Validate">
            <summary>
            Perform validation on all controls.
            </summary>
            <returns>False if any control contains invalid data.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.ValidateControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform validation on a specific control
            </summary>
            <param name="ctrl">The control to validate</param>
            <returns>Returns true if valid, false if not</returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.ValidationMessages(System.Boolean)">
            <summary>
            Get validation error messages.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.ValidationMessagesControl(Habanero.UI.Base.IControlHabanero,System.Boolean)">
            <summary>
            Gets validation error messages for a specific control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.Validate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform validation on specific control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.DataTypeValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Validate Data Type.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.CompareValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform CompareValidate on a specific control.
            </summary>
            <returns>true if control has no validation rule.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.CustomValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform Custom Validation on specific control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.RangeValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform Range Validation on a specific control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.IsDefaultRange(Habanero.UI.Base.ValidationRule)">
            <summary>
            Check if validation rule range is default.
            </summary>
            <param name="vr"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.RegularExpressionValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform Regular Expression Validation on a specific control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.RequiredFieldValidate(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Perform RequiredField Validation on a specific control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.SetValidationRule(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.ValidationRule)">
            <summary>
            Set validation rule.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.GetValidationRules(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Gets validation rules for a control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.GetIconAlignment(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Get Error Icon alignment.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.GetIconPadding(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Get Error Icon padding.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.SetIconAlignment(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.ErrorIconAlignmentHabanero)">
            <summary>
            Set Error Icon alignment.
            </summary>
            <param name="control"></param>
            <param name="value"></param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.SetIconPadding(Habanero.UI.Base.IControlHabanero,System.Int32)">
            <summary>
            Set Error Icon padding.
            </summary>
            <param name="control"></param>
            <param name="padding"></param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.CanExtend(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Determine if ValidationProvider supports a component.
            </summary>
            <param name="extendee"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationProvider.CanExtend(System.Object)">
            <summary>
            Determine if ValidationProvider supports the given component
            </summary>
            <param name="extendee"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.ValidationProvider.BlinkRate">
            <summary>
            BlinkRate of ErrorIcon.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationProvider.BlinkStyle">
            <summary>
            Get or set Blink Behavior.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ValidationDataType">
            <summary>
            Provides a list of available data types for the component of a validation
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationDataType.Currency">
            <summary>
            Monetary data type
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationDataType.Date">
            <summary>
            DateTime data type
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationDataType.Double">
            <summary>
            Double data type
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationDataType.Integer">
            <summary>
            Integer data type
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationDataType.String">
            <summary>
            Default - string data type
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IComboBox">
            <summary>
            Represents a ComboBox control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IListControl">
            <summary>
            Provides a common implementation of members for the ListBox and ComboBox classes
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListControl.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <returns>If the DisplayMember property is not specified, the value returned by
            GetItemText(System.Object) is the value of the item's ToString method.
            Otherwise, the method returns the string value of the member specified in the
            DisplayMember property for the object specified in the item parameter.</returns>
            <param name="item">The object from which to get the contents to display</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.IListControl.SelectedValueChanged">
            <summary>
            Occurs when the SelectedValue property changes.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IListControl.DisplayMember">
            <summary>
            Gets or sets the property to display for this ListControl
            </summary>
            <returns>
            A String specifying the name of an object property that is contained in the
            collection specified by the ListControl.DataSource property.
            The default is an empty string ("").</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IListControl.SelectedIndex">
            <summary>
            When overridden in a derived class, gets or sets the zero-based
            index of the currently selected item.
            </summary>
            <returns>A zero-based index of the currently selected item.
            A value of negative one (-1) is returned if no item is selected.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IListControl.SelectedValue">
            <summary>
            Gets or sets the value of the member property specified by the ValueMember property.
            </summary>
            <returns>An object containing the value of the member of the data source
            specified by the ValueMember property.</returns>
            <exception cref="T:System.InvalidOperationException">The assigned value is null or the empty string ("").</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IListControl.ValueMember">
            <summary>
            Gets or sets the property to use as the actual value for the items in the <see cref="T:Habanero.UI.Base.IListControl"/>
            </summary>
            <returns>A <see cref="T:System.String"></see> representing the name of an object property
            that is contained in the collection specified by the DataSource property.
            The default is an empty string ("").</returns>
            <exception cref="T:System.ArgumentException">The specified property cannot be found on the
            object specified by the DataSource property</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.IComboBox.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property has changed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.Items">
            <summary>
            Gets an object representing the collection of the items
            contained in this ComboBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.SelectedItem">
            <summary>
            Gets or sets currently selected item in the ComboBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.DropDownWidth">
            <summary>
            Gets or sets the width of the of the drop-down portion of a combo box
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.DataSource">
            <summary>
            Gets or sets the data source for this ComboBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.AutoCompleteMode">
            <summary>
             Gets or sets the value of the AutoCompleteMode property
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBox.AutoCompleteSource">
            <summary>
             Gets or sets the value of the AutoCompleteSource property
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ComboPair">
            <summary>
            Holds a key-value pair that provides a single item
            for a ComboBox.  The key is the string value shown and the value
            holds the underlying object, such as a BusinessObject or specific Guid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.#ctor(System.String,System.Object)">
            <summary>
             The pair of values shown in the Combo Box (i.e. the Key, Value Pair) <see cref="T:Habanero.UI.Base.ComboPair"/>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.ToString">
            <summary>
            Returns the key value being displayed
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.Equals(System.Object)">
            <summary>
            Indicates whether this ComboPair has exactly the same
            key and value as another
            </summary>
            <param name="obj">The ComboPair to compare with</param>
            <returns>Returns true if equal in content, false if not</returns>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.GetHashCode">
            <summary>
            Returns the hashcode of the key and value
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.op_Equality(Habanero.UI.Base.ComboPair,Habanero.UI.Base.ComboPair)">
            <summary>
            Indicates if two ComboPairs have the same key and value
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboPair.op_Inequality(Habanero.UI.Base.ComboPair,Habanero.UI.Base.ComboPair)">
            <summary>
            Indicates if two ComboPairs differ in either their keys or values
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboPair.Key">
            <summary>
            Gets the key to display to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboPair.Value">
            <summary>
            Gets the underlying value being represented.  Typically
            this value might be a BusinessObject, a Guid or even the same
            string as that being shown to the user.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGroupBox">
            <summary>
            Represents a Windows control that displays a frame around
            a group of controls with an optional caption
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateDisplaySettings">
            <summary>
            Stores date display settings that define how dates should
            be displayed to users in various user interfaces
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateDisplaySettings.GridDateFormat">
            <summary>
            Gets and sets the .Net style date format string that
            determines how a date is displayed in a grid.
            Set this value to null to use the short
            date format of the underlying user's environment.
            The format for this string is the same as that of
            DateTime.ToString(), including shortcuts such as
            "d" which use the short date format of the culture
            on the user's machine.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewCell">
            <summary>
            Represents an individual cell in a DataGridView control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.ColumnIndex">
            <summary>Gets the column index for this cell. </summary>
            <returns>The index of the column that contains the cell; -1 if the cell is not contained within a column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.Displayed">
            <summary>Gets a value that indicates whether the cell is currently displayed on-screen. </summary>
            <returns>true if the cell is on-screen or partially on-screen; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.Frozen">
            <summary>Gets a value indicating whether the cell is frozen. </summary>
            <returns>true if the cell is frozen; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.FormattedValue">
            <summary>Gets the value of the cell as formatted for display.</summary>
            <returns>The formatted value of the cell or null if the cell does not belong to a <see cref="T:Habanero.UI.Base.IDataGridView"></see> 
                control.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The row containing the cell is a shared row.
            -or-The cell is a column header cell.</exception>
            <exception cref="T:System.Exception">Formatting failed and either there is no handler for the 
            IDataGridView.DataError" event of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control or the handler 
            set the DataGridViewDataErrorEventArgs.ThrowException" property to true. The exception object can typically be cast 
            to type <see cref="T:System.FormatException"></see>.</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Habanero.UI.Base.IDataGridViewCell.ColumnIndex"></see> 
            is less than 0, indicating that the cell is a row header cell.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.IsInEditMode">
            <summary>Gets a value indicating whether this cell is currently being edited.</summary>
            <returns>true if the cell is in edit mode; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row containing the cell is a shared row.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.ReadOnly">
            <summary>Gets or sets a value indicating whether the cell's data can be edited. </summary>
            <returns>true if the cell's data can be edited; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">There is no owning row when setting this property. 
            -or-The owning row is shared when setting this property.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.RowIndex">
            <summary>Gets the index of the cell's parent row. </summary>
            <returns>The index of the row that contains the cell; -1 if there is no owning row.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.Selected">
            <summary>Gets or sets a value indicating whether the cell has been selected. </summary>
            <returns>true if the cell has been selected; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">There is no associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> 
            when setting this property. -or-The owning row is shared when setting this property.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.Value">
            <summary>Gets or sets the value associated with this cell. </summary>
            <returns>Gets or sets the data to be displayed by the cell. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Habanero.UI.Base.IDataGridViewCell.ColumnIndex"></see>
             is less than 0, indicating that the cell is a row header cell.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Habanero.UI.Base.IDataGridViewCell.RowIndex"></see> 
            is outside the valid range of 0 to the number of rows in the control minus 1.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.ValueType">
            <summary>Gets or sets the data type of the values in the cell. </summary>
            <returns>A <see cref="T:System.Type"></see> representing the data type of the value in the cell.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.Visible">
            <summary>Gets a value indicating whether the cell is in a row or column that has been hidden. </summary>
            <returns>true if the cell is visible; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.EditType">
            <summary>Gets the type of the cell's hosted editing control. </summary>
            <returns>A <see cref="T:System.Type"></see> representing the 
            DataGridViewTextBoxEditingControl type.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCell.DefaultNewRowValue">
            <summary>Gets the default value for a cell in the row for new records.</summary>
            <returns>An <see cref="T:System.Object"></see> representing the default value.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewController">
            <summary>
            A controller used to map an <see cref="T:Habanero.Base.IBusinessObjectCollection"/> onto an <see cref="T:Habanero.UI.Base.ITreeView"/>. Each <see cref="T:Habanero.Base.IBusinessObject"/>
            is displayed as a node in the treeview, and the multiple relationships of the <see cref="T:Habanero.Base.IBusinessObject"/> are displayed as
            subnodes.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewController.log">
            <summary>
            Uses for logging 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewController.#ctor(Habanero.UI.Base.ITreeView)">
            <summary>
            Constructs the TreeViewController. 
            </summary>
            <param name="treeView">The <see cref="T:Habanero.UI.Base.ITreeView"/> to control/map to</param>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewController.Finalize">
            <summary>
            Destructor. Removes the event handlers that the controller sets up on the controlled treeview.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewController.MustRelationshipBeVisible(Habanero.Base.IRelationship)">
            <summary>
            Returns whether the relationship should be shown in the tree view or not.<br/>
            By default all Composition and Aggregation relationships will be shown in the 
            tree. This method can be overriden to only show the relationships that you want.
            </summary>
            <param name="relationship"></param>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.InputFormComboBox">
            <summary>
            Provides a form containing a ComboBox in order to get a single
            input value back from a user
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.InputFormComboBox.#ctor(Habanero.UI.Base.IControlFactory,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.InputFormComboBox"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="message"></param>
            <param name="choices"></param>
        </member>
        <member name="M:Habanero.UI.Base.InputFormComboBox.CreateControlPanel">
            <summary>
            Creates the panel on the form
            </summary>
            <returns>Returns the panel created</returns>
        </member>
        <member name="M:Habanero.UI.Base.InputFormComboBox.ShowDialog">
            <summary>
            Shows the form to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormComboBox.ControlFactory">
            <summary>
            Gets the control factory used to create the controls
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormComboBox.Message">
            <summary>
            Gets the message to display to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormComboBox.ComboBox">
            <summary>
            Gets the ComboBox control on the form
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormComboBox.SelectedItem">
            <summary>
            Gets or sets the selected item in the ComboBox
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FileChooserManager">
            <summary>
            This manager groups common logic for IFileChooser objects.
            Do not use this object in working code - rather call CreateFileChooser
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FileChooserManager.#ctor(Habanero.UI.Base.IControlFactory,Habanero.UI.Base.IFileChooser)">
            <summary>
             Constructs the <see cref="T:Habanero.UI.Base.FileChooserManager"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="fileChooser"></param>
        </member>
        <member name="P:Habanero.UI.Base.FileChooserManager.SelectedFilePath">
            <summary>
             Gets and Sets the selected file path.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewDateTimeColumn">
            <summary>
            Represents a column of cells supporting a DateTimePicker
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewColumn">
            <summary>
            Represents a column in a DataGridView control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.Control">
            <summary>
             Returns the underlying control being wrapped by this decorator.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.DataPropertyName">
            <summary>Gets or sets the name of the data source property or database column to which 
            the <see cref="T:Habanero.UI.Base.IDataGridViewColumn"></see> is bound.</summary>
            <returns>The name of the property or database column associated with the <see cref="T:Habanero.UI.Base.IDataGridViewColumn"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.HeaderText">
            <summary>Gets or sets the caption text on the column's header cell.</summary>
            <returns>A <see cref="T:System.String"></see> with the desired text. The default is an empty string ("").</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.Name">
            <summary>Gets or sets the name of the column.</summary>
            <returns>A <see cref="T:System.String"></see> that contains the name of the column. The default is an empty string ("").</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.ReadOnly">
            <summary>Gets or sets a value indicating whether the user can edit the column's cells.</summary>
            <returns>true if the user cannot edit the column's cells; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">This property is set to false for 
            a column that is bound to a read-only data source. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.SortMode">
            <summary>Gets or sets the sort mode for the column.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.DataGridViewColumnSortMode"></see> that specifies the criteria used 
            to order the rows based on the cell values in a column.</returns>
            <exception cref="T:System.InvalidOperationException">The value assigned to the property 
            conflicts with SelectionMode. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.ToolTipText">
            <summary>Gets or sets the text used for ToolTips.</summary>
            <returns>The text to display as a ToolTip for the column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.ValueType">
            <summary>Gets or sets the data type of the values in the column's cells.</summary>
            <returns>A <see cref="T:System.Type"></see> that describes the run-time class of the values stored in the column's cells.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.Width">
            <summary>Gets or sets the current width of the column.</summary>
            <returns>The width, in pixels, of the column. The default is 100.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting 
            this property is greater than 65536.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.Visible">
            <summary>Gets or sets a value indicating whether the column is visible.</summary>
            <returns>true if the column is visible; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumn.DefaultCellStyle">
            <summary>Gets or sets the column's default cell style.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see> that represents the default style of the cells in the column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.IBOEditorControl">
            <summary>
            Provides an interface for a control to edit an individual Business object,. 
            The control that is using this control can obtain and display any errors that have occured for the Business object associated with this control.
            The list of errors can be obtained via the Errors method.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBusinessObjectControl">
            <summary>
            Represents a control that represents a single business object.
            The primary purpose of this interface is to ensure that a master
            control can access (get and set) the current business object held in a sub-control
            that inherits from this interface.  See IBOColTabControl for an
            example usage.
            This is the interface that is used for viewing the current state
            of a business object.
            There are various interfaces and controls that inherit from this control
            which are used for editing a Business Object.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBusinessObjectControl.BusinessObject">
            <summary>
            Gets or sets the business object being represented
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IBOEditorControl.ApplyChangesToBusinessObject">
            <summary>
            Applies any changes that have occured in any of the Controls on this control's to their related
            Properties on the Business Object.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOEditorControl.HasErrors">
            <summary>
            Does the business object controlled by this control or any of its Aggregate or Composite children have and Errors.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOEditorControl.HasWarning">
            <summary>
            Does the Business Object controlled by this control or any of its Aggregate or Composite children have and warnings.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOEditorControl.Errors">
            <summary>
             Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOEditorControl.IsDirty">
            <summary>
            Does the business object being managed by this control have any edits that have not been persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.IBOEditorControl.Warnings">
            <summary>
            Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IBOPanelEditorControl">
            <summary>
            This is an interface for the Windows and VWG controls that implement the 
            ability to edit a Business Object where the business object is being edited via
             a Panel with the associated <see cref="T:Habanero.UI.Base.PanelInfo"/>s and <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>s.<br/>
            The <see cref="T:Habanero.UI.Base.IPanelInfo"/> is built from the <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> that is part of the <see cref="T:Habanero.Base.IClassDef"/><br/>
            This interface therefore implements both the <see cref="T:Habanero.UI.Base.IBOEditorControl"/> and the <see cref="T:Habanero.UI.Base.IBusinessObjectPanel"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBusinessObjectPanel">
            <summary>
            Represents a panel containing a PanelInfo used to edit a single business object.
            This inherits from the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBusinessObjectPanel.PanelInfo">
            <summary>
            Gets and sets the PanelInfo object created by the control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ErrorList">
            <summary>
            A ReadOnly collection of Errors Or Warnings for a Business Object and its children Business objects.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IListViewItemCollection">
            <summary>
            Represents the collection of items in a ListView control or assigned to a ListViewGroup
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGroupControl">
            <summary>
            Manages a related set of Controls. The controls managed by this control 
             may be other Group Controls or may be Leaf Controls. A Typical Example of
            I figure the pattern out better
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGroupControl.AddControl(Habanero.UI.Base.IControlHabanero,System.String,System.Int32,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in the appropriate Child Control Type.
            </summary>
            <param name="contentControl">The control that is being placed as a child within this control. The content control could be 
             a Panel of <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>s or any other child control</param>
            <param name="headingText">The heading text that will be shown as the Header for this Group e.g. For a <see cref="T:Habanero.UI.Base.ITabControl"/>
              this will be the Text shown in the Tab for a <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/> this will be the text shown
              on the Collapse Panel and for an <see cref="T:Habanero.UI.Base.IGroupBox"/> this will be the title of the Group Box.</param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with any other spacing required will be used as the minimum height for the ChildControlCreated</param>
            <param name="minimumControlWidth">The minimum width that the <paramref name="contentControl"/> can be</param>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IListBoxObjectCollection">
            <summary>
            Represents the collection of items in a ListBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxObjectCollection.Add(System.Object)">
            <summary>
            Adds an item to the list of items for a ListBox
            </summary>
            <param name="item">An object representing the item to add to the collection</param>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxObjectCollection.Remove(System.Object)">
            <summary>
            Removes the specified object from the collection
            </summary>
            <param name="item">An object representing the item to remove from the collection</param>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxObjectCollection.Clear">
            <summary>
            Removes all items from the collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxObjectCollection.Contains(System.Object)">
            <summary>
            Determines if the specified item is located within the collection
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>true if the item is located within the collection; otherwise, false</returns>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxObjectCollection.IndexOf(System.Object)">
            <summary>
            Retrieves the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>The zero-based index where the item is
            located within the collection; otherwise, -1</returns>
        </member>
        <member name="P:Habanero.UI.Base.IListBoxObjectCollection.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IListBoxObjectCollection.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index within the collection
            </summary>
            <param name="index">The index of the item in the collection to retrieve</param>
            <returns>An object representing the item located at the
            specified index within the collection</returns>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewColumnCollection">
            <summary>
            Represents a collection of DataGridViewColumn objects in a DataGridView control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewColumnCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewColumnCollection.Add(Habanero.UI.Base.IDataGridViewColumn)">
            <summary>
            Adds a column to the collection where the column has been
            wrapped using the IDataGridViewColumn pattern
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewColumnCollection.Add(System.String,System.String)">
            <summary>
            Adds a DataGridViewTextBoxColumn with the given column name and column header text to the collection
            </summary>
            <returns>The index of the column</returns>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewColumnCollection.Contains(System.String)">
            <summary>Determines whether the collection contains the column referred to by the given name. </summary>
            <returns>true if the column is contained in the collection; otherwise, false.</returns>
            <param name="columnName">The name of the column to look for.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnName"/> is null.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumnCollection.Count">
            <summary>
            Gets the number of columns held in this collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the column at the given index in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewColumnCollection.Item(System.String)">
            <summary>
            Gets or sets the column of the given name in the collection
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IComboBoxObjectCollection">
            <summary>
            Represents the collection of items in a ComboBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.Add(System.Object)">
            <summary>
            Adds an item to the list of items for a ComboBox
            </summary>
            <param name="item">An object representing the item to add to the collection</param>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.Remove(System.Object)">
            <summary>
            Removes the specified item from the ComboBox
            </summary>
            <param name="item">The System.Object to remove from the list</param>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.Clear">
            <summary>
            Removes all items from the ComboBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.Contains(System.Object)">
            <summary>
            Determines if the specified item is located within the collection
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>true if the item is located within the collection; otherwise, false</returns>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.IndexOf(System.Object)">
            <summary>
            Retrieves the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>The zero-based index where the item is
            located within the collection; otherwise, -1</returns>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxObjectCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the item is inserted</param>
            <param name="item">An object representing the item to insert.</param>
            <exception cref="T:System.ArgumentNullException">The item was null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index was less than zero.-or- The index was greater than the count of items in the collection.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IComboBoxObjectCollection.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBoxObjectCollection.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index within the collection
            </summary>
            <param name="index">The index of the item in the collection to retrieve</param>
            <returns>An object representing the item located at the
            specified index within the collection</returns>
        </member>
        <member name="T:Habanero.UI.Base.CheckBoxMapper">
            <summary>
            Wraps a CheckBox in order to display and capture a boolean property of the business object 
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ControlMapper">
            <summary>
            A superclass to model a mapper that wraps a control in
            order to display and capture information related to a business object 
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IControlMapper">
            <summary>
            An interface to model a mapper that wraps a control in
            order to display and capture information related to a business object 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapper.UpdateControlValueFromBusinessObject">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapper.UpdateErrorProviderErrorMessage">
            <summary>
            Sets the Error Provider Error with the appropriate value for the property e.g. if it is invalid then
             sets the error provider with the invalid reason else sets the error provider with a zero length string.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapper.GetErrorMessage">
            <summary>
            Returns the Error Provider's Error message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapper.SetPropertyAttributes(System.Collections.Hashtable)">
            <summary>
            A form field can have attributes defined in the class definition.
            These attributes are passed to the control mapper via a hashtable
            so that the control mapper can adjust its behaviour accordingly.
            </summary>
            <param name="attributes">A hashtable of attributes, which consists
            of name-value pairs, where name is the attribute name.  This is usually
            set in the XML definitions for the class's user interface.</param>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapper.Control">
            <summary>
            Returns the control being mapped
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapper.PropertyName">
            <summary>
            Returns the name of the property being edited in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapper.BusinessObject">
            <summary>
            Controls access to the business object being represented
            by the control.  Where the business object has been amended or
            altered, the <see cref="M:Habanero.UI.Base.IControlMapper.UpdateControlValueFromBusinessObject"/> method can be called here to 
            implement the changes in the control itself.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapper.ErrorProvider">
            <summary>
            Gets the error provider for this control <see cref="T:Habanero.UI.Base.IErrorProvider"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapper.ClassDef">
            <summary>
             Gets and Sets the Class Def of the Business object whose property
             this control maps.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper.log">
            <summary>
            the <see cref="T:log4net.ILog"/> used to log any messages for this class or its children
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._isReadOnly">
            <summary>
            Is the property Read Only.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._attributes">
            <summary>
            A Hash table of additional Attributes available for this Control Mapper e.g. for DateTimePickerMapper may have date format
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._businessObject">
            <summary>
            The Business Object being mapped
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._control">
            <summary>
            The Control being mapped to 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._isEditable">
            <summary>
            Whether the control must allow editing or not.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ControlMapper._propertyName">
            <summary>
            The Property Name being mapped
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to instantiate a new instance of the class
            </summary>
            <param name="ctl">The control object to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether the control is read only.
            If so, it then becomes disabled.  If not,
            handlers are assigned to manage key presses.</param>
            <param name="factory"></param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.UpdateControlValueFromBusinessObject">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.OnBusinessObjectChanged">
            <summary>
            An overridable method to provide custom logic to carry out
            when the business object is changed
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.CurrentBOProp">
            <summary>
            Returns the <see cref="T:Habanero.Base.IBOProp"/> object being mapped to this control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.IsPropertyVirtual">
            <summary>
            is the property a virtual property i.e. is it loaded via reflection or via a relationship.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.UpdateIsEditable">
            <summary>
            Updates the isEditable flag and updates 
            the control according to the current state
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.BOPropValueUpdatedHandler(System.Object,System.EventArgs)">
            <summary>
            Handler to carry out changes where the value of a business
            object property has changed
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.Create(System.String,System.String,Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Creates a new control mapper of a specified type.  If no 'mapperTypeName'
            has been specified, an appropriate mapper for standard controls will
            be assigned, depending on the type of control.
            </summary>
            <param name="mapperTypeName">The class name of the mapper type
            (e.g. ComboBoxMapper).  The current namespace of this
            ControlMapper class will then be prefixed to the name.</param>
            <param name="mapperAssembly">The assembly where the mapper is
            located</param>
            <param name="ctl">The control to be mapped</param>
            <param name="propertyName">The property name</param>
            <param name="isReadOnly">Whether the control is read-only</param>
            <returns>Returns a new object which is a subclass of ControlMapper</returns>
            <exception cref="T:Habanero.Base.Exceptions.UnknownTypeNameException">An exception is
            thrown if the mapperTypeName does not provide a type that is
            a subclass of the ControlMapper class.</exception>
            <param name="controlFactory">The control factory</param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.GetPropertyValue">
            <summary>
            Returns the property value of the business object being mapped
            </summary>
            <returns>Returns the property value in appropriate object form</returns>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.SetPropertyValue(System.Object)">
            <summary>
            Sets the property value to that provided.  If the property value
            is invalid, the error provider will be given the reason why the
            value is invalid.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.UpdateErrorProviderErrorMessage">
            <summary>
            Sets the Error Provider Error with the appropriate value for the property e.g. if it is invalid then
             sets the error provider with the invalid reason else sets the error provider with a zero length string.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.GetErrorMessage">
            <summary>
            Returns the Error Provider's Error message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.SetPropertyAttributes(System.Collections.Hashtable)">
            <summary>
            A form field can have attributes defined in the class definition.
            These attributes are passed to the control mapper via a hashtable
            so that the control mapper can adjust its behaviour accordingly.
            </summary>
            <param name="attributes">A hashtable of attributes, which consists
            of name-value pairs, where name is the attribute name.  This is usually
            set in the XML definitions for the class's user interface.</param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapper.InitialiseWithAttributes">
            <summary>
            Initialises the control using the attributes already provided, using
            <see cref="M:Habanero.UI.Base.ControlMapper.SetPropertyAttributes(System.Collections.Hashtable)"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.ClassDef">
            <summary>
             Gets and Sets the Class Def of the Business object whose property
             this control maps.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.ErrorProvider">
            <summary>
            Gets the error provider for this control <see cref="T:Habanero.UI.Base.IErrorProvider"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.ControlFactory">
            <summary>
             Returns the Control Factory that this Control Mapper is set up to use
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.IsReadOnly">
            <summary>
             Returns the value of the IsReadonly field as set up in the Control Mappers's construtor.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.Control">
            <summary>
            Returns the control being mapped
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.PropertyName">
            <summary>
            Returns the name of the property being edited in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapper.BusinessObject">
            <summary>
            Gets and sets the business object that has a property
            being mapped by this mapper.  In other words, this property
            does not return the exact business object being shown in the
            control, but rather the business object shown in the
            form.  Where the business object has been amended or
            altered, the <see cref="M:Habanero.UI.Base.ControlMapper.UpdateControlValueFromBusinessObject"/> method is automatically called here to 
            implement the changes in the control itself.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CheckBoxMapper.#ctor(Habanero.UI.Base.ICheckBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to create a new CheckBox mapper object
            </summary>
            <param name="cb">The CheckBox object to be mapped</param>
            <param name="propName">A name for the property</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">the control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.CheckBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the appearance of the control when the value of the
            property has changed internally
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CheckBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            The event handler that is called to update the property on the 
            Business Object when the user has checked or unchecked the CheckBox.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CheckBoxMapper.GetStrategy">
            <summary>
            Gets the custom strategy that is applied to this mapper by the
            control factory, which determines how the Click event is handled.
            See <see cref="T:Habanero.UI.Base.ICheckBoxMapperStrategy"/>.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DefaultBODeletor">
            <summary>
             Provides a controller that deletes business objects.  Where used, this
             can be replaced with a customised version that inherits from
             <see cref="T:Habanero.Base.IBusinessObjectDeletor"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBODeletor.DeleteBusinessObject(Habanero.Base.IBusinessObject)">
            <summary>
             Deletes the given business object
            </summary>
            <param name="businessObject">The business object to delete</param>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewNumericUpDownColumn">
            <summary>
            Represents a column of cells supporting a NumericUpdown
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewCellStyle">
            <summary>
            Represents the formatting and style information applied to individual cells 
            within a DataGridView control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellStyle.ApplyStyle(Habanero.UI.Base.IDataGridViewCellStyle)">
            <summary>Applies the specified <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see> to the current 
            <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see>.</summary>
            <param name="dataGridViewCellStyle">The <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see> to apply 
            to the current <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see>.</param>
            <exception cref="T:System.ArgumentNullException">dataGridViewCellStyle is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellStyle.Clone">
            <summary>Creates an exact copy of this <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see>.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.IDataGridViewCellStyle"></see> that represents an exact copy of this cell style.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCellStyle.Format">
            <summary>Gets or sets the format string applied to the textual content of a <see cref="T:Habanero.UI.Base.IDataGridView"></see> cell.</summary>
            <returns>A string that indicates the format of the cell value. The default is <see cref="F:System.String.Empty"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCellStyle.FormatProvider">
            <summary>Gets or sets the object used to provide culture-specific formatting of <see cref="T:Habanero.UI.Base.IDataGridView"></see> cell values.</summary>
            <returns>An <see cref="T:System.IFormatProvider"></see> used for cell formatting. The default is <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.StringStaticFilter">
            <summary>
            This allows the developer to set a filter that is always applied and is not modifyable or visible to the End user.
            For example this can be used to show only the Non Archived users.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ICustomFilter">
            <summary>
             Provides a means to create custom filters inherits from <see cref="T:Habanero.UI.Base.IControlManager"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IControlManager">
            <summary>
             An interface used to represent a control manager that is responsible for 
             constructing and managing a control. This provides a base for a type of Builder creational pattern.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlManager.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ICustomFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ICustomFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ICustomFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICustomFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.StringStaticFilter.#ctor(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.StringStaticFilter"/>
            </summary>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
            <param name="constantvalue">The Constant Value that is being used in this filter</param>
        </member>
        <member name="M:Habanero.UI.Base.StringStaticFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.StringStaticFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringStaticFilter.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.StringStaticFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringStaticFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringStaticFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.EnumComboBoxMapper">
            <summary>
            Wraps/Decorates a ComboBox in order to display and capture a property of a
            business object that is an enumeration.  A blank item is inserted at the top
            of the list.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ComboBoxMapper">
            <summary>
            Wraps/Decorates a <see cref="T:Habanero.UI.Base.IComboBox"/> in order to display and capture a lookup property of the business object 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ComboBoxMapper._comboBox">
            <summary>
            The actual <see cref="T:Habanero.UI.Base.IComboBox"/> control that is being mapped to the Business Object Property identified by PropertyName.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ComboBoxMapper._collection">
            <summary>
            The actual <see cref="T:System.Collections.Generic.Dictionary`2"/> of values that will be displayed in the combo box. This is a key value dictionary
            where the key contains the value that will be displayed in the ComboBox and the Value is the Unique identifier for the record.
            An object identifier (<see cref="P:Habanero.Base.IBusinessObject.ID"/> - <see cref="P:Habanero.Base.IPrimaryKey.ObjectID"/>) in the case of a <see cref="T:Habanero.BO.BusinessObjectLookupList"/>.
            or the Primary Key (field or composite fileds) in the case of a DatabaseLookupList or the key value for a <see cref="T:Habanero.BO.SimpleLookupList"/>.
            The Application developer can of course implement any other <see cref="T:Habanero.Base.ILookupList"/> that they require.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ComboBoxMapper._rightClickEnabled">
            <summary>
            A boolean to enable or disable right click handling for this <see cref="T:Habanero.UI.Base.IComboBox"/>. Right click handling allows the 
            user to right click and from this a form to allow the editing of Values in the <see cref="T:Habanero.UI.Base.IComboBox"/>. This is only applicable 
            by default to <see cref="T:Habanero.BO.BusinessObjectLookupList"/> or a custom <see cref="T:Habanero.Base.ILookupList"/> defined by the user.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new instance of the class
            </summary>
            <param name="comboBox">The ComboBox object to which the property is mapped</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">The control factory to be used to create controls or strategies e.g. <see cref="T:Habanero.UI.Base.IComboBoxMapperStrategy"/></param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxMapper.SetupComboBoxItems">
            <summary>
            Sets up the items to be listed in the ComboBox
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IComboBoxMapper">
            <summary>
            An interface for a mapper that <br/>
            Wraps/Decorates a ComboBox in order to display and capture a lookup property of the business object 
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IComboBoxMapper.SelectedIndexChangedHandler">
            <summary>
            Gets or sets the SelectedIndexChanged event handler assigned to this mapper
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EnumComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Instantiates a new mapper
            </summary>
            <param name="comboBox">The ComboBox to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">The control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.EnumComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EnumComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EnumComboBoxMapper.SetupComboBoxItems">
            <summary>
            Sets up the items to be listed in the ComboBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.EnumComboBoxMapper.SelectedIndexChangedHandler">
            <summary>
            Gets or sets the SelectedIndexChanged event handler assigned to this mapper
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMainTitleIconControl">
            <summary>
            This control is the Title Control that can be used in many ways
            It is typically used at the top of a form or a Panel where the Title is set to 
            be the Business Objects Tostring and the Icon is set to show the current 
            state of the Business object e.g. Valid/Warning, or to show the Unique Icon
            for the business object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMainTitleIconControl.SetIconImage(System.String)">
            <summary>
            Sets the Image that is shown on the <see cref="P:Habanero.UI.Base.IMainTitleIconControl.Icon"/> label.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Habanero.UI.Base.IMainTitleIconControl.RemoveIconImage">
            <summary>
            Removes any Image shown on the <see cref="P:Habanero.UI.Base.IMainTitleIconControl.Icon"/> Label
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMainTitleIconControl.SetValidImage">
            <summary>
            Sets the Image to a standard valid image.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMainTitleIconControl.SetInvalidImage">
            <summary>
            Sets the Image to a standard invalid image.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainTitleIconControl.Panel">
            <summary>
            Gets the Panel that the Title Lable and Icon Label are added to.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainTitleIconControl.Icon">
            <summary>
            The <see cref="T:Habanero.UI.Base.ILabel"/> that contains the Icon being displayed.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainTitleIconControl.Title">
            <summary>
            The <see cref="T:Habanero.UI.Base.ILabel"/> that contains the Title being displayed.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainTitleIconControl.ControlFactory">
            <summary>
            Gets the control factory that is used by this control to create its Icon and Panel
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.WizardControl">
            <summary>
            Stores common constants used by wizard controls
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.WizardControl.PADDING">
            <summary>
            The Padding that is used at the top, left, right and bottom when placing a wizard step in the control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IWizardControl">
            <summary>
            Provides the controls for a wizard, which guides users through a process one
            step at a time.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardControl.Next">
            <summary>
            Attempts to go to the next step in the wizard.  If this is disallowed by the wizard controller a MessagePosted event will be fired.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardControl.Previous">
            <summary>
            Attempts to go to the previous step in the wizard.
             </summary>
            <exception cref="T:Habanero.UI.Base.WizardStepException">If the wizard is on the first step this exception will be thrown.</exception>
        </member>
        <member name="M:Habanero.UI.Base.IWizardControl.Start">
            <summary>
            Starts the wizard by moving to the first step.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardControl.Finish">
            <summary>
            Calls the finish method on the controller to being the completion process.  If this is successful the Finished event is fired.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IWizardControl.Finished">
            <summary>
            Raised when the wizard is complete to notify the containing control or controlling object.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IWizardControl.MessagePosted">
            <summary>
            Raised when a message is communicated so the controlling object can display or log the message.
             uses an <see cref="T:System.Action`1"/> which is merely a predifined delegate that takes one parameter of Type T and
            returns a void.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IWizardControl.StepChanged">
            <summary>
            Raised when the wizard step changes. The new step is passed through as an event argument.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.CurrentControl">
            <summary>
            Gets the control that is currently displayed in the WizardControl (the current wizard step's control)
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.NextButton">
            <summary>
            Gets the Next Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.PreviousButton">
            <summary>
            Gets the Previous Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.WizardController">
            <summary>
            Gets or sets the WizardController.  Upon setting the controller, the Start() method is called to begin the wizard.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.WizardStepPanel">
            <summary>
            The panel that the controls are physically being placed on.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardControl.CancelButton">
            <summary>
            Gets the Cancel Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MultiSelectorButton">
            <summary>
            Lists the available buttons for a multi-selector
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MultiSelectorButton.Select">
            <summary>
            Copies the highlighted item(s) to the selections list
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MultiSelectorButton.Deselect">
            <summary>
            Removes the highlighted item(s) from the selections list
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MultiSelectorButton.SelectAll">
            <summary>
            Copies all available items to the selections list
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MultiSelectorButton.DeselectAll">
            <summary>
            Removes all available items from the selections list
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMultiSelector`1">
            <summary>
            Provides a multiselector control. The type to be displayed in the 
            lists is set by the template type.  The multiselector helps the user to
            select from an available list of options.  Unselected options appear on the
            left and selected ones appear on the right.  The AllOptions consists
            of all options, both selected and unselected - no object may appear in the
            selected list if it is not also in the AllOptions list.  All list
            control is managed through the Model object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMultiSelector`1.GetButton(Habanero.UI.Base.MultiSelectorButton)">
            <summary>
            Gets the button control as indicated by the <see cref="T:Habanero.UI.Base.MultiSelectorButton"/> enumeration.
            </summary>
            <param name="buttonType">The type of button</param>
            <returns>Returns a button</returns>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.AllOptions">
            <summary>
            Gets and sets the complete list of options available to go in
            either panel.  SelectedOptions must also reside in this list.
            AvailableOptions will be calculated as the remaining options when
            SelectedOptions are taken from this list.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.AvailableOptionsListBox">
            <summary>
            Gets the ListBox control that contains the available options that
            have not been selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.AvailableOptionsGroupBox">
            <summary>
            Gets the GroupBox control that contains the available options that
            have not been selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.Model">
            <summary>
            Gets the model that manages the options
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.SelectedOptions">
            <summary>
             Gets or sets the list of items already selected (which is a subset of
             AllOptions).  This list typically appears on the right-hand side.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.SelectedOptionsListBox">
            <summary>
            Gets the ListBox control that contains the options that have been
            selected from those available
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.SelectedOptionsGroupBox">
            <summary>
            Gets the GroupBox control that contains the options that have been
            selected from those available
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMultiSelector`1.SelectionsView">
            <summary>
            Gets a view of the SelectedOptions collection
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ILabel">
            <summary>
            Represents a label
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ILabel.PreferredWidth">
            <summary>
            Gets the preferred width of the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ILabel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control 
            is automatically resized to display its entire contents
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ILabel.TextAlign">
            <summary>
            Gets or sets the alignment of text in the label
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FlowLayoutManager">
            <summary>
            Manages the layout of controls in a user interface by adding
            components in the manner of a horizontal text line that wraps to
            the next line.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.LayoutManager">
            <summary>
            A super-class for layout managers that dictate how and where controls
            are placed in user interface
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.LayoutManager.DefaultBorderSize">
            <summary>
            The default border size used in all layout managers. The Border size is the 
            Gap between the Edge of the parent control and the placement of the control in it.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.LayoutManager.DefaultGapSize">
            <summary>
            The default gap size is the gap between the various controls placed on the parent control
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.LayoutManager._controlFactory">
            <summary>
            The <see cref="T:Habanero.UI.Base.IControlFactory"/> used to create any controls required for this layout manager
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManager.#ctor(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new layout manager
            </summary>
            <param name="managedControl">The control to manage</param>
            <param name="controlFactory">control factory used to create any child controls</param>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManager.ManagedControlResizeHandler(System.Object,System.EventArgs)">
            <summary>
            A handler to deal with the event where a control has been
            resized by the user
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManager.RefreshControlPositions">
            <summary>
            Updates the layout and appearance of the managed controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManager.Refresh">
            <summary>
            Updates the layout and appearance of the managed controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManager.AddControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Add a control to the layout
            </summary>
            <param name="control">The control to add</param>
            <returns>Returns the control added</returns>
        </member>
        <member name="P:Habanero.UI.Base.LayoutManager.ManagedControl">
            <summary>
            Gets and sets the managed control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LayoutManager.BorderSize">
            <summary>
            Gets and sets the attribute controlling the border size
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LayoutManager.GapSize">
            <summary>
            Gets and sets the attribute controlling the gap size
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.#ctor(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new manager
            </summary>
            <param name="managedControl">The control to manage e.g. a Panel</param>
            <param name="controlFactory">The factory which generates controls</param>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Adds a control to the layout
            </summary>
            <param name="control">The control to add</param>
            <returns>Returns the control once it has been added</returns>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.ControlVisibleChangedHandler(System.Object,System.EventArgs)">
            <summary>
            A handler called when a control has had its visibility altered
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.ControlResizedHandler(System.Object,System.EventArgs)">
            <summary>
            A handler called when a control has been resized
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.RefreshControlPositions">
            <summary>
            Updates the layout and appearance of the managed controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.MoveCurrentPosToStartOfNextRow(System.Int32)">
            <summary>
            Moves the current placement position to the beginning of the next row of items
            </summary>
            <param name="currentRowHeight">The current row height</param>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.SetControlPosition(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Calculates the control's position in the user interface
            </summary>
            <param name="ctl">The control in question</param>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.ShiftControlsRightForCentering(System.Int32,System.Int32)">
            <summary>
            Shift controls right when centred is alignment is used
            </summary>
            <param name="startControlNum">The starting control number</param>
            <param name="endControlNum">The ending control number</param>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.ControlDoesNotFitOnCurrentRow(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Informs if the specified control fails to fit on the current row
            of controls
            </summary>
            <param name="ctl">The control in question</param>
            <returns>Returns true if the item doesn't fit, false if it 
            does</returns>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.NewLine">
            <summary>
            Inserts a new line.  This is like a line break or carriage return for controls. The next control
            will start at the control's margin (depending on alignment).
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.AddGlue">
            <summary>
            Adds glue that connects two controls together.  For example, if you've just added a label
            and want to ensure the textbox you're adding next is always next to the label, add glue
            between adding the label and adding the textbox.  In this way, if you resize the control such that
            the textbox doesn't fit on the line, both the label and the textbox will move to the next line together.
            This must be called immediatly after adding the label. The next control to be added will be the control the
            label is glued to.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.IsGluedToAnotherControl(System.Int32)">
            <summary>
            Checks for glue at a position (a position being a point between two controls.  
            See <see cref="M:Habanero.UI.Base.FlowLayoutManager.AddGlue"/>
            </summary>
            <param name="pos">The position to check for glue</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.FlowLayoutManager.RemoveControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Removes a control.
            </summary>
            <param name="controlHabanero">Control to be removed.</param>
            <returns>The control being removed.</returns>
        </member>
        <member name="P:Habanero.UI.Base.FlowLayoutManager.Alignment">
            <summary>
            Edits the current alignment setting.  If the controls are right aligned, the first added control
            will show at the rightmost point.
            <see cref="T:Habanero.UI.Base.FlowLayoutManager.Alignments"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FlowLayoutManager.Alignments">
            <summary>
            An enumeration that indicates whether a control should be
            placed to the left, right or centre of the other controls already
            placed
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FlowLayoutManager.Alignments.Left">
            <summary>
             Left align the controls
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FlowLayoutManager.Alignments.Right">
            <summary>
             Right align the controls
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FlowLayoutManager.Alignments.Centre">
            <summary>
            Centre the controls
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.INumericUpDown">
            <summary>
            Represents a spin box (also known as an up-down control) that displays numeric values
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.INumericUpDown.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the spin box (also known as an up-down control)
            specifying the starting position and number of characters to select
            </summary>
            <param name="i">The position of the first character to be selected</param>
            <param name="length">The total number of characters to be selected</param>
        </member>
        <member name="E:Habanero.UI.Base.INumericUpDown.Enter">
            <summary>
            Occurs when the control is entered
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.INumericUpDown.ValueChanged">
            <summary>
            Occurs when the <see cref="T:Habanero.UI.Base.INumericUpDown"/>.<see cref="P:Habanero.UI.Base.INumericUpDown.Value"/> property has been changed in some way.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.INumericUpDown.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display. The default is 0.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.INumericUpDown.Minimum">
            <summary>
            Gets or sets the minimum allowed value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.INumericUpDown.Maximum">
            <summary>
            Gets or sets the maximum value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.INumericUpDown.Value">
            <summary>
            Gets or sets the value assigned
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.INumericUpDown.TextAlign">
            <summary>
            Gets or sets the alignment of text in the up-down control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.LookupComboBoxMapper">
            <summary>
            Wraps/Decorates a ComboBox in order to display and capture a lookup property of the business object 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise the mapper
            </summary>
            <param name="cbx">The ComboBox to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">The control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.SetupLookupList(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the lookup list to the lookupList Values
            </summary>
            <param name="lookupList"></param>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.SetLookupList(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Sets the lookuplist used to populate the items in the ComboBox.
            </summary>
            <param name="lookupList">The items used to populate the list</param>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.DoUpdateControlValueFromBO">
            <summary>
            This is a hack that allows Extended Combo box mapper to use Lookup ComboBox mapper code
             without having to inherit from it.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.SetValueFromLookupList">
            <summary>
            Populates the ComboBox's list of items using the
            strings provided by the colleciton
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.SetupLookupList">
            <summary>
            Sets up the list of items to display and calls SetLookupList()
            to populate the ComboBox with this list
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.CustomiseLookupList(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Do customisation of the Lookup list by overriding this method in an inheritor.
            </summary>
            <param name="col">The look up list retrieved from the businessobject that will be customised</param>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.GetPropertyValue">
            <summary>
            Returns the property value of the business object being mapped
            </summary>
            <returns>Returns the property value in appropriate object form</returns>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.SetupComboBoxItems">
            <summary>
            Sets up the items to be listed in the ComboBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.InitialiseWithAttributes">
            <summary>
            Initialises the control using the attributes already provided, using
            <see cref="M:Habanero.UI.Base.ControlMapper.SetPropertyAttributes(System.Collections.Hashtable)"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LookupComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LookupComboBoxMapper.KeyPressHandler">
            <summary>
            Gets or sets the KeyPress event handler assigned to this mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LookupComboBoxMapper.SelectedIndexChangedHandler">
            <summary>
            Gets or sets the SelectedIndexChanged event handler assigned to this mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LookupComboBoxMapper.LookupList">
            <summary>
            Gets and sets the lookup list used to populate the items in the
            ComboBox.  This method is typically called by SetupLookupList().
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.LookupComboBoxMapper.MapperStrategy">
            <summary>
            Gets or sets the strategy assigned to this mapper <see cref="T:Habanero.UI.Base.IComboBoxMapperStrategy"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.BorderLayoutManager">
            <summary>
            Manages the layout of controls in a user interface by having a
            component assigned a compass position.  For instance, having the
            "east" position assigned will result in the control being placed
            against the right border.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.#ctor(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initalise a new layout manager
            </summary>
            <param name="managedControl">The control to manage (eg. use "this"
            if you create the manager inside a form class that you will be
            managing)</param>
            <param name="controlFactory">The control factory that will be used to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.RefreshControlPositions">
            <summary>
            Updates the layout and appearance of the managed controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Add a control to the layout
            </summary>
            <param name="control">The control to add</param>
            <returns>Returns the control added</returns>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.BorderLayoutManager.Position)">
            <summary>
            Add a control to the layout at the specified position
            </summary>
            <param name="control">The control to add</param>
            <param name="pos">The position at which to add the control</param>
            <returns>Returns the control added</returns>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.BorderLayoutManager.Position,System.Boolean)">
            <summary>
            Add a control to the layout
            </summary>
            <param name="control">The control to add</param>
            /// <param name="pos">The position at which to add the control</param>
            <param name="includeSplitter">True to include a splitter between the controls</param>
            <returns>Returns the control added</returns>
        </member>
        <member name="M:Habanero.UI.Base.BorderLayoutManager.SetupDockOfControl(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.BorderLayoutManager.Position)">
            <summary>
            Sets how the specified control is docked within its parent
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.BorderLayoutManager.Position">
            <summary>
            An enumeration to specify different layout positions that can
            be assigned
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.BorderLayoutManager.Position.Centre">
            <summary>
             Centre position
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.BorderLayoutManager.Position.East">
            <summary>
             East position (right)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.BorderLayoutManager.Position.West">
            <summary>
             West position (left)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.BorderLayoutManager.Position.North">
            <summary>
             North position (top)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.BorderLayoutManager.Position.South">
            <summary>
             South position (bottom)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ListBoxCollectionManager">
            <summary>
            This class provides mapping from a business object collection to a
            user interface ListBox.  This mapper is used at code level when
            you are explicitly providing a business object collection.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.#ctor(Habanero.UI.Base.IListBox,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to create a new collection ListBox mapper object.
            </summary>
            <param name="listBox">The ListBox object to map</param>
            <param name="controlFactory">The control factory used to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.SetCollection(Habanero.Base.IBusinessObjectCollection,System.Boolean)">
            <summary>
            Sets the collection being represented to a specific collection
            of business objects
            </summary>
            <param name="collection">The collection to represent</param>
            <param name="includeBlank">Whether to a put a blank item at the
            top of the list</param>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.BusinessObjectRemovedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been removed from
            the collection - it subsequently removes the item from the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.BusinessObjectAddedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been added to
            the collection - it subsequently adds the item to the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.SetListBoxCollection(Habanero.UI.Base.IListBox,Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Set the list of objects in the ListBox to a specific collection of
            business objects.<br/>
            Important: If you are changing the business object collection,
            use the SetBusinessObjectCollection method instead, which will call this method
            automatically.
            </summary>
            <param name="cbx">The ListBox being controlled</param>
            <param name="col">The business object collection used to populate the items list</param>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.Clear">
            <summary>
             Clears all items in the Combo Box and sets the selected item and <see cref="P:Habanero.UI.Base.ListBoxCollectionManager.Collection"/>
             to null
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ListBoxCollectionManager.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="E:Habanero.UI.Base.ListBoxCollectionManager.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.SelectedBusinessObject">
            <summary>
            Returns the business object, in object form, that is currently 
            selected in the ListBox list, or null if none is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.Control">
            <summary>
            Returns the ListBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.ControlFactory">
            <summary>
            Returns the control factory used to generate controls
            such as the label
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.Collection">
            <summary>
            Returns the collection used to populate the items shown in the ListBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.NoOfItems">
            <summary>Gets the number of rows displayed in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</summary>
            <returns>The number of rows in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ListBoxCollectionManager.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBOComboBoxSelector">
            <summary>
            Provides an interface that is specialised for showing a collection of 
            Business Objects in a <see cref="T:Habanero.UI.Base.IComboBox"/> and allowing the user to select one.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBOColSelectorControl">
            <summary>
            Provides a common interface that is specialised for showing a collection of 
            Business Objects and allowing the user to select one (Or in some cases more than one)
            The common controls used for selecting business objects are ComboBox, ListBox, ListView, Grid,
             <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/>, <see cref="T:Habanero.UI.Base.IBOColTabControl"/>, a <see cref="T:Habanero.UI.Base.IMultiSelector`1"/>
             or an <see cref="T:Habanero.UI.Base.ITreeView"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IBOColSelectorControl.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IBOColSelectorControl.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="P:Habanero.UI.Base.IBOColSelectorControl.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOColSelectorControl.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IBOColSelectorControl.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOColSelectorControl.NoOfItems">
            <summary>Gets the number of rows displayed in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</summary>
            <returns>The number of rows in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IBOColSelectorControl.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOComboBoxSelector.ComboBox">
            <summary>
             Returns the Underlying ComboBoxControl that is used by this selector
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IOKCancelDialogFactory">
            <summary>
            Creates OK/Cancel dialogs which contain OK and Cancel buttons, as well
            as control placed above the buttons, which the developer must provide.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IOKCancelDialogFactory.CreateOKCancelPanel(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Creates a panel containing OK and Cancel buttons
            </summary>
            <param name="nestedControl">The control to place above the buttons</param>
            <returns>Returns the created panel</returns>
        </member>
        <member name="M:Habanero.UI.Base.IOKCancelDialogFactory.CreateOKCancelForm(Habanero.UI.Base.IControlHabanero,System.String)">
            <summary>
            Creates a form containing OK and Cancel buttons
            </summary>
            <param name="nestedControl">The control to place above the buttons</param>
            <param name="formTitle">The title shown on the form</param>
            <returns>Returns the created form</returns>
        </member>
        <member name="T:Habanero.UI.Base.IOKCancelPanel">
            <summary>
            Represents a panel that contains an OK and Cancel button
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IPanel">
            <summary>
            Used to group collections of controls
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IOKCancelPanel.OKButton">
            <summary>
            Gets the OK button
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IOKCancelPanel.CancelButton">
            <summary>
            Gets the Cancel button
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IEditableGridButtonsControl">
            <summary>
            Provides a set of buttons for use on an <see cref="T:Habanero.UI.Base.IEditableGridControl"/>.
            By default, Save and Cancel buttons are available.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IButtonGroupControl">
            <summary>
            Manages a group of buttons that display next to each other
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IButtonGroupControl.AddButton(System.String)">
            <summary>
            Adds a new button to the control with a specified name
            </summary>
            <param name="buttonName">The name to appear on the button</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="M:Habanero.UI.Base.IButtonGroupControl.AddButton(System.String,System.EventHandler)">
            <summary>
            Adds a new button to the control with a specified name and
            with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="buttonName">The name to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="M:Habanero.UI.Base.IButtonGroupControl.AddButton(System.String,System.String,System.EventHandler)">
            <summary>
            Adds a new button to the control with a specified name, specified text and
            with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="buttonName">The name that the button is created with</param>
            <param name="buttonText">The text to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="M:Habanero.UI.Base.IButtonGroupControl.SetDefaultButton(System.String)">
            <summary>
            Sets the default button in this control that would be chosen
            if the user pressed Enter without changing the focus
            </summary>
            <param name="buttonName">The name of the button</param>
        </member>
        <member name="P:Habanero.UI.Base.IButtonGroupControl.Item(System.String)">
            <summary>
            A facility to index the buttons in the control so that they can
            be accessed like an array (eg. button["name"])
            </summary>
            <param name="buttonName">The name of the button</param>
            <returns>Returns the button found by that name, or null if not
            found</returns>
        </member>
        <member name="P:Habanero.UI.Base.IButtonGroupControl.ButtonSizePolicy">
            <summary>
            Specifies the object that calculates button sizes for this <see cref="T:Habanero.UI.Base.IButtonGroupControl"/>.  By default the buttons are all equally sized
            based on the width of the text on the largest button.  To set your own button sizes set this to 
            an instance of <see cref="T:Habanero.UI.Base.ButtonSizePolicyUserDefined"/> class.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IEditableGridButtonsControl.SaveClicked">
            <summary>
            Fires when the Save button is clicked
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IEditableGridButtonsControl.CancelClicked">
            <summary>
            Fires when the Cancel button is clicked
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.CheckUserConfirmsDeletion">
            <summary>
            Checks whether the user wants to delete selected rows
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DeleteKeyBehaviours">
            <summary>
            Indicates what action should be taken when a selection of
            cells is selected and the Delete key is pressed.
            This has no correlation to how DataGridView handles the
            Delete key when the full row has been selected.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DeleteKeyBehaviours.None">
            <summary>Nothing is done</summary>
        </member>
        <member name="F:Habanero.UI.Base.DeleteKeyBehaviours.DeleteRow">
            <summary>Each row containing part of the selection is deleted</summary>
        </member>
        <member name="F:Habanero.UI.Base.DeleteKeyBehaviours.ClearContents">
            <summary>Clears the contents of the selected cells</summary>
        </member>
        <member name="T:Habanero.UI.Base.IEditableGrid">
            <summary>
            Provides a grid on which the user can edit data and add new business objects directly.
            <br/>
            IMPORTANT: This grid does not provide any buttons or menus for users
            to save the changes they have made, and all changes will be lost if the form
            is closed and changes are not saved programmatically.  Either carry out a dirty check when the
            parent form is closed and take appropriate save action using SaveChanges(), or use an
            <see cref="T:Habanero.UI.Base.IEditableGridControl"/> , which provides Save and Cancel buttons. 
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IReadOnlyGrid">
            <summary>
            Provides a grid on which a business object collection can be
            listed but not edited.  If you would like more functionality,
            including the ability to add, edit and delete the objects, use
            <see cref="T:Habanero.UI.Base.IReadOnlyGridControl"/> instead.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGridBase">
            <summary>
            Provides an Interface that is used by the Grid's in Habanero this extends the <see cref="T:Habanero.UI.Base.IDataGridView"/> so that it is adapted to show business objects
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridView">
            <summary>
            Displays data in a customizable grid. This is the commmon interface that is implemented by Windows
            and Visual web Gui or any other Controls framework. The use of this interface allows the architecture
            to swap out any control library with any other control library without affecting the program.
            This allows an application written using Habanero to easily be transformed from a windows app to a
            Visual Web Gui App.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.BeginEdit(System.Boolean)">
            <summary>Puts the current cell in edit mode.</summary>
            <returns>true if the current cell is already in edit mode or successfully enters edit mode; otherwise, false.</returns>
            <param name="selectAll">true to select all the cell's contents; false to not select any contents.</param>
            <exception cref="T:System.Exception">Initialization of the editing cell value failed and either
            there is no handler for the DataError event or the handler has set the DataGridViewDataErrorEventArgs.ThrowException
            property to true. The exception object can typically be cast to type FormatException</exception>
            <exception cref="T:System.InvalidCastException">The type indicated by the cell's EditType property
            does not derive from the Control type.-or-The type indicated by the cell's EditType property does
            not implement the IDataGridViewEditingControl interface.</exception>
            <exception cref="T:System.InvalidOperationException">CurrentCell is not set to a valid cell.-or-This
            method was called in a handler for the CellBeginEdit event.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.CancelEdit">
            <summary>Cancels edit mode for the currently selected cell and discards any changes.</summary>
            <returns>true if the cancel was successful; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.ClearSelection">
            <summary>Clears the current selection by unselecting all selected cells.</summary>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
            <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            </PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.DisplayedColumnCount(System.Boolean)">
            <summary>Returns the number of columns displayed to the user.</summary>
            <returns>The number of columns displayed to the user.</returns>
            <param name="includePartialColumns">true to include partial columns in the displayed column count; otherwise, false. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.DisplayedRowCount(System.Boolean)">
            <summary>Returns the number of rows displayed to the user.</summary>
            <returns>The number of rows displayed to the user.</returns>
            <param name="includePartialRow">true to include partial rows in the displayed row count; otherwise, false. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.EndEdit">
            <summary>Commits and ends the edit operation on the current cell using the default error context.</summary>
            <returns>true if the edit operation is committed and ended; otherwise, false.</returns>
            <exception cref="T:System.Exception">The cell value could not be committed and either there
            is no handler for the DataError event or the handler has set the DataGridViewDataErrorEventArgs.ThrowException
            property to true.</exception>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.RefreshEdit">
            <summary>Refreshes the value of the current cell with the underlying cell value when the
            cell is in edit mode, discarding any previous value.</summary>
            <returns>true if successful; false if a DataError event occurred.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.SelectAll">
            <summary>Selects all the cells in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.Sort(System.Collections.IComparer)">
            <summary>Sorts the contents of the IDataGridView control using an implementation of the
            <see cref="T:System.Collections.IComparer"></see> interface.</summary>
            <param name="comparer">An implementation of <see cref="T:System.Collections.IComparer"></see> that
            performs the custom sorting operation. </param>
            <exception cref="T:System.InvalidOperationException">VirtualMode is set to true.-or-
            DataSource is not null.</exception>
            <exception cref="T:System.ArgumentNullException">comparer is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.Sort(Habanero.UI.Base.IDataGridViewColumn,System.ComponentModel.ListSortDirection)">
            <summary>Sorts the contents of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control in ascending or
            descending order based on the contents of the specified column.</summary>
            <param name="direction">One of the <see cref="T:System.ComponentModel.ListSortDirection"></see> values. </param>
            <param name="dataGridViewColumn">The column by which to sort the contents of the <see cref="T:Habanero.UI.Base.IDataGridView"></see>. </param>
            <exception cref="T:System.ArgumentException">The specified column is not part of this <see cref="T:Habanero.UI.Base.IDataGridView"></see>
            .-or-The DataSource property has been set and the DataGridViewColumn.IsDataBound property of the specified
            column returns false.</exception>
            <exception cref="T:System.ArgumentNullException">dataGridViewColumn is null.</exception>
            <exception cref="T:System.InvalidOperationException">The VirtualMode property is set to true
            and the DataGridViewColumn.IsDataBound property of the specified column returns false.-or-
            The object specified by the DataSource property does not implement the
            <see cref="T:System.ComponentModel.IBindingList"></see> interface.-or-
            The object specified by the DataSource property has a
            <see cref="P:System.ComponentModel.IBindingList.SupportsSorting"></see> property value of false.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.Sort(System.String,System.Boolean)">
            <summary>
            Sets the sort column and indicates whether
            it should be sorted in ascending or descending order
            </summary>
            <param name="columnName">The column number to sort on</param>
            <param name="ascending">True for ascending order, false for descending order</param>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.UpdateCellValue(System.Int32,System.Int32)">
            <summary>Forces the control to update its display of the cell at the specified location based 
            on its new value, applying any automatic sizing modes currently in effect. </summary>
            <param name="columnIndex">The zero-based column index of the cell with the new value.</param>
            <param name="rowIndex">The zero-based row index of the cell with the new value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">columnIndex is less than zero or greater
            than the number of columns in the control minus one.-or-rowIndex is less than zero or
            greater than the number of rows in the control minus one.</exception>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.ChangeToPageOfRow(System.Int32)">
            <summary>
            When pagination is used, changes the current page to the one containing
            the given row number
            </summary>
            <param name="rowNum">The row that you wish to show the page of.  For example, if your grid has
            30 rows and is set to 20 rows per page, calling ChangeToPageOfRow with an argument
            of 25 will set the page to page 2 since row 25 is on page 2.</param>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridView.Update">
            <summary>
            Updates the Grid with the latest data. (This updates the visual aspects of the grid.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AllowUserToAddRows">
            <summary>Gets or sets a value indicating whether the option to add rows is displayed to the user.</summary>
            <returns>true if the add-row option is displayed to the user; otherwise false. The default is true.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AllowUserToDeleteRows">
            <summary>Gets or sets a value indicating whether the user is allowed to delete rows from
            the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</summary>
            <returns>true if the user can delete rows; otherwise, false. The default is true.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AllowUserToOrderColumns">
            <summary>Gets or sets a value indicating whether manual column repositioning is enabled.</summary>
            <returns>true if the user can change the column order; otherwise, false. The default is false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AllowUserToResizeColumns">
            <summary>Gets or sets a value indicating whether users can resize columns.</summary>
            <returns>true if users can resize columns; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AllowUserToResizeRows">
            <summary>Gets or sets a value indicating whether users can resize rows.</summary>
            <returns>true if all the rows are resizable; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.AutoGenerateColumns">
            <summary>Gets or sets a value indicating whether columns are created automatically when
            the DataSource or DataMember properties are set.</summary>
            <returns>true if the columns should be created automatically; otherwise, false. The default is true.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.ColumnCount">
            <summary>Gets or sets the number of columns displayed in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</summary>
            <returns>The number of columns displayed in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</returns>
            <exception cref="T:System.InvalidOperationException">When setting this property,
            the DataSource property has been set. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 0. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.ColumnHeadersVisible">
            <summary>Gets or sets a value indicating whether the column header row is displayed.</summary>
            <returns>true if the column headers are displayed; otherwise, false. The default is true.</returns>
            <exception cref="T:System.InvalidOperationException">The specified value when setting this
            property is false and one or more columns have an DataGridViewColumn.InheritedAutoSizeMode
            property value of DataGridViewAutoSizeColumnMode.ColumnHeader.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.Columns">
            <summary>Gets a collection that contains all the columns in the control.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewColumnCollection"></see> that contains all the columns
            in the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.CurrentCell">
            <summary>Gets or sets the currently active cell.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewCell"></see> that represents the current cell, or null
            if there is no current cell. The default is the first cell in the first column or null if
            there are no cells in the control.</returns>
            <exception cref="T:System.ArgumentException">The specified cell when setting this property is not
            in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this property cannot be set
            because changes to the current cell cannot be committed or canceled.-or-The specified cell when 
            setting this property is in a hidden row or column. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.CurrentCellAddress">
            <summary>Gets the row and column indexes of the currently active cell.</summary>
            <returns>A <see cref="T:System.Drawing.Point"></see> that represents the row and column indexes 
            of the currently active cell.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.CurrentRow">
            <summary>Gets the row containing the current cell.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see> that represents the row containing the current 
            cell, or null if there is no current cell.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.DataMember">
            <summary>Gets or sets the name of the list or table in the data source for which the 
            <see cref="T:Habanero.UI.Base.IDataGridView"></see> is displaying data.</summary>
            <returns>The name of the table or list in the <see cref="P:Habanero.UI.Base.IDataGridView.DataSource"></see> for which the 
            <see cref="T:Habanero.UI.Base.IDataGridView"></see> is displaying data. The default is <see cref="F:System.String.Empty"></see>.</returns>
            <exception cref="T:System.Exception">An error occurred in the data source and either 
            there is no handler for the DataError event or the handler has set the DataGridViewDataErrorEventArgs.ThrowException
            property to true. The exception object can typically be cast to type <see cref="T:System.FormatException"></see>.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.DataSource">
            <summary>Gets or sets the data source that the <see cref="T:Habanero.UI.Base.IDataGridView"></see> is displaying data for.</summary>
            <returns>The object that contains data for the <see cref="T:Habanero.UI.Base.IDataGridView"></see> to display.</returns>
            <exception cref="T:System.Exception">An error occurred in the data source and either there is no handler 
            for the event or the handler has set the property to true. The exception object can typically be
             cast to type <see cref="T:System.FormatException"></see>.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.FirstDisplayedScrollingRowIndex">
            <summary>
            Gets or sets the index of the row that is the first row displayed on the DataGridView
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.IsCurrentCellDirty">
            <summary>Gets a value indicating whether the current cell has uncommitted changes.</summary>
            <returns>true if the current cell has uncommitted changes; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.IsCurrentRowDirty">
            <summary>Gets a value indicating whether the current row has uncommitted changes.</summary>
            <returns>true if the current row has uncommitted changes; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.MultiSelect">
            <summary>Gets or sets a value indicating whether the user is allowed to select more than one 
            cell, row, or column of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> at a time.</summary>
            <returns>true if the user can select more than one cell, row, or column at a time; otherwise, 
            false. The default is true.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.NewRowIndex">
            <summary>Gets the index of the row for new records.</summary>
            <returns>The index of the row for new records, or -1 if <see cref="P:Habanero.UI.Base.IDataGridView.AllowUserToAddRows"></see> is false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.ReadOnly">
            <summary>Gets a value indicating whether the user can edit the cells of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control.</summary>
            <returns>true if the user cannot edit the cells of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control; 
            otherwise, false. The default is false.</returns>
            <exception cref="T:System.InvalidOperationException">The specified value when setting this property 
            is true, the current cell is in edit mode, and the current cell contains changes that cannot be committed. </exception>
            <exception cref="T:System.Exception">The specified value when setting this property would cause the 
            control to enter edit mode, but initialization of the editing cell value failed and either there 
            is no handler for the DataError event or the handler has set the DataGridViewDataErrorEventArgs.ThrowException
            property to true. The exception object can typically be cast to type <see cref="T:System.FormatException"></see>.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.UseInternalPaging">
            <summary>
            Uses internal paging algorithem
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.ItemsPerPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.TotalPages">
            <summary>
            Gets or sets the total pages.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.TotalItems">
            <summary>
            Gets or sets the total items.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.RowCount">
            <summary>Gets or sets the number of rows displayed in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</summary>
            <returns>The number of rows to display in the <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</returns>
            <exception cref="T:System.ArgumentException">The specified value when setting this property is less 
            than 0.-or-The specified value is less than 1 and <see cref="P:Habanero.UI.Base.IDataGridView.AllowUserToAddRows"></see> is set to true. </exception>
            <exception cref="T:System.InvalidOperationException">When setting this property, the property is set. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.RowHeadersVisible">
            <summary>Gets or sets a value indicating whether the column that contains row headers is displayed.</summary>
            <returns>true if the column that contains row headers is displayed; otherwise, false. The default is true.</returns>
            <exception cref="T:System.InvalidOperationException">The specified value when setting this property 
            is false and the property is set to or .</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.RowHeadersWidth">
            <summary>Gets or sets the width, in pixels, of the column that contains the row headers.</summary>
            <returns>The width, in pixels, of the column that contains row headers. The default is 43.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property 
            is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.Rows">
            <summary>Gets a collection that contains all the rows in the <see cref="T:Habanero.UI.Base.IDataGridView"></see> control.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.IDataGridViewRowCollection"></see> that contains all the rows in the
             <see cref="T:Habanero.UI.Base.IDataGridView"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.SortedColumn">
            <summary>Gets the column by which the <see cref="T:Habanero.UI.Base.IDataGridView"></see> contents are currently sorted.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewColumn"></see> by which the <see cref="T:Habanero.UI.Base.IDataGridView"></see> 
            contents are currently sorted.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.StandardTab">
            <summary>Gets or sets a value indicating whether the TAB key moves the focus to the next 
            control in the tab order rather than moving focus to the next cell in the control.</summary>
            <returns>true if the TAB key moves the focus to the next control in the tab order; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.SelectedRows">
            <summary>
            Gets the collection of currently selected rows
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.SelectedCells">
            <summary>
            Gets the collection of currently selected cells
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IDataGridView.SelectionChanged">
            <summary>
            Occurs when the current selection changes.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.SelectionMode">
            <summary>Gets or sets a value indicating how the cells of the DataGridView can be selected.</summary>
            <returns>One of the DataGridViewSelectionMode values. The default is DataGridViewSelectionMode.RowHeaderSelect.</returns>
            <exception cref="T:System.InvalidOperationException">The specified value when setting this property is DataGridViewSelectionMode.FullColumnSelect or DataGridViewSelectionMode.ColumnHeaderSelect and the DataGridViewColumn.SortMode property of one or more columns is set to DataGridViewColumnSortMode.Automatic.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid DataGridViewSelectionMode value.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridView.Item(System.Int32,System.Int32)">
            <summary>
            Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.
            </summary>
            <param name="columnIndex">The index of the column containing the cell.</param>
            <param name="rowIndex">The index of the row containing the cell</param>
            <returns>The DataGridViewCell at the specified location</returns>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
            <param name="col">The collection of business objects to display.  This
            collection must be pre-loaded.</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.GetBusinessObjectCollection">
            <summary>
            Returns the business object collection being displayed in the grid
            </summary>
            <returns>Returns a business collection</returns>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.GetBusinessObjectRow(Habanero.Base.IBusinessObject)">
            <summary>
             Returns the row for the specified <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
            <param name="businessObject">The <see cref="T:Habanero.Base.IBusinessObject"/> to search for.</param>
            <returns>Returns the row for the specified <see cref="T:Habanero.Base.IBusinessObject"/>, 
             or null if the <see cref="T:Habanero.Base.IBusinessObject"/> is not found in the grid.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.ApplyFilter(Habanero.Base.IFilterClause)">
            <summary>
            Applies a filter clause to the data table and updates the filter.
            The filter allows you to determine which objects to display using
            some criteria.  This is typically generated by an <see cref="T:Habanero.UI.Base.IFilterControl"/>.
            </summary>
            <param name="filterClause">The filter clause</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.SelectedBusinessObjectEdited(Habanero.BO.BusinessObject)">
            <summary>
            Fires an event indicating that the selected business object
            is being edited
            </summary>
            <param name="bo">The business object being edited</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.FireBusinessObjectEditedEvent(Habanero.BO.BusinessObject)">
            <summary>
            Fires an event indicating that the selected business object
            is being edited
            </summary>
            <param name="bo">The business object being edited</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.RefreshGrid">
            <summary>
            Reloads the grid based on the collection returned by GetBusinessObjectCollection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.RefreshBusinessObjectRow(Habanero.Base.IBusinessObject)">
            <summary>
             Refreshes the row values for the specified <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
            <param name="businessObject">The <see cref="T:Habanero.Base.IBusinessObject"/> for which the row must be refreshed.</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridBase.CreateDataSetProvider(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Creates a dataset provider that is applicable to this grid. For example, a readonly grid would
            return a <see cref="T:Habanero.BO.ReadOnlyDataSetProvider"/>, while an editable grid would return an editable one.
            </summary>
            <param name="col">The collection to create the datasetprovider for</param>
            <returns>Returns the data set provider</returns>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.SelectedBusinessObjects">
            <summary>
            Gets a List of currently selected business objects
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IGridBase.CollectionChanged">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.GridLoader">
            <summary>
            Gets and sets the delegated grid loader for the grid.
            <br/>
            This allows the user to implememt a custom
            loading strategy. This can be used to load a collection of business objects into a grid with images or buttons
            that implement custom code. (Grids loaded with a custom delegate generally cannot be set up to filter 
            (grid filters a dataview based on filter criteria),
            but can be set up to search (a business object collection loaded with criteria).
            For a grid to be filterable the grid must load with a dataview.
            <br/>
            If no grid loader is specified then the default grid loader is employed. This consists of parsing the collection into 
            a dataview and setting this as the datasource.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.DataSetProvider">
            <summary>
            Gets the grid's DataSet provider, which loads the collection's
            data into a DataSet suitable for the grid
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.IDColumnName">
            <summary>
             Returns the name of the column being used for tracking the business object identity.
             If a <see cref="T:Habanero.Base.IDataSetProvider"/> is used then it will be the <see cref="P:Habanero.Base.IDataSetProvider.IDColumnName"/>
             Else it will be "HABANERO_OBJECTID".
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IGridBase.BusinessObjectEdited">
            <summary>
            Occurs when a business object is being edited
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IGridBase.RowDoubleClicked">
            <summary>
            Occurs when a row is double-clicked by the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.UiDefName">
            <summary>
            Gets and sets the UI definition used to initialise the grid structure (the UI name is indicated
            by the "name" attribute on the UI element in the class definitions
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridBase.ClassDef">
            <summary>
            Gets and sets the class definition used to initialise the grid structure
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IEditableGrid.RejectChanges">
            <summary>
            Restore the objects in the grid to their last saved state
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IEditableGrid.SaveChanges">
            <summary>
            Saves the changes made to the data in the grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IEditableGrid.DeleteKeyHandler">
            <summary>
            Carries out actions when the delete key on the keyboard is pressed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IEditableGrid.ConfirmDeletion">
            <summary>
            Gets or sets the boolean value that determines whether to confirm
            deletion with the user when they have chosen to delete a row
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IEditableGrid.CheckUserConfirmsDeletionDelegate">
            <summary>
            Gets or sets the delegate that checks whether the user wants to delete selected rows
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IEditableGrid.DeleteKeyBehaviour">
            <summary>
            Indicates what action should be taken when a selection of
            cells is selected and the Delete key is pressed.
            This has no correlation to how DataGridView handles the
            Delete key when the full row has been selected.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IEditableGrid.ComboBoxClickOnce">
            <summary>
            Gets or sets whether clicking on a ComboBox cell causes the drop-down to
            appear immediately.  Set this to false if the user should click twice
            (first to select, then to edit), which is the default behaviour.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridWithPanelControlManager`1">
            <summary>
            TODO: does win version flash error providers?
            TODO: consider when to remove BusinessObjectUpdated event (it is attached and never removed)
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.#ctor(Habanero.UI.Base.IGridWithPanelControl{`0},Habanero.UI.Base.IControlFactory,Habanero.UI.Base.IBusinessObjectControl,System.String)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.GridWithPanelControlManager`1"/>
            </summary>
            <param name="gridWithPanelControl"></param>
            <param name="controlFactory"></param>
            <param name="businessObjectControl"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.CheckRowSelectionCanChange">
            <summary>
            Using the RowValidating event did not work as expected, so this method provides
            a way to check whether the grid selection should be forced back to the previous selection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.SelectBusinessObjectInGrid_NoEvents(Habanero.Base.IBusinessObject)">
            <summary>
            Selects a BO in the grid without firing the events, which has unintended results
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.CallApplyChangesOnPanelInfo">
            <summary>
            If a custom IBusinessObjectControl has been provided (ie. not an IBusinessObjectPanel)
            then the developer is responsible for appropriate feedback to the user and updating
            of the business object status.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridWithPanelControlManager`1.CheckUserWantsToSave">
            <summary>
            Displays a message box to the user to check if they want to save
            the selected business object.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.ReadOnlyGridControl">
            <summary>
             Returns the ReadOnly Grid Control that is used as the Selector control for the <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.BusinessObjectControl">
            <summary>
             Returns the Business Object Control that is used for editing the Business Object for the <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.Buttons">
            <summary>
             Returns the <see cref="T:Habanero.UI.Base.IButtonGroupControl"/> that shows the buttons that are available on this control.
             Typically these buttons provide the Add, Save, Cancel Edits.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.CurrentBusinessObject">
            <summary>
             Returns the Business Object Currently Selected in the Selector and being viewed in the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.ConfirmSaveDelegate">
            <summary>
             Gets and sets the delegate that is used when the business object is to be saved (e.g. when the save button is clicked)
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridWithPanelControlManager`1.GridWithPanelControlStrategy">
            <summary>
             Gets and sets the <see cref="T:Habanero.UI.Base.IGridWithPanelControlStrategy`1"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMainEditorPanel">
            <summary>
            This is a Main Editor Panel that consists of a Header control that can be styled and takes an Icon and a Title.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainEditorPanel.MainTitleIconControl">
            <summary>
            The Control that is positioned at the top of this panel that can be used to set an icon and title for the
             information being displayed on the MainEditorPanelVWG
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainEditorPanel.EditorPanel">
            <summary>
            The Panel in which the control being set is placed in.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDateRangeComboBox">
            <summary>
            Provides a selection of common date range options which a user
            can select from, modifying a start date and end date depending
            on the selection.  The options to choose from, such as
            "Yesterday", "Last Week" or "This Year", can be modified by
            the developer.  When adding this control, add an event handler
            on the SelectionChangeCommitted event, and obtain the StartDate and
            EndDate properties at this time.
            <br/>
            NOTE: The start and end dates are the two boundaries of a
            potential range.  Whether they should be inclusive or exclusive
            depends on the developer and how they are implemented.  For
            instance, if today is Nov 13, Yesterday would provide a start
            date of Nov 12, 12am and an end date of Nov 13, 12am.
            <br/>
            To add additional menu options that aren't available, simply add the
            new text item to the ComboBox, using Items.Add.  When you pick up the
            SelectionChangeCommitted event, check if the new text string is selected
            in the Text property and use your own calculations instead of 
            fetching the StartDate and EndDate.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.UseAllDateRangeOptions">
            <summary>
            Populates the ComboBox with all available DateOptions, since
            the default constructor only provides a standardised collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.SetTopComboBoxItem(System.String)">
            <summary>
            Sets the item in the ComboBox that first appears to the user
            </summary>
            <param name="displayString">The string to display</param>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.GetDateRangeString(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Returns the display string for the date range option supplied
            </summary>
            <param name="option">The date range enumeration</param>
            <returns>Returns the string if found, otherwise throws an
            ArgumentException</returns>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.SetDateRangeString(Habanero.UI.Base.DateRangeOptions,System.String)">
            <summary>
            Amends the display string for a given date option
            </summary>
            <param name="option">The date option to amend</param>
            <param name="newDisplayString">The display string to apply</param>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.RemoveDateOption(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Removes a date range option from the current list of options available
            </summary>
            <param name="option">The date range option to remove</param>
        </member>
        <member name="M:Habanero.UI.Base.IDateRangeComboBox.AddDateOption(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Adds a date range option to the current list of options available
            </summary>
            <param name="option">The date range option to add</param>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.OptionsToDisplay">
            <summary>
            Gets and sets the list of options to display.  If you intend
            to edit individual items in the list, either set the entire
            list once you have edited it, or use the Add and Remove methods
            provided by this class, otherwise the ComboBox list will not
            be refreshed.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.IgnoreTime">
            <summary>
            Sets the current date (eg. DateTime.Now or FixedNowDate) in all calculations to 12am.
            Use caution when using this together with a MidnightOffset, in which
            case you may rather want to manually edit the time just before calling
            StartDate and EditDate (use UseFixedNowDate and FixedNowDate).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.MidnightOffset">
            <summary>
            Gets and sets the amount of time to add or subtract from
            midnight when calculating date ranges.  This option will
            typically be used where a shift operates on a different
            pattern to 12am to 12am (the default).  If, for instance,
            an industry's operational day runs from 6am to 6am, this
            property can be set with a TimeSpan that adds 6 hours.
            Conversely, if the day starts 2 hours earlier, at 10pm the
            previous evening, set the property with a TimeSpan that
            subtracts 2 hours.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.WeekStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            Monday to redefine the first day of the week.  If Sunday
            is the first day of the week for the given application,
            then this property can be set with -1.  If Tuesday is the
            first day then use 1 (1+1=2).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.MonthStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            the first day of the month in order to adjust which day
            is typically the first of the month.  If the 5th is the typical start
            of a new month for the given application,
            then this property can be set to 4 (1+4=5).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.YearStartOffset">
            <summary>
            Gets and sets the number of months to add or subtract from
            January to redefine the first month of the year.  For example,
            if March is the first month of the new year for the given application,
            then this property can be set with 2 (1+2=3).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.UseFixedNowDate">
            <summary>
            Gets and sets whether the date used to calculate date ranges
            should be DateTime.Now or a fixed date that is specified.
            When false, all date ranges are calculated based on DateTime.Now.
            Setting this property to true allows you to use an alternative
            fixed date as your "Now" value, using the FixedNow property.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.FixedNowDate">
            <summary>
            Gets and sets a fixed date used to calculate date ranges, rather
            than DateTime.Now.  The UseFixedNowDate property must be set to
            true, otherwise this property will be ignored.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.StartDate">
            <summary>
            Returns the start date for the currently selected date range option,
            or DateTime.MinValue if no valid option is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateRangeComboBox.EndDate">
            <summary>
            Returns the end date for the currently selected date range option,
            or DateTime.MaxValue if no valid option is selected
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateRangeOptions">
            <summary>
            Provides options that can be added to or removed from the
            DateRangeComboBox
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.ThisHour">
            <summary>
            The period from the start of the hour until now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.PreviousHour">
            <summary>
            The period covering the previous hour before the start of the
            current one
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Current60Minutes">
            <summary>
            The period covering the previous 60 minutes before this one
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Today">
            <summary>
            The period from the start of the day until now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Yesterday">
            <summary>
            The period from the start of the previous day till
            the end of the previous day
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Current24Hours">
            <summary>
            The period covering the last 24 hours up till now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.WeekToDate">
            <summary>
            The period from the first day of the week until now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.PreviousWeek">
            <summary>
            The period from the first day of the previous week
            until the last day of the previous week
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous7Days">
            <summary>
            The previous seven days, excluding today
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.MonthToDate">
            <summary>
            The period from the start of the month until now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.PreviousMonth">
            <summary>
            The period covering the previous month
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous30Days">
            <summary>
            The period covering the previous 30 days, excluding today
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous31Days">
            <summary>
            The period covering the previous 31 days, excluding today
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.YearToDate">
            <summary>
            The period covering the start of the year until now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.ThisYear">
            <summary>
            The period covering the current year (Jan 1 to Dec 31)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.PreviousYear">
            <summary>
            The period covering the previous year
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous365Days">
            <summary>
            The period covering the last 365 days, excluding today
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Current2Years">
            <summary>
            The period covering the 2 years up till now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Current3Years">
            <summary>
            The period covering the 3 years up till now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Current5Years">
            <summary>
            The period covering the 5 years up till now
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous2Years">
            <summary>
            The period covering the 2 years before the current one
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous3Years">
            <summary>
            The period covering the 3 years before the current one
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateRangeOptions.Previous5Years">
            <summary>
            The period covering the 5 years before the current one
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.CollapsiblePanelResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.headergradient">
            <summary>
             The BitMap that is used for the CollapsiblePanelHeader
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.nav_icon">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.nbItemBullet">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.pinoff_withcolour">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.pinon_withcolour">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelResource.smBack">
            <summary>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IReadOnlyGridControl">
            <summary>
            Provides a combination of read-only grid, filter and buttons used to edit a
            collection of business objects.
            <br/>
            Adding, editing and deleting objects is done by clicking the available
            buttons in the button control (accessed through the Buttons property).
            By default, this uses of a popup form for editing of the object, as defined
            in the "form" element of the class definitions for that object.  You can
            override the editing controls using the BusinessObjectEditor/Creator/Deletor
            properties in this class.
            <br/>
            A filter control is placed above the grid and is used to filter which rows
            are shown.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGridControl">
            <summary>
            Provides a combination of grid, filter and buttons used to edit a
            collection of business objects
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBOSelectorAndEditor">
            <summary>
            Provides a common interface that is specialised for showing a collection of 
            Business Objects and allowing the user to select and edit one.
            The common controls used for selecting business objects are ComboBox, ListBox, ListView, Grid,
             <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/>, <see cref="T:Habanero.UI.Base.IBOColTabControl"/>, a <see cref="T:Habanero.UI.Base.IMultiSelector`1"/>
             or an <see cref="T:Habanero.UI.Base.ITreeView"/>.
            For an <see cref="T:Habanero.UI.Base.IEditableGridControl"/> the business objects can be edited directly in the grid. In the case of 
             a <see cref="T:Habanero.UI.Base.IReadOnlyGridControl"/> the business objects are edited via pop up forms that open when appropriate.
            The <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/> has a grid selector with the functionality to edit the business obects to the right.
            This interface inherits from the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"/> and adds three additional methods.
            <li><see cref="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToAddBO"/></li>"
            <li><see cref="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToDeleteBO"/></li>"
            <li><see cref="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToEditBO"/></li>"
            </summary>
            <remarks>
            Should possibly allow the user to set an adding, editing or deleting delegate
            </remarks>
        </member>
        <member name="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToAddBO">
            <summary>
             Gets and sets whether the user can add Business objects via this control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToDeleteBO">
            <summary>
            Gets and sets whether the user can Delete (<see cref="M:Habanero.Base.IBusinessObject.MarkForDelete"/>) <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOSelectorAndEditor.AllowUsersToEditBO">
            <summary>
            Gets and sets whether the user can edit <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOSelectorAndEditor.ConfirmDeletion">
            <summary>
            Gets or sets a boolean value that determines whether to confirm
            deletion with the user when they have chosen to delete a row
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOSelectorAndEditor.CheckUserConfirmsDeletionDelegate">
            <summary>
            Gets or sets the delegate that checks whether the user wants to delete selected rows.
            If <see cref="P:Habanero.UI.Base.IBOSelectorAndEditor.ConfirmDeletion"/> is true and no specific <see cref="P:Habanero.UI.Base.IBOSelectorAndEditor.CheckUserConfirmsDeletionDelegate"/> is set then
            a default <see cref="T:Habanero.UI.Base.CheckUserConfirmsDeletion"/> is used.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef)">
            <summary>
            Initiliases the grid structure using the default UI class definition (implicitly named "default")
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef,System.String)">
            <summary>
            Initialises the grid structure using the specified UI class definition
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
            <param name="uiDefName">The UI definition with the given name</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            Initialises the grid structure using the specified UI class definition
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
            <param name="gridDef">The grid definition to use to initialise</param>
            <param name="uiDefName">The name of the grid definition</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridControl.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to display.  Loading of
            the collection needs to be done before it is assigned to the
            grid.  This method assumes a default UI definition is to be
            used, that is a 'ui' element without a 'name' attribute.
            </summary>
            <param name="boCollection">The new business object collection
            to be shown in the grid</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridControl.GetBusinessObjectCollection">
            <summary>
             Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.UI.Base.IGridControl"/>.
            </summary>
            <returns>Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.UI.Base.IGridControl"/>.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.UiDefName">
            <summary>
            Gets and sets the name of the UI definition <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> used to initialise the grid structure (the UI name is indicated
            by the "name" attribute on the UI element in the class definitions (<see cref="T:Habanero.Base.IClassDef"/>)
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.ClassDef">
            <summary>
            Gets and sets the class definition ((<see cref="T:Habanero.Base.IClassDef"/>) used to initialise the grid structure
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.Grid">
            <summary>
            Returns the grid object held. This property can be used to
            access a range of functionality for the grid
            (eg. myGridWithButtons.Grid.AddBusinessObject(...)).
            </summary>    
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.OrderBy">
            <summary>
            Gets and sets the default order by clause used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.AdditionalSearchCriteria">
            <summary>
            Gets and sets the standard search criteria used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search. This search criteria will be appended with an AND to any search criteria returned
            by the FilterControl.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.FilterControl">
            <summary>
             The <see cref="T:Habanero.UI.Base.IFilterControl"/> that is displayed for the grid which is used to filter the grid rows.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.FilterMode">
            <summary>
            Gets and sets the filter modes for the grid (i.e. filter or search). See <see cref="T:Habanero.Base.FilterModes"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.Buttons">
            <summary>
            Gets the button control, which contains a set of default buttons for
            editing the objects and can be customised
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.IsInitialised">
            <summary>
             Returns a Flag indicating whether this control has been initialised yet or not.
             Gets the value indicating whether one of the overloaded initialise
             methods been called for the grid
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridControl.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IReadOnlyGridControl.Initialise">
            <summary>
            Initialises the grid without a ClassDef. This is used where the columns are set up manually.
            A typical case of when you would want to set the columns manually would be when the grid
            requires alternate columns, such as images to indicate the state of the object or buttons/links.
            The grid must already have at least one column added with the name "HABANERO_OBJECTID". This column is used
            to synchronise the grid with the business objects.
            </summary>
            <exception cref="T:Habanero.UI.Base.GridBaseInitialiseException">Occurs where the columns have not
            already been defined for the grid</exception>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.Grid">
            <summary>
            Returns the <see cref="T:Habanero.UI.Base.IReadOnlyGrid"/> object held. This property can be used to
            access a range of functionality for the <see cref="T:Habanero.UI.Base.IReadOnlyGrid"/>.
            </summary>    
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.Buttons">
            <summary>
            Gets the button control, which contains a set of default buttons for
            editing the objects and can be customised
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.BusinessObjectEditor">
            <summary>
            Gets and sets the business object editor used to edit the object when the edit button is clicked
            If no editor is set then the <see cref="T:Habanero.UI.Base.DefaultBOEditor"/> is used.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.BusinessObjectCreator">
            <summary>
            Gets and sets the business object creator used to create the object when the add button is clicked.
            If no creator is set then the <see cref="T:Habanero.UI.Base.DefaultBOCreator"/> is used.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.BusinessObjectDeletor">
            <summary>
            Gets and sets the business object deletor used to delete the object when the delete button is clicked
            If no deletor is set then the <see cref="T:Habanero.UI.Base.DefaultBODeletor"/> is used.  The default delete button
            is hidden unless programmatically shown (using Buttons.ShowDefaultDeleteButton).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridControl.DoubleClickEditsBusinessObject">
            <summary>
             Enable or disable the default double click handler for the grid where the <see cref="T:Habanero.Base.IBusinessObjectEditor"/>
             is used to edit the <see cref="T:Habanero.Base.IBusinessObject"/> represented by the row that was double clicked.
             If you want to implement a custom handler on double click, you should set this to false so that 
             the default handler does not interfere with your custom handler. 
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataViewNullFilterClause">
            <summary>
            Manages a null filter clause, which carries out no filtering of data
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewNullFilterClause.GetFilterClauseString">
            <summary>
            Returns an empty string
            </summary>
            <returns>Returns a empty string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewNullFilterClause.GetFilterClauseString(System.String,System.String)">
            <summary>
            Returns the filter clause as a string. The filter clause is a clause used for filtering
            a ADO.Net <see cref="T:System.Data.DataView"/>
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="T:Habanero.UI.Base.DataViewFilterClauseFactory">
            <summary>
            Creates filter clauses that determine which rows of data are displayed
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClauseFactory.CreateStringFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
            Creates a new filter clause that filters string values
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to be compared to</param>
            <returns>Returns the new filter clause object</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClauseFactory.CreateIntegerFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.Int32)">
            <summary>
            Creates a new filter clause that filters integer values
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to be compared to</param>
            <returns>Returns the new filter clause object</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClauseFactory.CreateDateFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.DateTime)">
            <summary>
            Creates a new filter clause that filters integer values
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to be compared to</param>
            <returns>Returns the new filter clause object</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClauseFactory.CreateCompositeFilterClause(Habanero.Base.IFilterClause,Habanero.Base.FilterClauseCompositeOperator,Habanero.Base.IFilterClause)">
            <summary>
            Creates a new composite filter clause combining two given filter
            clauses the operator provided
            </summary>
            <param name="leftClause">The left filter clause</param>
            <param name="compositeOperator">The composite operator, such as
            "and" or "or"</param>
            <param name="rightClause">The right filter clause</param>
            <returns>Returns the new filter clause object</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClauseFactory.CreateNullFilterClause">
            <summary>
            Creates a new null filter clause, which does no filtering
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ControlMapperCollection">
            <summary>
            Manages a collection of mappers that are sub-types of ControlMapper
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IControlMapperCollection">
            <summary>
            Manages a collection of mappers that are sub-types of ControlMapper
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, 
            starting at a particular Array index
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The zero-based index position to start
            copying from</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperCollection.GetEnumerator">
            <summary>
            Provides an enumerator of the collection
            </summary>
            <returns>Returns an enumerator</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperCollection.Add(Habanero.UI.Base.IControlMapper)">
            <summary>
            Adds a mapper object to the collection
            </summary>
            <param name="mapper">The object to add, which must be a type or
            sub-type of ControlMapper</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperCollection.ApplyChangesToBusinessObject">
            <summary>
            Updates the business object properties being mapped by the mappers in this collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.Count">
            <summary>
            Returns the number of objects in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.SyncRoot">
            <summary>
            Returns the collection's synchronisation root
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.IsSynchronized">
            <summary>
            Indicates whether the collection is synchronised
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.Item(System.Int32)">
            <summary>
            Provides an indexing facility so that the collection can be
            accessed with square brackets like an array
            </summary>
            <param name="index">The index position to read</param>
            <returns>Returns the mapper at the position specified</returns>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.Item(System.String)">
            <summary>
            Provides an indexing facility as before, but allows the objects
            to be referenced using their property names instead of their
            numerical position
            </summary>
            <param name="propertyName">The property name of the object</param>
            <returns>Returns the mapper if found, or null if not</returns>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.BusinessObject">
            <summary>
            Gets and sets the business object being represented by
            the mapper collection.  Updates the business object for 
            every control mapper in this collection.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlMapperCollection.ControlsEnabled">
            <summary>
            Enables or disables all the controls managed in this control mapper collection.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapperCollection.#ctor">
            <summary>
            Contructor to initialise an empty collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapperCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, 
            starting at a particular Array index
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The zero-based index position to start
            copying from</param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapperCollection.GetEnumerator">
            <summary>
            Provides an enumerator of the collection
            </summary>
            <returns>Returns an enumerator</returns>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapperCollection.Add(Habanero.UI.Base.IControlMapper)">
            <summary>
            Adds a mapper object to the collection
            </summary>
            <param name="mapper">The object to add, which must be a type or
            sub-type of ControlMapper</param>
        </member>
        <member name="M:Habanero.UI.Base.ControlMapperCollection.ApplyChangesToBusinessObject">
            <summary>
            Updates the business object properties being mapped by the mappers in this collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.Count">
            <summary>
            Returns the number of objects in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.SyncRoot">
            <summary>
            Returns the collection's synchronisation root
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.IsSynchronized">
            <summary>
            Indicates whether the collection is synchronised
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.Item(System.Int32)">
            <summary>
            Provides an indexing facility so that the collection can be
            accessed with square brackets like an array
            </summary>
            <param name="index">The index position to read</param>
            <returns>Returns the mapper at the position specified</returns>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.Item(System.String)">
            <summary>
            Provides an indexing facility as before, but allows the objects
            to be referenced using their property names instead of their
            numerical position
            </summary>
            <param name="propertyName">The property name of the object</param>
            <returns>Returns the mapper if found, or null if not</returns>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.BusinessObject">
            <summary>
            Gets and sets the business object being represented by
            the mapper collection.  Updates the business object for 
            every control mapper in this collection.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ControlMapperCollection.ControlsEnabled">
            <summary>
            Enables or disables all the controls managed in this control mapper collection.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridInitialiser">
            <summary>
            Initialises the structure of a grid.  If a ClassDef is provided, the grid
            is initialised using the UI definition provided for that class.  If no
            ClassDef is provided, it is assumed that the grid will be set up in code
            by the developer.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGridInitialiser">
            <summary>
            Initialises the structure of a grid.  If a ClassDef is provided, the grid
            is initialised using the UI definition provided for that class.  If no
            ClassDef is provided, it is assumed that the grid will be set up in code
            by the developer.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGridInitialiser.InitialiseGrid">
            <summary>
            Initialises the grid without a ClassDef. This is typically used where the columns are set up manually
            for purposes such as adding a column with images to indicate the state of the object or adding a
            column with buttons/links.
            <br/>
            The grid must already have at least one column added. At least one column must be a column with the name
            "HABANERO_OBJECTID", which is used to synchronise the grid with the business objects.
            </summary>
            <exception cref="T:Habanero.UI.Base.GridBaseInitialiseException">Thrown in the case where the columns
            have not already been defined for the grid</exception>
            <exception cref="T:Habanero.UI.Base.GridBaseSetUpException">Thrown in the case where the grid has already been initialised</exception>
        </member>
        <member name="M:Habanero.UI.Base.IGridInitialiser.InitialiseGrid(Habanero.Base.IClassDef)">
            <summary>
            Initialises the grid with the default UI definition for the class,
            as provided in the ClassDef
            </summary>
            <param name="classDef">The ClassDef used to initialise the grid</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridInitialiser.InitialiseGrid(Habanero.Base.IClassDef,System.String)">
            <summary>
            Initialises the grid with a specified alternate UI definition for the class,
            as provided in the ClassDef
            </summary>
            <param name="classDef">The Classdef used to initialise the grid</param>
            <param name="uiDefName">The name of the UI definition</param>
        </member>
        <member name="M:Habanero.UI.Base.IGridInitialiser.InitialiseGrid(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            Initialises the grid with a specified alternate UI definition for the class
            </summary>
            <param name="classDef">The Classdef used to initialise the grid</param>
            <param name="uiGridDef">The UI Grid definition to use</param>
                    /// <param name="uiDefName">The name of the UI definition</param>
        </member>
        <member name="P:Habanero.UI.Base.IGridInitialiser.IsInitialised">
            <summary>
            Gets the value indicating whether the grid has been initialised already
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridInitialiser.Grid">
            <summary>
            Gets the grid that is being initialised
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridInitialiser.#ctor(Habanero.UI.Base.IGridControl,Habanero.UI.Base.IControlFactory)">
            <summary>
             Initialise the grid with the appropriate control factory.
            </summary>
            <param name="gridControl"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridInitialiser.InitialiseGrid">
            <summary>
            Initialises the grid without a ClassDef. This is typically used where the columns are set up manually
            for purposes such as adding a column with images to indicate the state of the object or adding a
            column with buttons/links.
            <br/>
            The grid must already have at least one column added. At least one column must be a column with the name
            "HABANERO_OBJECTID", which is used to synchronise the grid with the business objects.
            </summary>
            <exception cref="T:Habanero.UI.Base.GridBaseInitialiseException">Thrown in the case where the columns
            have not already been defined for the grid</exception>
            <exception cref="T:Habanero.UI.Base.GridBaseSetUpException">Thrown in the case where the grid has already been initialised</exception>
        </member>
        <member name="M:Habanero.UI.Base.GridInitialiser.InitialiseGrid(Habanero.Base.IClassDef)">
            <summary>
            Initialises the grid with the default UI definition for the class,
            as provided in the ClassDef
            </summary>
            <param name="classDef">The ClassDef used to initialise the grid</param>
        </member>
        <member name="M:Habanero.UI.Base.GridInitialiser.InitialiseGrid(Habanero.Base.IClassDef,System.String)">
            <summary>
            Initialises the grid with a specified alternate UI definition for the class,
            as provided in the ClassDef
            </summary>
            <param name="classDef">The Classdef used to initialise the grid</param>
            <param name="uiDefName">The name of the UI definition</param>
        </member>
        <member name="M:Habanero.UI.Base.GridInitialiser.InitialiseGrid(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            Initialises the grid with a given alternate UI definition for the class
             </summary>
            <param name="classDef">The Classdef used to initialise the grid</param>
            <param name="uiGridDef">The <see cref="T:Habanero.BO.ClassDefinition.IUIGrid"/> that specifies the grid </param>
            <param name="uiDefName">The name of the <see cref="T:Habanero.BO.ClassDefinition.IUIGrid"/></param>
        </member>
        <member name="P:Habanero.UI.Base.GridInitialiser.IsInitialised">
            <summary>
            Gets the value indicating whether the grid has been initialised already
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridInitialiser.Grid">
            <summary>
            Gets the grid that is being initialised
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.EditableGridControlMapper">
            <summary>
            Maps a multiple relationship collection onto an <see cref="T:Habanero.UI.Base.IEditableGridControl"/>
            This is used for editing a Many relationship e.g. If an Invoice has many items
            then this control mapper can be used to provide an editable grid of Invoice Items.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor for the mapper.
            </summary>
            <param name="ctl">The IEditableGridControl</param>
            <param name="relationshipName">This is the relationship name to use - this relationship must be a multiple relationship and exist on the BusinessObject</param>
            <param name="isReadOnly">Whether the editable grid should be read only or not. Ignored</param>
            <param name="factory">The control factory to use</param>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewRowCollection">
            <summary>
            A collection of DataGridViewRow objects
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRowCollection.Add(System.Object[])">
            <summary>Adds a new row to the collection, and populates the cells with the specified objects.</summary>
            <returns>The index of the new row.</returns>
            <param name="values">A variable number of objects that populate the cells of the
             new <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see>.</param>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> 
            control is performing one of the following actions that temporarily prevents new rows from 
            being added:Selecting all cells in the control.Clearing the selection.-or-This method is 
            being called from a handler for one of the following <see cref="T:Habanero.UI.Base.IDataGridView"></see>
             events: CellEnter, CellLeave, CellValidating, CellValidated, RowEnter, RowLeave, RowValidated,
            RowValidating, -or-The VirtualMode property of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> is set to
             true.- or -The <see cref="P:Habanero.UI.Base.IDataGridView.DataSource"></see> property of the
             <see cref="T:Habanero.UI.Base.IDataGridView"></see> is not null.-or-The <see cref="T:Habanero.UI.Base.IDataGridView"></see> has no
             columns. -or-The row returned by the RowTemplate property has more cells than there are columns 
            in the control.-or-This operation would add a frozen row after unfrozen rows.</exception>
            <exception cref="T:System.ArgumentNullException">values is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRowCollection.Clear">
            <summary>Clears the collection. </summary>
            <exception cref="T:System.InvalidOperationException">The collection is data bound and the underlying data source does not support clearing the row data.-or-The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.UI.Base.IDataGridView"></see> events:<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRowCollection.Remove(Habanero.UI.Base.IDataGridViewRow)">
            <summary>Removes the row from the collection.</summary>
            <param name="dataGridViewRow">The row to remove from the <see cref="T:Habanero.UI.Base.IDataGridViewRowCollection"></see>.</param>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.UI.Base.IDataGridView"></see> events:<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating-or-dataGridViewRow is the row for new records.-or-The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> control is bound to an <see cref="T:System.ComponentModel.IBindingList"></see> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove"></see> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification"></see> property values that are not both true. </exception>
            <exception cref="T:System.ArgumentException">dataGridViewRow is not contained in this collection.-or-dataGridViewRow is a shared row.</exception>
            <exception cref="T:System.ArgumentNullException">dataGridViewRow is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRowCollection.RemoveAt(System.Int32)">
            <summary>Removes the row at the specified position from the collection.</summary>
            <param name="index">The position of the row to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero and greater than the number of rows in the collection minus one. </exception>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.UI.Base.IDataGridView"></see> events:<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.CellValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.UI.Base.IDataGridView"></see>.RowValidating-or-index is equal to the number of rows in the collection and the <see cref="P:Habanero.UI.Base.IDataGridView.AllowUserToAddRows"></see> property of the <see cref="T:Habanero.UI.Base.IDataGridView"></see> is set to true.-or-The associated <see cref="T:Habanero.UI.Base.IDataGridView"></see> control is bound to an <see cref="T:System.ComponentModel.IBindingList"></see> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove"></see> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification"></see> property values that are not both true.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRowCollection.IndexOf(Habanero.UI.Base.IDataGridViewRow)">
            <summary>
            Returns the index of a specified item in the collection
            </summary>
            <param name="dataGridViewRow">The DataGridViewRow to locate in the DataGridViewRowCollection</param>
            <returns>The index of value if it is a DataGridViewRow found in the DataGridViewRowCollection; otherwise, -1.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRowCollection.Count">
            <summary>
            Gets the number of rows in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRowCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see> at the specified index.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see> at the specified index. Accessing
             a <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see> with this indexer causes the row to become unshared. 
            To keep the row shared, use the SharedRow method. 
            For more information, see Best Practices for Scaling the Windows Forms DataGridView Control.</returns>
            <param name="index">The zero-based index of the <see cref="T:Habanero.UI.Base.IDataGridViewRow"></see> to get.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.IFilterControl">
            <summary>
            Manages a group of filter controls that create a filter clause used to limit
            which rows of data to show on a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            a string-value column will be filtered on.  This uses a "like"
            operator and accepts any strings that contain the provided clause.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            a string-value column will be filtered on.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="filterClauseOperator">The operator to use for the filter clause</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Adds a TextBox filter in which users can specify text that
            multiplt string-value columns will be filtered on.  This uses a "like"
            operator and accepts any strings that contain the provided clause.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyNames">The business object propertys on which to filter</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String},Habanero.Base.FilterClauseOperator)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            multiple string-value columns will be filtered on.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyNames">The business object propertys on which to filter</param>
            <param name="filterClauseOperator">The operator to use for the filter clause</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.GetFilterClause">
            <summary>
            Returns the filter clause as a composite of all the specific
            clauses in each filter control in the set
            </summary>
            <returns>Returns the filter clause</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddStringFilterComboBox(System.String,System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
            Adds a ComboBox filter control
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="options">The collection of items used to fill the combo box.</param>
            <param name="strictMatch">Whether to filter the DataGridView column on a strict match or using a LIKE operator</param>
            <returns>Returns the new ComboBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddBooleanFilterCheckBox(System.String,System.String,System.Boolean)">
            <summary>
            Adds a CheckBox filter that displays only rows whose boolean value
            matches the on-off state of the CheckBox. The column of data must
            have "true" or "false" as its values (boolean database fields are
            usually converted to true/false string values by the Habanero
            object manager).
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="defaultValue">Whether the CheckBox is checked</param>
            <returns>Returns the new CheckBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddDateFilterDateTimePicker(System.String,System.String,System.Nullable{System.DateTime},Habanero.Base.FilterClauseOperator,System.Boolean)">
            <summary>
            Adds a date-time picker that filters a date column on the date
            chosen by the user.  The given operator compares the chosen date
            with the date shown in the given column name.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="defaultValue">The default date or null</param>
            <param name="filterClauseOperator">The operator used to compare
            with the date chosen by the user.  The chosen date is on the
            right side of the equation.</param>
            <param name="nullable">Whether the datetime picker allows null values</param>
            <returns>Returns the new DateTimePicker added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.ApplyFilter">
            <summary>
            Applies the filter that has been captured.
            This allows an external control (e.g. another button click) to be used as the event that causes the filter to fire.
            Typically used when the filter controls are being set manually.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.GetChildControl(System.String)">
            <summary>
            Returns the filter control used to filter the column for the given property name
            </summary>
            <param name="propertyName">The property name on the business object</param>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.ClearFilters">
            <summary>
            Clears all the values from the filter and calls <see cref="M:Habanero.UI.Base.IFilterControl.ApplyFilter"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddDateRangeFilterComboBox(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a DateRangeComboBox filter which provides common date ranges such as "Today" or "This Year",
            so that the grid will only show rows having a date property in the given range
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="columnName">The business object property on which to filter</param>
            <param name="includeStartDate">Includes all dates that match the start date exactly</param>
            <param name="includeEndDate">Includes all dates that match the end date exactly</param>
            <returns>Returns the new DateRangeComboBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddDateRangeFilterComboBox(System.String,System.String,System.Collections.Generic.List{Habanero.UI.Base.DateRangeOptions},System.Boolean,System.Boolean)">
            <summary>
            Adds a DateRangeComboBox filter which provides common date ranges such as "Today" or "This Year",
            so that the grid will only show rows having a date property in the given range
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="columnName">The business object property on which to filter</param>
            <param name="options">Provides a specific set of date range options to show</param>
            <param name="includeStartDate">Includes all dates that match the start date exactly</param>
            <param name="includeEndDate">Includes all dates that match the end date exactly</param>
            <returns>Returns the new DateRangeComboBox added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddCustomFilter(System.String,System.String,Habanero.UI.Base.ICustomFilter)">
            <summary>
             Adds a custom filter which allows filtering using an ICustomFilter 
            </summary>
            <param name="labelText">The Label to appear before the control</param>
            <param name="propertyName">The property of the Business Object to filter</param>
            <param name="customFilter">The custom filter</param>
            <returns>Returns the new Custom Filter Control </returns>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddCustomFilter(System.String,Habanero.UI.Base.ICustomFilter)">
            <summary>
             Adds a custom filter which allows filtering using an ICustomFilter 
            </summary>
            <param name="labelText">The Label to appear before the control</param>
            <param name="customFilter">The custom filter</param>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.RemoveDefaultFilterClickEvent">
            <summary>
            Removes the default Click Event. 
            Enables the developer to add custom functionality on the button click 
            before the filter or search happens.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddDefaultFilterClickEvent">
            <summary>
            Adds the default Click Event. 
            Enables the developer to add the default functionality back on the button click 
            if previously removed.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.RemoveDefaultClearClickEvent">
            <summary>
            Removes the default Click Event. 
            Enables the developer to add custom functionality on the button click 
            before the Clear or search happens.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddDefaultClearClickEvent">
            <summary>
            Adds the default Click Event. 
            Enables the developer to add the default functionality back on the button click 
            if previously removed.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFilterControl.AddStaticStringFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
             Adds a static string filter <see cref="T:Habanero.UI.Base.StringStaticFilter"/> to the Filter Control.
             This allows the developer to set a filter that is always applied and is not modifyable or visible to the End user.
            </summary>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
            <param name="filterValue"></param>
        </member>
        <member name="E:Habanero.UI.Base.IFilterControl.Filter">
            <summary>
            The event that is fired with the filter is ready so that another control e.g. a grid can be filtered.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.HeaderText">
            <summary>
            The header text that will be set above the filter.  Defaults to 'Filter'.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.CountOfFilters">
            <summary>
            The number of controls used for filtering that are on the filter control. <see cref="P:Habanero.UI.Base.IFilterControl.FilterControls"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.FilterButton">
            <summary>
            Returns the filter button that when clicked applies the filter
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.ClearButton">
            <summary>
            Returns the clear button that when clicked clears the filter
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.FilterMode">
            <summary>
            Gets and sets the FilterMode <see cref="T:Habanero.Base.FilterModes"/>, which determines the
            behaviour of the filter control
            /// If the <see cref="F:Habanero.Base.FilterModes.Search"/> mode is chosen, the loading procedures can be customised
            by using an alternate loading mechanism (see <see cref="T:Habanero.UI.Base.GridLoaderDelegate"/>).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.FilterControls">
            <summary>
            Gets the collection of individual filters
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.LayoutManager">
            <summary>
            Returns the layout manager used to lay the controls out on the filter control panel.
            The default layout manager is the FlowLayoutManager.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFilterControl.FilterPanel">
            <summary>
            Returns the panel onto which the filter controls will be placed
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DefaultBOEditor">
            <summary>
            Provides an editing facility for a business object.
            The default editor is used by controls like GridControl to edit business objects.
            Where used, this class can be replaced by a custom control that
            inherits form <see cref="T:Habanero.Base.IBusinessObjectEditor"/>.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DefaultBOEditor._controlFactory">
            <summary>
            The Control Factory that is used to create the controls on this Editor.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOEditor.#ctor(Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.DefaultBOEditor"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOEditor.EditObject(Habanero.Base.IBusinessObject,System.String)">
            <summary>
            Edits the given business object by providing a form in which the
            user can edit the data
            </summary>
            <param name="obj">The business object to edit</param>
            <param name="uiDefName">The name of the set of ui definitions
            used to design the edit form. Setting this to an empty string
            will use a ui definition with no name attribute specified.</param>
            <returns>Returs true if the user chose to save the edits or
            false if the user cancelled the edits</returns>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOEditor.EditObject(Habanero.Base.IBusinessObject,System.String,Habanero.Base.PostObjectEditDelegate)">
            <summary>
            Edits the given object
            </summary>
            <param name="obj">The object to edit</param>
            <param name="uiDefName">The name of the set of ui definitions
            used to design the edit form. Setting this to an empty string
            will use a ui definition with no name attribute specified.</param>
            <param name="postEditAction">Action to be performed when the editing is completed or cancelled. Typically used if you want to update
            a grid or a list in an asynchronous environment (E.g. to select the recently edited item in the grid)</param>
            <returns>Returs true if edited successfully of false if the edits
            were cancelled</returns>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOEditor.CreateEditorForm(Habanero.BO.BusinessObject,System.String)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of ui definitions
            used to design the edit form. Setting this to an empty string
            will use a ui definition with no name attribute specified.</param>
            <returns>Returns a DefaultBOEditorForm object</returns>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOEditor.CreateEditorForm(Habanero.BO.BusinessObject,System.String,Habanero.Base.PostObjectEditDelegate)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of ui definitions
            used to design the edit form. Setting this to an empty string
            will use a ui definition with no name attribute specified.</param>
            <param name="action"></param>
            <returns>Returns a DefaultBOEditorForm object</returns>
        </member>
        <member name="T:Habanero.UI.Base.IMenuBuilder">
            <summary>
             An interface for the Menu Builder. This provides common functionality to build a a menu.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMenuBuilder.BuildMainMenu(Habanero.UI.Base.HabaneroMenu)">
            <summary>
             Builds the Main Menu based on a <paramref name="habaneroMenu"/>
            </summary>
            <param name="habaneroMenu"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.IMenuBuilder.ControlFactory">
            <summary>
            Returns the control factory being used to create the Menu and the MenuItems
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewComboBoxColumn">
            <summary>
            Represents a column of DataGridViewComboBoxCell objects
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewComboBoxColumn.DataSource">
            <summary>
            Gets or sets the data source that populates the selections for the combo boxes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewComboBoxColumn.ValueMember">
            <summary>
            Gets or sets a string that specifies the property or column from
            which to get values that correspond to the selections in the drop-down list.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewComboBoxColumn.DisplayMember">
            <summary>
            Gets or sets a string that specifies the property or column from which to
             retrieve strings for display in the combo boxes.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewComboBoxColumn.Items">
            <summary>Gets the collection of objects used as selections in the combo boxes.</summary>
            <returns>An <see cref="T:System.Collections.IList"></see> that represents the selections in the combo boxes. </returns>
        </member>
        <member name="T:Habanero.UI.Base.IColumnHeaderCollection">
            <summary>
            Manages a collection of column header
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IColumnHeaderCollection.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
            <value></value>
        </member>
        <member name="T:Habanero.UI.Base.ICollapsiblePanel">
            <summary>
            Provides an interface for a <see cref="T:Habanero.UI.Base.IPanel"/> that has Collapsible functionality.
            This is essentially a <see cref="T:Habanero.UI.Base.IPanel"/> that has a button at the Top.
            This button toggles whether the panel is collapsed or expanded.
            The <see cref="T:Habanero.UI.Base.IPanel"/> can also be pinned.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ICollapsiblePanel.FireUncollapsedEvent">
            <summary>
             Fires the Uncollapsed event this is used by the <see cref="T:Habanero.UI.Base.CollapsiblePanelManager"/>
               and is not expected to be used outside of this context.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ICollapsiblePanel.Uncollapsed">
            <summary>
            The Event for the Collapsible Panel being collapsed or uncollapsed.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.Collapsed">
            <summary>
             Gets and Sets whether the <see cref="T:Habanero.UI.Base.IPanel"/> is collapsed or expanded.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.CollapseButton">
            <summary>
            Returns the button that is available at the top of the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> that when
            clicked collapses or Expands the <see cref="T:Habanero.UI.Base.IPanel"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.ContentControl">
            <summary>
            Gets and Sets the <see cref="T:Habanero.UI.Base.IControlHabanero"/> that is placed on the Panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.Pinned">
            <summary>
            Gets and Sets whether the Panel is Pinned or not.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.PinLabel">
            <summary>
            Returns the PinLabel <see cref="T:Habanero.UI.Base.ILabel"/> so that the Image can be changed on it for styling.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanel.ExpandedHeight">
            <summary>
            Returns the Height required by the Panel when it is Expanded.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IWizardController">
            <summary>
            Controls the behaviour of a wizard, which guides users through a process one
            step at a time. Each step in the wizard is represented by a user control that implements
            the IWizardStep Interface.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.GetNextStep">
            <summary>
            Returns the next step in the Wizard and sets the current step to that step.
            </summary>
            <exception cref="T:Habanero.UI.Base.WizardStepException">Thrown if the current step is the last step.</exception>
            <returns>The next step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.GetPreviousStep">
            <summary>
            Returns the Previous Step and sets the step pointer to that step.
            </summary>
            <exception cref="T:Habanero.UI.Base.WizardStepException">Thrown if the current step is the first step.</exception>
            <returns>The previous step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.GetFirstStep">
            <summary>
            Returns the First Step of the Wizard and sets the current step to that step.
            </summary>
            <returns>The first step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.IsLastStep">
            <summary>
            Checks if the current step is the last step.
            </summary>
            <returns>True if the current step is the last step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.IsFirstStep">
            <summary>
            Checks if the current Step is the first step.
            </summary>
            <returns>True if the current step is the first step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.Finish">
            <summary>
            Method that is to be run when the Wizard is finished. This method should do all persistance that is required.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.CanMoveOn(System.String@)">
            <summary>
            Checks if the Wizard can proceed to the next step. Calls through to the CanMoveOn method of the current IWizardStep.
            </summary>
            <param name="message">Describes why the Wizard cannot move on. Only applicable if CanMoveOn returns false.</param>
            <returns>True if moving to the next step is allowed.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.GetCurrentStep">
            <summary>
            Returns the step that the Wizard is currently on.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IWizardController.CancelWizard">
            <summary>
            This provides a method which is called when the wizard is cancelled. The wizard controller can 
            undo any changes that have occured up until that point so as to ensure that the objects are returned
            to their original state.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardController.StepCount">
            <summary>
            Returns the number of Steps in the Wizard.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardController.CurrentStep">
            <summary>
            Gets or Sets the Current Step of the Wizard.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.UISettings">
            <summary>
            Provides a store of application-wide user interface settings
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IUISettings">
            <summary>
            Provides a store of application-wide user interface settings
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IUISettings.PermitComboBoxRightClick">
            <summary>
            Assign a method to this delegate that returns a boolean
            to indicate whether the user has permission to right-click
            on the ComboBox that represents the given
            BusinessObject type.  This applies to all ComboBoxes in the
            application that are mapped using a Habanero ComboBoxMapper,
            but the individual XML class definition parameter settings for
            a field take precedence.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.UISettings.PermitComboBoxRightClick">
            <summary>
            Assign a method to this delegate that returns a boolean
            to indicate whether the user has permission to right-click
            on the ComboBox that represents the given
            BusinessObject type.  This applies to all ComboBoxes in the
            application that are mapped using a Habanero ComboBoxMapper,
            but the individual XML class definition parameter settings for
            a field take precedence.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.LayoutManagerException">
            <summary>
            Thrown when an error occurs due to laying out or refreshing controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManagerException.#ctor(System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.LayoutManager"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.LayoutManager"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManagerException.#ctor(System.String,System.Exception)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.LayoutManager"/>
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Habanero.UI.Base.LayoutManagerException.#ctor">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.LayoutManager"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IListBoxSelectedObjectCollection">
            <summary>
            Represents the collection of selected items in the ListBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListBoxSelectedObjectCollection.Add(System.Object)">
            <summary>
            Adds an item to the list of selected items for a ListBox
            </summary>
            <param name="item">An object representing the item to add
            to the collection of selected items</param>
        </member>
        <member name="T:Habanero.UI.Base.IToolTip">
            <summary>
            Represents a small rectangular pop-up window that displays a brief
            description of a control's purpose when the user rests the pointer on the control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IToolTip.SetToolTip(Habanero.UI.Base.IControlHabanero,System.String)">
            <summary>
            Associates ToolTip text with the specified control
            </summary>
            <param name="controlHabanero">The Control to associate the ToolTip text with</param>
            <param name="toolTipText">The ToolTip text to display when the pointer is on the control</param>
        </member>
        <member name="M:Habanero.UI.Base.IToolTip.GetToolTip(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Retrieves the ToolTip text associated with the specified control
            </summary>
            <param name="controlHabanero">The Control for which to retrieve the ToolTip text</param>
        </member>
        <member name="T:Habanero.UI.Base.ITabPage">
            <summary>
            Represents a single tab page in a TabControl
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GlobalUIRegistry">
            <summary>
            Maintains an application-wide store of UI-related settings
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GlobalUIRegistry.UISettings">
            <summary>
            Gets and sets the store of general user interface settings
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GlobalUIRegistry.DateDisplaySettings">
            <summary>
            Gets and sets the store of date display settings
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GlobalUIRegistry.ControlFactory">
            <summary>
            Gets and sets the control factory to use in the application
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.NumericUpDownIntegerMapper">
            <summary>
            Wraps a NumericUpDown control in order to display and capture an integer property of the business object 
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.NumericUpDownMapper">
            <summary>
            Wraps a NumericUpDown control in order to display and capture a numeric property of the business object 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.NumericUpDownMapper._numericUpDown">
            <summary>
            Teh actual <see cref="T:Habanero.UI.Base.INumericUpDown"/> control being mapped to the <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to instantiate a new instance of the class
            </summary>
            <param name="ctl">The control object to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether the control is read only.
            If so, it then becomes disabled.  If not,
            handlers are assigned to manage key presses, depending on the strategy assigned to this mapper.</param>
            <param name="factory">The control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.NumericUpDownMapper.MapperStrategy">
            <summary>
            Gets the <see cref="T:Habanero.UI.Base.INumericUpDownMapperStrategy"/> that has been assigned to this mapper
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownIntegerMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new instance of the class
            </summary>
            <param name="numericUpDownControl">The numericUpDownControl object to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">the control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownIntegerMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerMapper">
            <summary>
            Wraps a DateTimePicker in order to display and capture a DateTime property of the business object 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerMapper.#ctor(Habanero.UI.Base.IDateTimePicker,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new instance of the class
            </summary>
            <param name="picker">The DateTimePicker control to which the property is mapped</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">The control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerMapper.GetValueOfDateTimePicker">
            <summary>
            Returns the value currently held by the picker
            </summary>
            <returns>Returns the value held</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerMapper.InitialiseWithAttributes">
            <summary>
            Initialises the control using the attributes already provided, using
            <see cref="M:Habanero.UI.Base.ControlMapper.SetPropertyAttributes(System.Collections.Hashtable)"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerMapper.DateTimePicker">
            <summary>
            Gets the DateTimePicker control to which the property is mapped
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DockStyle">
            <summary>
            Indicates how to dock the control within its container and how the control
            resizes when its parent is resized 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.None">
            <summary>
            The control is not docked.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.Fill">
            <summary>
            All the control's edges are docked to the all edges of its containing control and sized appropriately.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.Top">
            <summary>
            The control's top edge is docked to the top of its containing control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.Right">
            <summary>
            The control's right edge is docked to the right edge of its containing control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.Bottom">
            <summary>
            The control's bottom edge is docked to the bottom of its containing control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DockStyle.Left">
            <summary>
            The control's left edge is docked to the left edge of its containing control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.AnchorStyles">
            <summary>
            Control anchoring styles
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AnchorStyles.Bottom">
            <summary>
            Anchors to the bottom
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AnchorStyles.Left">
            <summary>
            Anchors to the Left
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AnchorStyles.None">
            <summary>
            No Anchor
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AnchorStyles.Right">
            <summary>
            Anchors to the Right
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AnchorStyles.Top">
            <summary>
            Anchors to the Toop
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.AutoCompleteMode">
            <summary>
            Specifies the mode for the automatic completion feature used in the 
            ComboBox and TextBox controls.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteMode.None">
            <summary>
            Disables the automatic completion feature for the ComboBox and TextBox controls.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteMode.Suggest">
            <summary>
            Displays the auxiliary drop-down list associated with the edit control. 
            This drop-down is populated with one or more suggested completion strings.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteMode.Append">
            <summary>
            Appends the remainder of the most likely candidate string to the existing 
            characters, highlighting the appended characters.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteMode.SuggestAppend">
            <summary>
            Applies both Suggest and Append options.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.AutoCompleteSource">
            <summary>
            Specifies the source for ComboBox and TextBox automatic completion functionality.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.AllSystemSources">
            <summary>
            Specifies the equivalent of FileSystem and AllUrl as the source. 
            This is the default value when AutoCompleteMode has been set to a value other than 
            the default.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.AllUrl">
            <summary>
            Specifies the equivalent of HistoryList and RecentlyUsedList as the source.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.CustomSource">
            <summary>
            Specifies strings from a built-in AutoCompleteStringCollection as the source.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.FileSystem">
            <summary>
            Specifies the file system as the source.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.FileSystemDirectories">
            <summary>
            Specifies that only directory names and not file names will be automatically completed.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.HistoryList">
            <summary>
            Includes the Uniform Resource Locators (URLs) in the history list.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.ListItems">
            <summary>
            Specifies that the items of the ComboBox represent the source.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.None">
            <summary>
            Specifies that no AutoCompleteSource is currently in use. 
            This is the default value of AutoCompleteSource.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.AutoCompleteSource.RecentlyUsedList">
            <summary>
            Includes the Uniform Resource Locators (URLs) in the list of those URLs most recently used.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.HorizontalAlignment">
            <summary>
            Specifies how an object or text in a control is horizontally aligned relative to an element of the control.  
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.HorizontalAlignment.Left">
            <summary>
             The object or text is aligned on the left of the control element.   
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.HorizontalAlignment.Right">
            <summary>
             The object or text is aligned on the right of the control element.   
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.HorizontalAlignment.Center">
            <summary>
             The object or text is aligned in the center of the control element.   
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IWizardStep">
            <summary>
            Provides a single step in a wizard control which is used by the <see cref="T:Habanero.UI.Base.IWizardController"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardStep.InitialiseStep">
            <summary>
            Initialises the step. Run when the step is reached.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardStep.CanMoveOn(System.String@)">
            <summary>
            Verifies whether this step can be passed.
            </summary>
            <param name="message">Error message should moving on be disallowed. This message will be displayed to the user by the WizardControl.</param>
        </member>
        <member name="M:Habanero.UI.Base.IWizardStep.CanMoveBack">
            <summary>
            Verifies whether the user can move back from this step.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IWizardStep.CancelStep">
            <summary>
            Provides an interface for the developer to implement functionality to cancel any edits made as part of this
            wizard step. The default wizard controller functionality is to call all wizard steps cancelStep methods when
            its Cancel method is called.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IWizardStep.HeaderText">
            <summary>
            The text that you want displayed at the top of the wizard control when this step is active.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ValidationUtil">
            <summary>
            Provide comparison of string data.  This class currently
            implements System.Web.UI.WebControls validation so that
            we don't have to write more code.  Eventually, we may want
            to implement out own code.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.#ctor">
            <summary>
            Disable default ctor.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.CompareValues(System.String,System.String,Habanero.UI.Base.ValidationCompareOperator,Habanero.UI.Base.ValidationDataType)">
            <summary>
            Compare two values using provided operator and data type.
            </summary>
            <param name="leftText"></param>
            <param name="rightText"></param>
            <param name="op"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.ValidateRegEx(System.String,System.String)">
            <summary>
            Utility method validation regular expression.
            </summary>
            <param name="valueText"></param>
            <param name="patternText"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.EvaluateIsValid">
            <summary>
            Here because base class required it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.XmlStringToObject(System.String,System.Type)">
            <summary>
            Get object from an xml string.
            </summary>
            <param name="xmlString"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.ObjectToXmlString(System.Object)">
            <summary>
            Write object to xml string.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.FileToString(System.String)">
            <summary>
            Load the entire text file into a string.
            </summary>
            <param name="sFile">Full pathname of file to read.</param>
            <returns>String content of the text file.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.FileToString(System.String,System.Int32)">
            <summary>
            Load the text file with specified size as return text.
            </summary>
            <param name="sFile">File to read from.</param>
            <param name="size">Number of char to read.</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.StringToFile(System.String,System.String,System.Boolean)">
            <summary>
            Save a string to file.
            </summary>
            <param name="strValue">String value to save.</param>
            <param name="strFileName">File name to save to.</param>
            <param name="bAppendToFile">True - to append string to file.  Default false - overwrite file.</param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationUtil.StringToFile(System.String,System.String)">
            <summary>
            Save a string to file.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ITabControl">
            <summary>
            Manages a related set of tab pages
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITabControl.TabPages">
            <summary>
            Gets the collection of tab pages in this tab control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected tab page
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITabControl.SelectedTab">
            <summary>
            Gets or sets the currently selected tab page
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ITabControl.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property is changed
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IPanelFactoryInfo">
            <summary>
            Manages a panel that has been created to view or edit business object
            details on a form.  This object is created when you call
            <see cref="M:Habanero.UI.Base.IPanelFactory.CreatePanel"/>, and contains references to the
            controls, mappers, the panel control itself and the business object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IPanelFactoryInfo.GetFormGrid(System.String)">
            <summary>
             Constructs and returns an <see cref="T:Habanero.UI.Base.IEditableGridControl"/> for a specified relationship.
            </summary>
            <param name="relationShipName"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.Panel">
            <summary>
            Returns the panel control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.ControlMappers">
            <summary>
            Returns the collection of control mappers, which map individual
            controls to the properties on the business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.PreferredHeight">
            <summary>
            Gets and sets the preferred height setting
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.PreferredWidth">
            <summary>
            Gets and sets the preferred width setting
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.FirstControlToFocus">
            <summary>
            Returns the first control to focus on in the user interface
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.ToolTip">
            <summary>
            Gets and sets the tooltip for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.MinimumPanelHeight">
            <summary>
            Gets and sets the minimum height for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.MinumumPanelWidth">
            <summary>
            Gets and sets the minimum width for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.PanelTabText">
            <summary>
            Gets and sets the text for the panel tab
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.UIForm">
            <summary>
            Gets and sets the UIForm definition used to construct the
            panel - this is taken from the class definitions for the
            business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.UiFormTab">
            <summary>
            Gets the UIFormTab definition used to construct the panel
            for a single tab in the form.  By default, there is one
            tab for a form, even if it has not been explicitly defined.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.UIDefName">
            <summary>
            Gets the UI definition name as set in the "name" attribute.
            Multiple definitions are permitted for a business object.  If none
            is specified, the "default" definition will be used, which is a
            UI definition without a "name" attribute.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelFactoryInfo.FormGrids">
            <summary>
            Gets the form grids
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PermitComboBoxRightClickDelegate">
            <summary>
            Assign a method to this delegate that returns a boolean
            to indicate whether the user has permission to right-click
            on the ComboBox that represents the given
            BusinessObject type.  This applies to all ComboBoxes in the
            application that are mapped using a Habanero ComboBoxMapper,
            but the individual XML class definition parameter settings for
            a field take precedence
            </summary>
            <param name="boClassType">The class type of the BusinessObject
            being mapped in the ComboBox</param>
            <param name="controlMapper">The control mapper that maps the
            BusinessObject to the ComboBox.  This mapper will provide
            information like the BusinessObject of the form.</param>
        </member>
        <member name="T:Habanero.UI.Base.ReadOnlyGridButtonsControlManager">
            <summary>
            This manager groups common logic for IReadOnlyGridButtonsControl objects.
            Do not use this object in working code - rather call CreateReadOnlyGridButtonsControl
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ReadOnlyGridButtonsControlManager.#ctor(Habanero.UI.Base.IReadOnlyGridButtonsControl)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.ReadOnlyGridButtonsControlManager"/>
            </summary>
            <param name="buttonsControl"></param>
        </member>
        <member name="M:Habanero.UI.Base.ReadOnlyGridButtonsControlManager.CreateDeleteButton(System.EventHandler)">
            <summary>
             Creates the delete button and binds it to the <paramref name="eventHandler"/>
            </summary>
            <param name="eventHandler"></param>
        </member>
        <member name="M:Habanero.UI.Base.ReadOnlyGridButtonsControlManager.CreateEditButton(System.EventHandler)">
            <summary>
             Creates the Edit button and binds it to the <paramref name="eventHandler"/>
            </summary>
            <param name="eventHandler"></param>
        </member>
        <member name="M:Habanero.UI.Base.ReadOnlyGridButtonsControlManager.CreateAddButton(System.EventHandler)">
            <summary>
             Creates the add button and binds it to the <paramref name="eventHandler"/>
            </summary>
            <param name="eventHandler"></param>
        </member>
        <member name="P:Habanero.UI.Base.ReadOnlyGridButtonsControlManager.DeleteButton">
            <summary>
             The delete button.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GroupControlCreator">
            <summary>
            A Creator (<see cref="T:System.Delegate"/> that is used to create the Grouping control being used by the 
            <see cref="M:Habanero.UI.Base.PanelBuilder.BuildPanelForForm(Habanero.BO.ClassDefinition.IUIForm,Habanero.UI.Base.GroupControlCreator)"/> to create the Group control
            that is being used to Group the Controls within the an <see cref="T:Habanero.UI.Base.ITabControl"/>, an <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/>
            or a <see cref="T:Habanero.UI.Base.IGroupBox"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.PanelBuilder">
            <summary>
             Builds an <see cref="T:Habanero.UI.Base.IPanelInfo"/> that has the information required to link the <see cref="T:Habanero.UI.Base.IPanel"/>
              built by the Panel Builder to the <see cref="T:Habanero.Base.IBusinessObject"/> with a certain layout (as defined by the
              <see cref="T:Habanero.UI.Base.LayoutManager"/> (Currently Only the <see cref="T:Habanero.UI.Base.GridLayoutManager"/> can be used).<br/>
             The <see cref="T:Habanero.UI.Base.IPanel"/> Built by the PanelBuilder has all the controls required for a <see cref="T:Habanero.Base.IBusinessObject"/> 
                 to be viewed and edited in. The Controls to be used are defind in the <see cref="T:Habanero.BO.ClassDefinition.UIFormTab"/> or the
                 <see cref="T:Habanero.BO.ClassDefinition.UIForm"/> depending on whether the <see cref="M:Habanero.UI.Base.PanelBuilder.BuildPanelForForm(Habanero.BO.ClassDefinition.IUIForm)"/> or <see cref="M:Habanero.UI.Base.PanelBuilder.BuildPanelForTab(Habanero.BO.ClassDefinition.UIFormTab)"/>
                 method is used.
             <br/><br/>
             The PanelBuilder can create a panel for any environment based on
             the implementation of <see cref="T:Habanero.UI.Base.IControlFactory"/> that is passed through in
             the constructor.
             <br/><br/>
             Once the panel has been constructed, you will need to assign the
             instance of the business object.  See <see cref="T:Habanero.UI.Base.IPanelInfo"/> for
             these options.  Once editing is completed, you will need to persist
             the changes. First call ApplyChangesToBusinessObject on the IPanelInfo
             object, and then carry out persistence on the BusinessObject.
             </summary>
        </member>
        <member name="F:Habanero.UI.Base.PanelBuilder.ERROR_PROVIDER_WIDTH">
            <summary>
            The width that the error provider will Take up on the screen.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PanelBuilder.CONTROLS_PER_COLUMN">
            <summary>
            The number of controls per <see cref="T:Habanero.Base.IClassDef"/>.<see cref="T:Habanero.BO.ClassDefinition.UIDef"/> defined column on the Panel Builder. (Typically the label, the Actual control (e.g. TextBox)
             and the 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PanelBuilder.LABEL_CONTROL_COLUMN_NO">
            <summary>
            The column Number that the Label Control will be placed in.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PanelBuilder.INPUT_CONTROL_COLUMN_NO">
            <summary>
            The column Number that the Actual user control (e.g. TextBox) will be placed in.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PanelBuilder.ERROR_PROVIDER_COLUMN_NO">
            <summary>
            The column that the error provider will be placed in. 
              This is the last column position within the <see cref="T:Habanero.Base.IClassDef"/>.<see cref="T:Habanero.BO.ClassDefinition.UIDef"/> defined column.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.#ctor(Habanero.UI.Base.IControlFactory)">
            <summary>
             Creates the panel Builder with the <see cref="T:Habanero.UI.Base.IControlFactory"/>
               to be used by the panel builder for buiding the controls.
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.BuildPanelForTab(Habanero.BO.ClassDefinition.UIFormTab)">
            <summary>
            Constructs a panel for editing the data of a single instance
            of a BusinessObject, using the control layout as specified in
            a <see cref="T:Habanero.BO.ClassDefinition.UIFormTab"/> object. 
            </summary>
            <param name="formTab">The tab object that indicates which controls
            to create and how the controls are laid out</param>
            <returns>Returns an IPanelInfo object that contains access to the
            BusinessObject instance, the created panel, and all the controls,
            mappers, labels and error providers that were created.
            </returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.BuildPanelForForm(Habanero.BO.ClassDefinition.IUIForm)">
            <summary>
            Constructs a panel for editing the data of a single instance
            of a BusinessObject, using the control layout as specified in
            a <see cref="T:Habanero.BO.ClassDefinition.UIForm"/> object. 
            </summary>
            <param name="uiForm">The UIForm object that indicates which controls
            to create and how the controls are laid out</param>
            <returns>Returns an IPanelInfo object that contains access to the
            BusinessObject instance, the created panel, and all the controls,
            mappers, labels and error providers that were created.
            </returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.BuildPanelForForm(Habanero.BO.ClassDefinition.IUIForm,Habanero.UI.Base.GroupControlCreator)">
            <summary>
             Builds a Panel for a single Tab as defined in the <see cref="T:Habanero.BO.ClassDefinition.UIForm"/>.
               There will be one <see cref="T:Habanero.UI.Base.IPanelInfo"/> for the defined uiForm.<br/>
             If there are multiple tabs defined for the <paramref name="uiForm"/> then
              an actual <see cref="T:Habanero.UI.Base.ITabPage"/> is created for each <see cref="T:Habanero.BO.ClassDefinition.UIFormTab"/> 
              and the <see cref="T:Habanero.UI.Base.IPanel"/> created by <see cref="M:Habanero.UI.Base.PanelBuilder.BuildPanelForTab(Habanero.BO.ClassDefinition.UIFormTab)"/> will 
              be placed on this TabPage.<br></br>
             Else the <see cref="T:Habanero.UI.Base.IPanel"/> is placed on the form directly.
            </summary>
             <param name="uiForm">The UIForm object that indicates which controls
             to create and how the controls are laid out</param>
            <param name="groupControlCreator">The <see cref="P:Habanero.UI.Base.PanelBuilder.GroupControlCreator"/></param>
             <returns>Returns an IPanelInfo object that contains access to the
             BusinessObject instance, the created panel, and all the controls,
             mappers, labels and error providers that were created.
             </returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.EmailTextBoxDoubleClickedHandler(System.Object,System.EventArgs)">
            <summary>
             A handler to deal with a double-click on an email textbox, which
             causes the default mail client on the user system to be opened
             </summary>
             <param name="sender">The object that notified of the event</param>
             <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.GetAlignmentValue(System.String)">
            <summary>
             Checks if the alignment value is valid
            </summary>
            <param name="alignmentValue">The alignment value from the FieldInfo</param>
            <returns>The valid Habanero.UI.Base Horizontal Alignment</returns>
            <exception cref="T:Habanero.Base.Exceptions.HabaneroDeveloperException">Throws a HabaneroDeveloperException if the alignment value is invalid</exception>
        </member>
        <member name="M:Habanero.UI.Base.PanelBuilder.CreateOnePanelPerUIFormTab(Habanero.BO.ClassDefinition.IUIForm)">
            <summary>
            Creates one panel for each UI Form definition of a business object
            </summary>
            <returns>Returns the list of panel info objects created</returns>
            TODO: improve tab order (ie make all tabs use one sequence rather than each starting a new sequence)
        </member>
        <member name="P:Habanero.UI.Base.PanelBuilder.GroupControlCreator">
            <summary>
             Get or set the <see cref="P:Habanero.UI.Base.PanelBuilder.GroupControlCreator"/> for the <see cref="T:Habanero.UI.Base.PanelBuilder"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelBuilder.ControlFactory">
            <summary>
             Gets and Sets the control Factory that is used to create the individual controls on the <see cref="T:Habanero.UI.Base.IPanel"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.StringTextBoxFilter">
            <summary>
            A filter that comprises a TextBox and filters on a string type.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.StringTextBoxFilter.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.StringTextBoxFilter"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.StringTextBoxFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.StringTextBoxFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringTextBoxFilter.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.StringTextBoxFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringTextBoxFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringTextBoxFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FilterControlBuilder">
            <summary>
            Builds an <see cref="T:Habanero.UI.Base.IFilterControl"/> up using a <see cref="T:Habanero.BO.ClassDefinition.FilterDef"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlBuilder.#ctor(Habanero.UI.Base.IControlFactory)">
            <summary>
            The constructor.  
            </summary>
            <param name="controlFactory">The control factory to use in creating controls to go on the <see cref="T:Habanero.UI.Base.IFilterControl"/></param>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlBuilder.BuildFilterControl(Habanero.BO.ClassDefinition.FilterDef)">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.IFilterControl"/> using the <see cref="T:Habanero.UI.Base.IControlFactory"/> and creates all the filter controls
            defined by the <see cref="T:Habanero.BO.ClassDefinition.FilterDef"/> given.
            </summary>
            <param name="filterDef">The <see cref="T:Habanero.BO.ClassDefinition.FilterDef"/> to use in creation.</param>
            <returns>The created <see cref="T:Habanero.UI.Base.IFilterControl"/></returns>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlBuilder.BuildFilterControl(Habanero.Base.IFilterDef,Habanero.UI.Base.IFilterControl)">
            <summary>
            Clears and populates the given <see cref="T:Habanero.UI.Base.IFilterControl"/> using the <see cref="T:Habanero.BO.ClassDefinition.FilterDef"/> given.
            </summary>
            <param name="filterDef">The <see cref="T:Habanero.BO.ClassDefinition.FilterDef"/> defining what filter fields are required</param>
            <param name="filterControl">The <see cref="T:Habanero.UI.Base.IFilterControl"/> to place the filter controls on.</param>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlBuilder.BuildCustomFilter(Habanero.BO.ClassDefinition.FilterPropertyDef)">
            <summary>
             Builds a custom filter.
            </summary>
            <param name="filterPropertyDef"></param>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IExtendedComboBox">
            <summary>
             A <see cref="P:Habanero.UI.Base.IExtendedComboBox.ComboBox"/> with a <see cref="P:Habanero.UI.Base.IExtendedComboBox.Button"/> next to it on the right with a '...' displayed as the text.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IExtendedComboBox.ComboBox">
            <summary>
             Returns the <see cref="P:Habanero.UI.Base.IExtendedComboBox.ComboBox"/> in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IExtendedComboBox.Button">
            <summary>
             Returns the <see cref="P:Habanero.UI.Base.IExtendedComboBox.Button"/> in the control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ListComboBoxMapper">
            <summary>
            Wraps a ComboBox in order to display and capture a property of the business object.
            The List of items to be selected is a '|' seperated list. 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ListComboBoxMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor form <see cref="T:Habanero.UI.Base.ListComboBoxMapper"/>
            </summary>
            <param name="ctl"></param>
            <param name="propName"></param>
            <param name="isReadOnly"></param>
            <param name="factory"></param>
        </member>
        <member name="M:Habanero.UI.Base.ListComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ListComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value in the control from its business object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ListComboBoxMapper.SetList(System.String)">
            <summary>
            Populates the Items list based on the pipe (|) seperated
            string list.
            </summary>
            <param name="list">A pipe (|) seperated string representing 
            the list of string options to populate the list e.g Mr|Mrs|Dr </param>
        </member>
        <member name="T:Habanero.UI.Base.ExtendedComboBoxMapper">
            <summary>
             The mapper for <see cref="T:Habanero.UI.Base.IExtendedComboBox"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ExtendedComboBoxMapper.#ctor(Habanero.UI.Base.IExtendedComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructs the mapper for <see cref="T:Habanero.UI.Base.IExtendedComboBox"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ExtendedComboBoxMapper.ShowPopupForm">
            <summary>
             Shows the popup form that is displayed when the button is clicked.
             This popup form is used to edit the <see cref="P:Habanero.UI.Base.ExtendedComboBoxMapper.BusinessObject"/>s that fill the combobox.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ExtendedComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ExtendedComboBoxMapper.UpdateControlValueFromBusinessObject">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ExtendedComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ExtendedComboBoxMapper.PopupForm">
            <summary>
             Returns the Popup Form.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ExtendedComboBoxMapper.BusinessObject">
            <summary>
            Gets and sets the business object that has a property
            being mapped by this mapper.  In other words, this property
            does not return the exact business object being shown in the
            control, but rather the business object shown in the
            form.  Where the business object has been amended or
            altered, the <see cref="M:Habanero.UI.Base.ControlMapper.UpdateControlValueFromBusinessObject"/> method is automatically called here to 
            implement the changes in the control itself.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ExtendedComboBoxMapper.LookupList">
            <summary>
            Gets and sets the lookup list used to populate the items in the
            ComboBox.  This method is typically called by SetupLookupList().
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IUserControlHabanero">
            <summary>
            Provides an empty control that can be used to create other controls
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ControlFactoryManager">
            <summary>
            This manager groups common logic for IControlFactory objects.
            Do not use this object in working code - rather call the appropriate IControlFactory
            implementation.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ControlFactoryManager.#ctor(Habanero.UI.Base.IControlFactory)">
            <summary>
             Creates the ControlFactoryManager
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="T:Habanero.UI.Base.ComboBoxManager">
            <summary>
            This manager groups common logic for IComboBox objects.
            Do not use this object in working code - rather call CreateComboBox
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxManager.#ctor(Habanero.UI.Base.IComboBox)">
            <summary>
            Creates <see cref="T:Habanero.UI.Base.ComboBoxManager"/>
            </summary>
            <param name="comboBox"></param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxManager.GetSelectedItem(System.Object)">
            <summary>
             Returns the Key for the Selected Item if it is a <see cref="T:Habanero.UI.Base.ComboPair"/> else
             returns the selectedItem.
            </summary>
            <param name="selectedItem"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxManager.GetItemToSelect(System.Object)">
            <summary>
             If the <see cref="T:Habanero.UI.Base.IComboBox"/> contains <see cref="T:Habanero.UI.Base.ComboPair"/>s ;<br/>
               If the <paramref name="value"/> equals a <see cref="P:Habanero.UI.Base.ComboPair.Key"/> for a <see cref="T:Habanero.UI.Base.ComboPair"/> then return the <see cref="T:Habanero.UI.Base.ComboPair"/>;<br/>
               else returns null;<br/>
             else return the value;<br/>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxManager.GetSelectedValue(System.Object)">
            <summary>
             
             If the item is a <see cref="T:Habanero.UI.Base.ComboPair"/> then returns the <see cref="P:Habanero.UI.Base.ComboPair.Value"/> for the <see cref="T:Habanero.UI.Base.ComboPair"/>
               else returns the item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxManager.GetValueToSelect(System.Object)">
            <summary>
             If the <see cref="T:Habanero.UI.Base.IComboBox"/> contains <see cref="T:Habanero.UI.Base.ComboPair"/>s <br/>
               If the value is equal to the <see cref="P:Habanero.UI.Base.ComboPair.Value"/> for a <see cref="T:Habanero.UI.Base.ComboPair"/> then<br/>
                returns the <see cref="T:Habanero.UI.Base.ComboPair"/> else returns the null.<br/>
             Else<br/>
              returns the value<br/>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.ITreeView">
            <summary>
            Displays a hierarchical collection of labeled items, each represented by a TreeNode
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.ExpandAll">
            <summary>Expands all the tree nodes.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.CollapseAll">
            <summary>Collapses all the tree nodes.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.GetNodeCount(System.Boolean)">
            <summary>Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</summary>
            <returns>The number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.BeginUpdate">
            <summary>
            Disables any redrawing of the tree view.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.EndUpdate">
            <summary>
            Enables the redrawing of the tree view.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeView.GetNodeAt(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="intX"></param>
             <param name="intY"></param>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.Nodes">
            <summary>
            The collection (<see cref="T:Habanero.UI.Base.ITreeNodeCollection"/>) of <see cref="T:Habanero.UI.Base.ITreeNode"/>s in this <see cref="T:Habanero.UI.Base.ITreeView"/>.
            This collection only returns the <see cref="T:Habanero.UI.Base.ITreeNode"/>s that are directly assigned to the <see cref="T:Habanero.UI.Base.ITreeView"/>.
            i.e. all the nodes shown in this collection are Root Nodes.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.TopNode">
            <summary>
            The top <see cref="T:Habanero.UI.Base.ITreeNode"/> or first node shown in the <see cref="T:Habanero.UI.Base.ITreeView"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.SelectedNode">
            <summary>
            The currently selected <see cref="T:Habanero.UI.Base.ITreeNode"/> in the <see cref="T:Habanero.UI.Base.ITreeView"/>.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.AfterSelect">
            <summary>
            An event that is fired after the <see cref="T:Habanero.UI.Base.ITreeNode"/>  is selected.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.BeforeSelect">
            <summary>
            An event that is fired just before the <see cref="T:Habanero.UI.Base.ITreeNode"/> is selected.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.BeforeExpand">
            <summary>Occurs before the tree node is expanded.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.BeforeCheck">
            <summary>Occurs before the tree node check box is checked.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.BeforeCollapse">
            <summary>Occurs before the tree node is collapsed.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.AfterCheck">
            <summary>Occurs after the tree node check box is checked.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.AfterExpand">
            <summary>Occurs after the tree node is expanded.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.UI.Base.ITreeView.AfterCollapse">
            <summary>Occurs after the tree node is collapsed.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.TreeViewNodeSorter">
            <summary>Gets or sets the implementation of <see cref="T:System.Collections.IComparer"></see> to perform a custom sort of the <see cref="T:Habanero.UI.Base.ITreeView"></see> nodes.</summary>
            <returns>The <see cref="T:System.Collections.IComparer"></see> to perform the custom sort.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.Sorted">
            <summary>Gets or sets a value indicating whether the tree nodes in the tree view are sorted.</summary>
            <returns>true if the tree nodes in the tree view are sorted; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.HideSelection">
             <summary>
            
             </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed.
            </summary>
            <value>
            	<c>true</c> if check boxes are displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.ShowPlusMinus">
            <summary>
            Gets or sets a value indicating whether to show plus minus.
            </summary>
            <value>
            	<c>true</c> if [to show plus minus]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.ShowLines">
            <summary>
            Gets or sets a value indicating whether to show lines.
            </summary>
            <value>
            	<c>true</c> if to show lines; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.CanFocus">
            <summary>
            Gets a value indicating whether this instance can focus.
            </summary>
            <value>
            	<c>true</c> if this instance can focus; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.ImageIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.SelectedImageIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeView.PathSeparator">
             <summary>
            
             </summary>
        </member>
        <member name="T:Habanero.UI.Base.ITreeNode">
            <summary>
             An individual node in the <see cref="T:Habanero.UI.Base.ITreeView"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.Expand">
            <summary>
            Expands this node to show the child nodes.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.Toggle">
            <summary>Toggles the tree node to either the expanded or collapsed state.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.Remove">
            <summary>Removes the current tree node from the tree view control.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.ExpandAll">
            <summary>Expands all the child tree nodes.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.EnsureVisible">
            <summary>Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.Collapse">
            <summary>Collapses the tree node.</summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.Collapse(System.Boolean)">
            <summary>Collapses the <see cref="T:Habanero.UI.Base.ITreeNode"></see> and optionally collapses its children.</summary>
            <param name="ignoreChildren">true to leave the child nodes in their current state; false to collapse the child nodes.</param>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNode.GetNodeCount(System.Boolean)">
            <summary>
            Returns the number of child tree nodes.
            </summary>
            <param name="blnIncludeSubTrees">true if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, false . </param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Text">
            <summary>
             The text shown in the <see cref="T:Habanero.UI.Base.ITreeNode"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Tag">
            <summary>
             Gets or sets the object that contains data about the <see cref="T:Habanero.UI.Base.ITreeNode"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Parent">
            <summary>
            The parent <see cref="T:Habanero.UI.Base.ITreeNode"/> if one exists null if this is the Root Node.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Nodes">
            <summary>Gets the collection of <see cref="T:Habanero.UI.Base.ITreeNode"></see> objects assigned to the current tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNodeCollection"></see> that represents the tree nodes assigned to the current tree node.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.IsExpanded">
            <summary>Gets a value indicating whether the tree node is in the expanded state.</summary>
            <returns>true if the tree node is in the expanded state; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.FullPath">
            <summary>
            Gets the full path.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.BackColor">
            <summary>Gets or sets the background color of the tree node.</summary>
            <returns>The background <see cref="T:System.Drawing.Color"></see> of the tree node. The default is <see cref="F:System.Drawing.Color.Empty"></see>.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.FirstNode">
            <summary>Gets the first child tree node in the tree node collection.</summary>
            <returns>The first child <see cref="T:Habanero.UI.Base.ITreeNode"></see> in the <see cref="P:Habanero.UI.Base.ITreeNode.Nodes"></see> collection.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.ForeColor">
            <summary>Gets or sets the foreground color of the tree node.</summary>
            <returns>The foreground <see cref="T:System.Drawing.Color"></see> of the tree node.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Index">
            <summary>Gets the position of the tree node in the tree node collection.</summary>
            <returns>A zero-based index value that represents the position of the tree node in the <see cref="P:Habanero.UI.Base.ITreeNode.Nodes"></see> collection.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.IsEditing">
            <summary>Gets a value indicating whether the tree node is in an editable state.</summary>
            <returns>true if the tree node is in editable state; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.IsSelected">
            <summary>Gets a value indicating whether the tree node is in the selected state.</summary>
            <returns>true if the tree node is in the selected state; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.IsVisible">
            <summary>Gets a value indicating whether the tree node is visible or partially visible.</summary>
            <returns>true if the tree node is visible or partially visible; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.LastNode">
            <summary>Gets the last child tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNode"></see> that represents the last child tree node.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Level">
            <summary>Gets the zero-based depth of the tree node in the <see cref="T:Habanero.UI.Base.ITreeView"></see> control.</summary>
            <returns>The zero-based depth of the tree node in the <see cref="T:Habanero.UI.Base.ITreeView"></see> control.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.PrevNode">
            <summary>Gets the previous sibling tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNode"></see> that represents the previous sibling tree node.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.PrevVisibleNode">
            <summary>Gets the previous visible tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNode"></see> that represents the previous visible tree node.</returns>  
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.NextNode">
            <summary>Gets the next sibling tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNode"></see> that represents the next sibling tree node.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.NextVisibleNode">
            <summary>Gets the next visible tree node.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeNode"></see> that represents the next visible tree node.</returns>
            <filterpriority>1</filterpriority>        
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.NodeFont">
            <summary>
            Gets or sets the node font.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.SelectedImageIndex">
            <summary>
            Gets or sets the selected image index.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.ImageIndex">
            <summary>
            Gets or sets the image index.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.TreeView">
            <summary>Gets the parent tree view that the tree node is assigned to.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.ITreeView"></see> that represents the parent tree view that the tree node is assigned to, or null if the node has not been assigned to a tree view.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Checked">
            <summary>
            Is this node checked or not.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNode.Name">
            <summary>
            The tree node name
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ITreeNodeCollection">
            <summary>
            A collection of nodes. This is used a children of a Node or all nodes in the tree.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNodeCollection.Add(Habanero.UI.Base.ITreeNode)">
            <summary>
            Adds a new <paramref name="treeNode"/> to the collection of <see cref="T:Habanero.UI.Base.ITreeNode"/>s
            </summary>
            <param name="treeNode">the <see cref="T:Habanero.UI.Base.ITreeNode"/> that is being added to the collection</param>
            <returns>index of the added item</returns>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNodeCollection.Add(System.String)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text.
            </summary>
            <param name="text">The label text displayed by the TreeNode .</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNodeCollection.Add(System.String,System.String)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text.
            </summary>
            <param name="name">The name of the node(used as the key).</param>
            <param name="text">The label text displayed by the TreeNode .</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Habanero.UI.Base.ITreeNodeCollection.Remove(Habanero.UI.Base.ITreeNode)">
            <summary>
            Removes the specified tree view node.
            </summary>
            <param name="objTreeViewNode">Obj tree view node.</param>
        </member>
        <member name="P:Habanero.UI.Base.ITreeNodeCollection.Item(System.Int32)">
            <summary>
            Returns the item identified by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.ITabPageCollection">
            <summary>
            Contains the collection of controls that the TabPage uses
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITabPageCollection.Add(Habanero.UI.Base.ITabPage)">
            <summary>
            Adds a tab page to the collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITabPageCollection.IndexOf(Habanero.UI.Base.ITabPage)">
            <summary>
            Retrieves the index of the specified tab page in the collection
            </summary>
            <returns>A zero-based index value that represents the position of the specified
            tab page in the collection</returns>
        </member>
        <member name="M:Habanero.UI.Base.ITabPageCollection.Clear">
            <summary>
            Clears all the tab pages.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITabPageCollection.Item(System.Int32)">
            <summary>
            Indicates the tab page at the specified indexed location in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITabPageCollection.Count">
            <summary>
            Indicates the number of tab pages in the collection
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PanelFactory">
            <summary>
            Creates panels for displaying business object details on a form.  Use
            CreatePanel to create the panel and catch the <see cref="T:Habanero.UI.Base.IPanelFactoryInfo"/> generated,
            which contains all the information relating to the panel, including the controls, the
            mappers, the business object and the panel control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IPanelFactory">
            <summary>
            Creates panels for displaying business object details on a form.  Use
            CreatePanel to create the panel and catch the <see cref="T:Habanero.UI.Base.IPanelFactoryInfo"/> generated,
            which contains all the information relating to the panel, including the controls, the
            mappers, the business object and the panel control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IPanelFactory.CreatePanel">
            <summary>
            Creates a panel to display a business object
            </summary>
            <returns>Returns the panel info object containing the panel</returns>
        </member>
        <member name="M:Habanero.UI.Base.IPanelFactory.CreateOnePanelPerUIFormTab">
            <summary>
            Creates one panel for each UI Form definition of a business object
            </summary>
            <returns>Returns the list of panel info objects created</returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.#ctor(Habanero.BO.BusinessObject,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new PanelFactory object, assuming
            the ui form definition is from an unnamed ui definition
            </summary>
            <param name="bo">The business object to be represented</param>
            <param name="controlFactory">the control factory used to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.#ctor(Habanero.BO.BusinessObject,Habanero.BO.ClassDefinition.UIForm,Habanero.UI.Base.IControlFactory)">
            <summary>
            A constructor to initialise a new instance, with a UIForm object 
            specified
            </summary>
            <param name="bo">The business object to be represented</param>
            <param name="uiForm"></param>
            <param name="controlFactory">the control factory used to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.#ctor(Habanero.BO.BusinessObject,System.String,Habanero.UI.Base.IControlFactory)">
            <summary>
            A constructor as before, but with a UIDefName specified
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.InitialiseFactory(Habanero.BO.BusinessObject)">
            <summary>
            Initialises factory components
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CreatePanel">
            <summary>
            Creates a panel to display a business object
            </summary>
            <returns>Returns the panel info object containing the panel</returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CreateOnePanelPerUIFormTab">
            <summary>
            Creates one panel for each UI Form definition of a business object
            </summary>
            <returns>Returns the list of panel info objects created</returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CreateOnePanel(Habanero.BO.ClassDefinition.IUIFormTab)">
            <summary>
            Creates a panel with the controls and dimensions as prescribed
            </summary>
            <param name="uiFormTab">The UIFormTab object</param>
            <returns>Returns the object containing the new panel</returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CheckGeneralParameters(Habanero.BO.ClassDefinition.UIFormField,Habanero.UI.Base.IControlHabanero)">
            <summary>
            Checks for a range of parameters that may apply to some or all fields
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CheckIfEditable(Habanero.BO.ClassDefinition.UIFormField,Habanero.UI.Base.IControlHabanero)">
            <summary>
            Checks whether a given field should be editable and makes appropriate
            changes.  If the property is an ObjectID and the BO
            is not new, then editing should not be done.
            </summary>
            <param name="field">The field being added</param>
            <param name="ctl">The control being prepared</param>
            <returns>Returns true if editable</returns>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CreateControl(Habanero.BO.ClassDefinition.UIFormField,Habanero.UI.Base.IControlFactory)">
            <summary>
            Creates the appropriate control for the given field element.
            Preference is given to a specific type over the type and assembly names.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactory.CreatePanelWithGrid(Habanero.BO.ClassDefinition.IUIFormGrid)">
            <summary>
            Creates a panel with a grid containing the business object
            information
            </summary>
            <param name="formGrid">The grid to fill</param>
            <returns>Returns the object containing the panel</returns>
        </member>
        <member name="T:Habanero.UI.Base.StaticDataEditorManager">
            <summary>
            Provides an editor for static data in an application.  Static data serves
            a number purposes including providing source data for lookup lists used in
            drop-downs.
            <br/>
            The editor typically consists of a TreeView on the left and an EditableGrid
            on the right, where data for the selected type in the TreeView can be edited.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.#ctor(Habanero.UI.Base.IStaticDataEditor,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constrcutor for the <see cref="T:Habanero.UI.Base.StaticDataEditorManager"/>
            </summary>
            <param name="staticDataEditor"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.AddSection(System.String)">
            <summary>
            Adds a section to the treeview, under which individual items
            can be listed
            </summary>
            <param name="sectionName">The name of the section as it appears to the user</param>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.AddItem(System.String,Habanero.Base.IClassDef)">
            <summary>
            Adds an item to the treeview
            </summary>
            <param name="itemName">The name of the item as it appears to the user</param>
            <param name="classDef">The class definition holding a grid def used to
            construct the grid for that type</param>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.SelectItem(System.String)">
            <summary>
            Selects an item with the given name in the treeview
            </summary>
            <param name="itemName">The name of the item to select</param>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.SaveChanges">
            <summary>
            Saves the changes made to the grid
            </summary>
            <returns>Returns true if saved successfully</returns>
        </member>
        <member name="M:Habanero.UI.Base.StaticDataEditorManager.RejectChanges">
            <summary>
            Rejects (restores) changes to the grid since the last save
            </summary>
            <returns>Returns true if restored successfully</returns>
        </member>
        <member name="T:Habanero.UI.Base.ComboBoxCollectionSelector">
            <summary>
            This class provides mapping from a business object collection to a
            user interface ComboBox.  This mapper is used at code level when
            you are explicitly providing a business object collection.
            This Class is typically used by the <see cref="T:Habanero.UI.Base.IBOComboBoxSelector"/> control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.#ctor(Habanero.UI.Base.IComboBox,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to create a new collection ComboBox mapper object.
            </summary>
            <param name="comboBox">The ComboBox object to map</param>
            <param name="controlFactory">The control factory used to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.#ctor(Habanero.UI.Base.IComboBox,Habanero.UI.Base.IControlFactory,System.Boolean)">
            <summary>
            Constructor to create a new collection ComboBox mapper object.
            </summary>
            <param name="comboBox">The ComboBox object to map</param>
            <param name="controlFactory">The control factory used to create controls</param>
            <param name="autoSelectFirstItem"></param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.RegisterForControlEvents">
            <summary>
            Registers this controller for the <see cref="E:Habanero.UI.Base.IComboBox.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.DeregisterForControlEvents">
            <summary>
            Deregisters this controller for the <see cref="E:Habanero.UI.Base.IComboBox.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.SetCollection(Habanero.Base.IBusinessObjectCollection,System.Boolean)">
            <summary>
            Sets the collection being represented to a specific collection
            of business objects
            </summary>
            <param name="collection">The collection to represent</param>
            <param name="includeBlank">Whether to a put a blank item at the
            top of the list</param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.BusinessObjectRemovedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been removed from
            the collection - it subsequently removes the item from the ComboBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.BusinessObjectAddedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been added to
            the collection - it subsequently adds the item to the ComboBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.SetComboBoxCollection(Habanero.UI.Base.IComboBox,Habanero.Base.IBusinessObjectCollection,System.Boolean)">
            <summary>
            Set the list of objects in the ComboBox to a specific collection of
            business objects.<br/>
            Important: If you are changing the business object collection,
            use the SetBusinessObjectCollection method instead, which will call this method
            automatically.
            </summary>
            <param name="cbx">The ComboBox being controlled</param>
            <param name="col">The business object collection used to populate the items list</param>
            <param name="includeBlank">Whether to include a blank item at the
            top of the list</param>
        </member>
        <member name="M:Habanero.UI.Base.ComboBoxCollectionSelector.Clear">
            <summary>
             Clears all items in the Combo Box and sets the selected item and <see cref="P:Habanero.UI.Base.ComboBoxCollectionSelector.Collection"/>
             to null
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ComboBoxCollectionSelector.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboBoxCollectionSelector.SelectedBusinessObject">
            <summary>
            Returns the business object, in object form, that is currently 
            selected in the ComboBox list, or null if none is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboBoxCollectionSelector.Control">
            <summary>
            Returns the ComboBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboBoxCollectionSelector.AutoSelectFirstItem">
            <summary>
            Must the first combo box item be auto selected or not. If it is autoselect then this item will be shown as selected
            when the combo box is loaded and the Selected event will be fired.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboBoxCollectionSelector.ControlFactory">
            <summary>
            Returns the control factory used to generate controls
            such as the label
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ComboBoxCollectionSelector.Collection">
            <summary>
            Returns the collection used to populate the items shown in the ComboBox
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMenuItem">
            <summary>
            Represents a menu item displayed in the Menu control. This class cannot be inherited.
             A Menu control is made up of a hierarchy of menu items represented by MenuItem objects. 
            Menu items at the top level (level 0) that do not have a
             parent menu item are called root menu items. A menu item that has a parent menu item is 
            called a submenu item. All root menu items are stored in the Items collection. Submenu 
            items are stored in a parent menu item's <see cref="P:Habanero.UI.Base.IMenuItem.MenuItems"/> collection.
            <remarks>
            This Inteface is an extract of common functionality required for menu item and is used to 
            isolate the implementation of the actual menu from the menu code using the menu.
            This allows the developer to swap menu's that support this interface without having to redevelop 
            any menu code.
            Habanero uses this to isolate the UIframework so that a different framework can be implemented
            using these interfaces.
            This allows the Architecture to swap between Visual Web Gui and Windows or in fact between any UI framework and
            any other UI Framework.
            </remarks>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMenuItem.PerformClick">
            <summary>
            Performs the Click event for this <see cref="T:Habanero.UI.Base.IMenuItem"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMenuItem.DoClick">
            <summary>
            This actually executes the Code when PerformClick is selected <see cref="T:Habanero.UI.Base.IMenuItem"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMenuItem.Text">
            <summary>
             The text displayed for this <see cref="T:Habanero.UI.Base.IMenuItem"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMenuItem.MenuItems">
            <summary>
            The Child Menu items for this <see cref="T:Habanero.UI.Base.IMenuItem"/>.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IMenuItem.Click">
            <summary>
            Occurs when the MenuItem is Clicked
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMainMenuHabanero">
            <summary>
             The main menu interface used to represent the main menu structure that has been 
             set up for it's specific implementation
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMainMenuHabanero.DockInForm(Habanero.UI.Base.IControlHabanero)">
            <summary>
            This method sets up the form so that the menu is displayed and the form is able to 
            display the controls loaded when the menu item is clicked.
            </summary>
            <param name="form">The form to set up with the menu</param>
        </member>
        <member name="P:Habanero.UI.Base.IMainMenuHabanero.MenuItems">
            <summary>
             The collection of menu items for this menu
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMainMenuHabanero.Name">
            <summary>
            Gets and Sets the name of the MainMenu
            </summary>
            <returns>A string representing the name.</returns>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewCheckBoxColumn">
            <summary>
            Hosts a collection of DataGridViewCheckBoxCell objects
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCheckBoxColumn.FalseValue">
            <summary>Gets or sets the underlying value corresponding to a cell value of false, which appears as an unchecked box.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cells in this column 
            will treat as a false value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCheckBoxColumn.IndeterminateValue">
            <summary>Gets or sets the underlying value corresponding to an indeterminate or null cell value, 
            which appears as a disabled checkbox.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cells in this column 
            will treat as an indeterminate value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCheckBoxColumn.ThreeState">
            <summary>Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.</summary>
            <returns>true if the hosted DataGridViewCheckBoxCell" objects are able to have a third, 
            indeterminate, state; otherwise, false. The default is false.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the DataGridViewCheckBoxColumn.CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCheckBoxColumn.TrueValue">
            <summary>Gets or sets the underlying value corresponding to a cell value of true, which appears as a checked box.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cell will treat as a true value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the DataGridViewCheckBoxColumn.CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.RelationshipComboBoxMapper">
            <summary>
            An interface for a mapper that <br/>
            Wraps/Decorates a ComboBox in order to display a collection of business objects
            in a combobox so that the user can select a business object for the purposes 
            of setting a related Business Object. 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.RelationshipComboBoxMapper.log">
            <summary>
            Uses for logging 
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.RelationshipComboBoxMapper._relationshipDef">
            <summary>
            The relationshipDef that is used for this Mapper.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructs a <see cref="T:Habanero.UI.Base.RelationshipComboBoxMapper"/> with the <paramref name="comboBox"/>
             <paramref name="relationshipName"/>
            </summary>
            <param name="comboBox">The combo box that is being mapped to</param>
            <param name="relationshipName">The name of the relation that is being mapped to</param>
            <param name="isReadOnly">Whether the Combo box can be used to edit from or whether it is only viewable</param>
            <param name="controlFactory">A control factory that is used to create control mappers etc</param>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.SetRelatedBusinessObject(Habanero.Base.IBusinessObject)">
            <summary>
            Sets the property value to that provided.  If the property value
            is invalid, the error provider will be given the reason why the
            value is invalid.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.LoadCollectionForBusinessObject">
            <summary>
            Provides an overrideable method for Loading the collection of business objects
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.UpdateControlValueFromBusinessObject">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.GetRelatedBusinessObject">
            <summary>
            Returns the property value of the business object being mapped
            </summary>
            <returns>Returns the property value in appropriate object form</returns>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.UpdateErrorProviderErrorMessage">
            <summary>
            Sets the Error Provider Error with the appropriate value for the property e.g. if it is invalid then
             sets the error provider with the invalid reason else sets the error provider with a zero length string.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.GetErrorMessage">
            <summary>
            Returns the Error Provider's Error message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.SetPropertyAttributes(System.Collections.Hashtable)">
            <summary>
            A form field can have attributes defined in the class definition.
            These attributes are passed to the control mapper via a hashtable
            so that the control mapper can adjust its behaviour accordingly.
            </summary>
            <param name="attributes">A hashtable of attributes, which consists
            of name-value pairs, where name is the attribute name.  This is usually
            set in the XML definitions for the class's user interface.</param>
        </member>
        <member name="M:Habanero.UI.Base.RelationshipComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.ErrorProvider">
            <summary>
            Gets the error provider for this control <see cref="T:Habanero.UI.Base.IErrorProvider"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.Control">
            <summary>
            The Control <see cref="T:Habanero.UI.Base.IComboBox"/> that is being mapped by this Mapper.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.IsReadOnly">
            <summary>
            Is this control readonly or can the value be changed via the user interface.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.ControlFactory">
            <summary>
            The Control factory used to create controls of the specified type.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.RelationshipName">
            <summary>
            The name of the relationship that is being mapped by this Mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.IncludeBlankItem">
            <summary>
            Get and Set whether to include a blank item in the selector or not.
            By default this is true.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.SelectedIndexChangedHandler">
            <summary>
            Gets or sets the SelectedIndexChanged event handler assigned to this mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.PropertyName">
            <summary>
            Returns the name of the property being edited in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.ClassDef">
            <summary>
             Gets and Sets the Class Def of the Business object whose property
             this control maps.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.BusinessObjectCollection">
            <summary>
            Gets and sets the Business Object Collection that is used to fill the combo box items.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.Habanero#UI#Base#IControlMapper#Control">
            <summary>
            Returns the control being mapped
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.BusinessObject">
            <summary>
            Gets and sets the business object that has a property
            being mapped by this mapper.  In other words, this property
            does not return the exact business object being shown in the
            control, but rather the business object shown in the
            form.  Where the business object has been amended or
            altered, the <see cref="M:Habanero.UI.Base.RelationshipComboBoxMapper.UpdateControlValueFromBusinessObject"/> method is automatically called here to 
            implement the changes in the control itself.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.RelationshipComboBoxMapper.MapperStrategy">
            <summary>
            Gets or sets the strategy assigned to this mapper <see cref="T:Habanero.UI.Base.IComboBoxMapperStrategy"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ICollapsiblePanelGroupControl">
            <summary>
            An interface for a Group on <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s. 
              The collapsible Panels are placed one above the other and when the one opens the panels below
              are moved down.
            The Interface works simply, you add the controls (AddControl) that will be displayed on 
                an <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> on this control in the order that you want them displayed.
            This control will then create the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> with the appropriate heading text and
                the appropriate Expanded (<see cref="P:Habanero.UI.Base.ICollapsiblePanel.ExpandedHeight"/> and Collapsed height.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ICollapsiblePanelGroupControl.AddControl(Habanero.UI.Base.IControlHabanero,System.String,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in an <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> control.
            </summary>
            <param name="contentControl"></param>
            <param name="headingText"></param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with the <see cref="P:Habanero.UI.Base.ICollapsiblePanel.CollapseButton"/>.Height are give the 
              <see cref="P:Habanero.UI.Base.ICollapsiblePanel.ExpandedHeight"/> that the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> will be when it is 
              expanded </param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ICollapsiblePanelGroupControl.AddControl(Habanero.UI.Base.ICollapsiblePanel)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> to this control. The <paramref name="collapsiblePanel"/> is
              added to this <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/>
            </summary>
            <param name="collapsiblePanel"></param>
            <returns>The collapsible Panel</returns>
        </member>
        <member name="E:Habanero.UI.Base.ICollapsiblePanelGroupControl.ItemSelected">
            <summary>
            Event handler for the Uncollapsed Event on any of the Collapsible Panels.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.PanelsList">
            <summary>
            A List of all <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s that are being managed and displayed by this Control.
            This must be treated as a ReadOnly List i.e. Never use PanelList.Add or PanelList.Remove.
            Since this will cause the Panel List to be out of sync with the ControlsCollection.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.ControlFactory">
            <summary>
            The <see cref="T:Habanero.UI.Base.IControlFactory"/> being used to create the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.ColumnLayoutManager">
            <summary>
            Returns the <see cref="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.ColumnLayoutManager"/> that is used for Laying out the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s
              on this control.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.TotalExpandedHeight">
            <summary>
            Returns the Total Expanded Height of this Control. I.e. the total height of this control required
            if all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> controls are fully expanded.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICollapsiblePanelGroupControl.AllCollapsed">
            <summary>
            Sets whether all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> controls are collapsed or expanded AllCollapsed = true will 
              <see cref="P:Habanero.UI.Base.ICollapsiblePanel.Collapsed"/> = true for all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBOColTabControl">
            <summary>
            Displays a business object collection in a tab control, with one
            business object per tab.  Each tab holds a business control, provided
            by the developer, that refreshes to display the business object for
            the current tab.
            <br/>
            This control is suitable for a business object collection with a limited
            number of objects.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IBOColTabControl.GetBo(Habanero.UI.Base.ITabPage)">
            <summary>
            Returns the business object represented in the specified tab page
            </summary>
            <param name="tabPage">The tab page</param>
            <returns>Returns the business object, or null if not available
            </returns>
        </member>
        <member name="M:Habanero.UI.Base.IBOColTabControl.GetTabPage(Habanero.Base.IBusinessObject)">
            <summary>
            Returns the TabPage object that is representing the given
            business object
            </summary>
            <param name="bo">The business object being represented</param>
            <returns>Returns the TabPage object, or null if not found</returns>
        </member>
        <member name="P:Habanero.UI.Base.IBOColTabControl.BusinessObjectControl">
            <summary>
            Sets the boControl that will be displayed on each tab page.  This must be called
            before the BoTabColControl can be used.<vbr/>
            The business object control that is
            displaying the business object information in the tab page
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IBOColTabControl.TabPageAdded">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IBOColTabControl.TabPageRemoved">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOColTabControl.TabControl">
            <summary>
            Returns the TabControl object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOColTabControl.CurrentBusinessObject">
            <summary>
            Returns the business object represented in the currently
            selected tab page
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOColTabControl.BusinessObjectControlCreator">
            <summary>
            Gets and Sets the Business Object Control Creator. This is a delegate for creating a
             Business Object Control. This can be used as an alternate to setting the control
            on the <see cref="T:Habanero.UI.Base.IBOColTabControl"/> so that a different instance of the control
             is created for each tab instead of them  using the same control with diff data.
            This has been created for performance reasons.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.KeyPressEventHandler">
            <summary>Represents the method that will handle the <see cref="T:Habanero.UI.Base.IControlHabanero"></see>.KeyPress event of a <see cref="T:Habanero.UI.Base.IControlHabanero"></see>.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.KeyPressEventArgs">
            <summary>Provides data for the <see cref="T:Habanero.UI.Base.IControlHabanero"></see>.KeyPress event.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.KeyPressEventArgs.#ctor(System.Char)">
            <summary>Initializes a new instance of the <see cref="T:Habanero.UI.Base.KeyPressEventArgs"></see> class.</summary>
            <param name="keyChar">The ASCII character corresponding to the key the user pressed. </param>
        </member>
        <member name="P:Habanero.UI.Base.KeyPressEventArgs.Handled">
            <summary>Gets or sets a value indicating whether the <see cref="T:Habanero.UI.Base.IControlHabanero"></see>.KeyPress event was handled.</summary>
            <returns>true if the event is handled; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.KeyPressEventArgs.KeyChar">
            <summary>Gets or sets the character corresponding to the key pressed.</summary>
            <returns>The ASCII character that is composed. For example, if the user presses SHIFT + K, this property returns an uppercase K.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.CollapsiblePanelManager">
            <summary>
             The Manager for the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> that handles the Common Logic for either VWG or Win.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollapsiblePanelManager.#ctor(Habanero.UI.Base.ICollapsiblePanel,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.CollapsiblePanelManager"/>
            </summary>
            <param name="collapsiblePanel"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.ExpandedHeight">
            <summary>
            Returns the Height required by the Panel when it is Expanded.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.Collapsed">
            <summary>
             Gets and Sets whether the <see cref="T:Habanero.UI.Base.IPanel"/> is collapsed or expanded.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.ContentControl">
            <summary>
            Gets and Sets the <see cref="T:Habanero.UI.Base.IControlHabanero"/> that is placed on the Panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.CollapseButton">
            <summary>
             The 
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.Pinned">
            <summary>
            Gets and Sets whether the Panel is Pinned or not.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelManager.PinLabel">
            <summary>
            Returns the PinLabel <see cref="T:Habanero.UI.Base.ILabel"/> so that the Image can be changed on it for styling.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IButton">
            <summary>
            Represents a button control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IButton.PerformClick">
            <summary>
            Generates a Click event for a button
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies the Button whether it is the default button
            so that it can adjust its appearance accordingly
            </summary>
            <param name="b">true if the button is to have the appearance
            of the default button; otherwise, false.</param>
        </member>
        <member name="T:Habanero.UI.Base.GridBaseManager">
            <summary>
            This manager groups common logic for IEditableGridControl objects.
            Do not use this object in working code.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.#ctor(Habanero.UI.Base.IGridBase,System.String)">
            <summary>
             Constructor
            </summary>
            <param name="gridBase"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.#ctor(Habanero.UI.Base.IGridBase)">
            <summary>
             Constructor
            </summary>
            <param name="gridBase"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            See <see cref="T:Habanero.UI.Base.IGridBase"/>.<see cref="T:Habanero.Base.IBusinessObjectCollection"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.DefaultGridLoader(Habanero.UI.Base.IGridBase,Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the default grid loader
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.GetDataTable(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Returns a DataView based on the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> defined by <paramref name="boCol"/>.
            The Columns in the <see cref="T:System.Data.DataView"/> will be the collumns defined in the Grids <see cref="P:Habanero.UI.Base.GridBaseManager.UiDefName"/>
            </summary>
            <param name="boCol">The collection that the DataView is based on</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.GetBusinessObjectCollection">
            <summary>
            See <see cref="P:Habanero.UI.Base.IBOColSelectorControl.BusinessObjectCollection"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IBOColSelectorControl.GetBusinessObjectAtRow(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.GetBusinessObjectRow(Habanero.Base.IBusinessObject)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridBase.GetBusinessObjectRow(Habanero.Base.IBusinessObject)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.Clear">
            <summary>
            See <see cref="M:Habanero.UI.Base.IBOColSelectorControl.Clear"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.ApplyFilter(Habanero.Base.IFilterClause)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridBase.ApplyFilter(Habanero.Base.IFilterClause)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseManager.RefreshGrid">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridBase.RefreshGrid"/>
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.GridBaseManager.BusinessObjectSelected">
            <summary>
            Occurs when a business object is selected
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.GridBaseManager.CollectionChanged">
            <summary>
            Handler for the CollectionChanged Event
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.DataSetProvider">
            <summary>
            See <see cref="P:Habanero.UI.Base.IGridBase.DataSetProvider"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.SelectedBusinessObject">
            <summary>
            See <see cref="P:Habanero.UI.Base.IBOColSelectorControl.SelectedBusinessObject"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.SelectedBusinessObjects">
            <summary>
            See <see cref="P:Habanero.UI.Base.IGridBase.SelectedBusinessObjects"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.GridLoader">
            <summary>
            See <see cref="P:Habanero.UI.Base.IGridBase.GridLoader"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.UiDefName">
            <summary>
            See <see cref="P:Habanero.UI.Base.IGridControl.UiDefName"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.ClassDef">
            <summary>
            See <see cref="P:Habanero.UI.Base.IGridControl.ClassDef"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.IDColumnName">
            <summary>
             Returns the name of the column being used for tracking the business object identity.
             If a <see cref="T:Habanero.Base.IDataSetProvider"/> is used then it will be the <see cref="P:Habanero.Base.IDataSetProvider.IDColumnName"/>
             Else it will be "HABANERO_OBJECTID".
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridBaseManager.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridBaseSetUpException">
            <summary>
            Thrown when a failure occurs while setting up a grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseSetUpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Base constructor with info and context for seraialisation
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseSetUpException.#ctor(System.String,System.Exception)">
            <summary>
             Constructor with message and inner exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseSetUpException.#ctor(System.String)">
            <summary>
             Constructor with a basic message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseSetUpException.#ctor">
            <summary>
             Base constructor with no parameters
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridDeveloperException">
            <summary>
            Thrown when a failure occurs on a grid, indicating that Habanero developers
            need to pay attention to aspects of the code
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridDeveloperException.#ctor(System.String)">
            <summary>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridDeveloperException.#ctor(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridDeveloperException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridDeveloperException.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridBaseInitialiseException">
            <summary>
            Thrown when a failure occurred during the initialisation of a grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseInitialiseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseInitialiseException.#ctor(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseInitialiseException.#ctor(System.String)">
            <summary>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Habanero.UI.Base.GridBaseInitialiseException.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DefaultBOCreator">
            <summary>
            Creates business objects.  The default creator is used by facilities
            like ReadOnlyGridControl to create new business objects.  Inherit
            from this class if you need to carry out additional steps at the time
            of creating a new business object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOCreator.#ctor(Habanero.BO.ClassDefinition.ClassDef)">
            <summary>
            Constructor to initialise a new object creator
            </summary> 
            <param name="classDef">The class definition</param>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOCreator.#ctor(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Constructor to initialise a new object creator
            </summary> 
            <param name="boCol">The collection this BO will be created as part of 
            (it will be added to the collection proper when it is saved)</param>
        </member>
        <member name="M:Habanero.UI.Base.DefaultBOCreator.CreateBusinessObject">
            <summary>
            Creates the object, without editing or saving it.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewCellCollection">
            <summary>
            Represents a collection of cells in a DataGridViewRow
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellCollection.Add(Habanero.UI.Base.IDataGridViewCell)">
            <summary>Adds a cell to the collection.</summary>
            <returns>The position in which to insert the new element.</returns>
            <param name="dataGridViewCell">A <see cref="T:Habanero.UI.Base.IDataGridViewCell"></see> to add to the collection.</param>
            <exception cref="T:System.InvalidOperationException">The row that owns this 
            <see cref="T:Habanero.UI.Base.IDataGridViewCellCollection"></see> already belongs to a DataGridView control.-or-
            dataGridViewCell already belongs to a DataGridViewRow&gt;.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellCollection.Clear">
            <summary>Clears all cells from the collection.</summary>
            <exception cref="T:System.InvalidOperationException">The row that owns this 
            <see cref="T:Habanero.UI.Base.IDataGridViewCellCollection"></see> already belongs to a DataGridView control.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellCollection.Contains(Habanero.UI.Base.IDataGridViewCell)">
            <summary>Determines whether the specified cell is contained in the collection.</summary>
            <returns>true if dataGridViewCell is in the collection; otherwise, false.</returns>
            <param name="dataGridViewCell">A <see cref="T:Habanero.UI.Base.IDataGridViewCell"></see> to locate in the collection.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewCellCollection.IndexOf(Habanero.UI.Base.IDataGridViewCell)">
            <summary>Returns the index of the specified cell.</summary>
            <returns>The zero-based index of the value of dataGridViewCell parameter, if it is found in the collection; otherwise, -1.</returns>
            <param name="dataGridViewCell">The cell to locate in the collection.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCellCollection.Item(System.Int32)">
            <summary>Gets or sets the cell at the provided index location. In C#, this property is 
            the indexer for the <see cref="T:Habanero.UI.Base.IDataGridViewCellCollection"></see> class.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewCell"></see> stored at the given index.</returns>
            <param name="index">The zero-based index of the cell to get or set.</param>
            <exception cref="T:System.InvalidOperationException">The specified cell when setting this 
            property already belongs to a DataGridView control.-or-The specified cell when setting this 
            property already belongs to a DataGridViewRow.</exception>
            <exception cref="T:System.ArgumentNullException">The specified value when setting this property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewCellCollection.Item(System.String)">
            <summary>Gets or sets the cell in the column with the provided name. In C#, this property is 
            the indexer for the <see cref="T:Habanero.UI.Base.IDataGridViewCellCollection"></see> class.</summary>
            <returns>The <see cref="T:Habanero.UI.Base.IDataGridViewCell"></see> stored in the column with the given name.</returns>
            <param name="columnName">The name of the column in which to get or set the cell.</param>
            <exception cref="T:System.InvalidOperationException">The specified cell when setting this 
            property already belongs to a DataGridView control.-or-The specified cell when setting this 
            property already belongs to a DataGridViewRow".</exception>
            <exception cref="T:System.ArgumentException">columnName does not match the name of any columns in the control.</exception>
            <exception cref="T:System.ArgumentNullException">The specified value when setting this property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.UI.Base.IBOListBoxSelector">
            <summary>
            Provides an interface that is specialised for showing a collection of 
            Business Objects in a <see cref="T:Habanero.UI.Base.IListBox"/> and allowing the user to select one.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IListBox">
            <summary>
            Represents a control to display a list of items
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListBox.ClearSelected">
            <summary>
            Unselects all items in the ListBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListBox.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or clears the selection for the specified item in a ListBox
            </summary>
            <param name="value">true to select the specified item; otherwise, false. </param>
            <param name="index">The zero-based index of the item in a ListBox
            to select or clear the selection for.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.IListBox.FindString(System.String)">
            <summary>
            Finds the first item in the ListBox that exactly matches the specified string
            </summary>
            <param name="strValue">The text to search for. </param>
            <returns>The zero-based index of the first item found; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IListBox.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item in the System.Windows.Forms.ListBox that exactly
            matches the specified string. The search starts at a specific starting index.
            </summary>
            <param name="strValue">The text to search for. </param>
            <param name="intStartIndex">The zero-based index of the item before the first
            item to be searched. Set to negative one (-1) to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="E:Habanero.UI.Base.IListBox.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property has changed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IListBox.Items">
            <summary>
            Gets the items of the ListBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IListBox.SelectedItem">
            <summary>
            Gets or sets the currently selected item in the ListBox
            </summary>
            <returns>An object that represents the current selection in the control.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.UI.Base.IListBox.SelectedItems">
            <summary>
            Gets a collection containing the currently selected items in the ListBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IListBox.SelectionMode">
            <summary>
            Gets or sets the method in which items are selected in the ListBox
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IListBox.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the ListBox are sorted alphabetically
            </summary>
            <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.UI.Base.IBOListBoxSelector.ListBox">
            <summary>
             Returns the Underlying <see cref="T:Habanero.UI.Base.IListBox"/> that is used by this selector
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IBOCollapsiblePanelSelector">
            <summary>
             Provides an interface for a control that specialises in showing a list of 
             Business Objects <see cref="T:Habanero.Base.IBusinessObjectCollection"/>.
             This control shows each business object in its own collapsible Panel.
             This is a very powerfull control for easily adding or viewing a fiew items E.g. for 
             a list of addresses for a person.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateRangeComboBoxManager">
            <summary>
            This manager groups common logic for IDateRangeComboBox objects.
            Do not use this object in working code - rather call CreateDateRangeComboBox
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.#ctor(Habanero.UI.Base.IComboBox)">
            <summary>
            Constructor to initialise a new ComboBox with a selection of
            date range options that are suited to a timeless system
            </summary>
            <param name="comboBox">The combobox to be managed</param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.InitialiseValues">
            <summary>
            Initialises the ComboBox with a list of values to display
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.BuildComboBoxList">
            <summary>
            Populates the ComboBox with the current set of date options
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.SetTopComboBoxItem(System.String)">
            <summary>
            Sets the item in the ComboBox that first appears to the user
            </summary>
            <param name="displayString">The string to display</param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.SetDateRangePairs">
            <summary>
            Creates a dictionary of enum and string pairs to define
            how each option is displayed and to recognise the appropriate
            option from the user's selection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.SetDateRangeString(Habanero.UI.Base.DateRangeOptions,System.String)">
            <summary>
            Amends the display string for a given date option
            </summary>
            <param name="option">The date option to amend</param>
            <param name="newDisplayString">The display string to apply</param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.GetDateRangeString(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Returns the display string for the date range option supplied
            </summary>
            <param name="option">The date range enumeration</param>
            <returns>Returns the string if found, otherwise throws an
            ArgumentException</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.AddDateOption(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Adds a date range option to the current list of options available
            </summary>
            <param name="option">The date range option to add</param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.RemoveDateOption(Habanero.UI.Base.DateRangeOptions)">
            <summary>
            Removes a date range option from the current list of options available
            </summary>
            <param name="option">The date range option to remove</param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.UseAllDateRangeOptions">
            <summary>
            Populates the ComboBox with all available DateOptions, since
            the default constructor only provides a standardised collection
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.CalculateDates">
            <summary>
            Calculates the start and end dates based on the currently
            selected ComboBox item
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.HourStart(System.DateTime)">
            <summary>
            Converts the given date to the start of the hour
            </summary>
            <param name="date">The date to convert</param>
            <returns>Returns the converted date</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.DayStart(System.DateTime)">
            <summary>
            Converts the given date to the previous midnight,
            factoring in the midnight offset
            </summary>
            <param name="date">The date to convert</param>
            <returns>Returns the converted date</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.WeekStart(System.DateTime)">
            <summary>
            Converts the given date to the previous Monday midnight,
            factoring in the midnight offset and week start
            </summary>
            <param name="date">The date to convert</param>
            <returns>Returns the converted date</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.MonthStart(System.DateTime)">
            <summary>
            Converts the given date to the first day of the month,
            factoring in the month start and midnight offset
            </summary>
            <param name="date">The date to convert</param>
            <returns>Returns the converted date</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxManager.YearStart(System.DateTime)">
            <summary>
            Converts the given date to the first day of the year,
            factoring in the year start, month start and midnight offset
            </summary>
            <param name="date">The date to convert</param>
            <returns>Returns the converted date</returns>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.OptionsToDisplay">
            <summary>
            Gets and sets the list of options to display.  If you intend
            to edit individual items in the list, either set the entire
            list once you have edited it, or use the Add and Remove methods
            provided by this class, otherwise the ComboBox list will not
            be refreshed.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.IgnoreTime">
            <summary>
            Sets the current date (eg. DateTime.Now or FixedNowDate) in all calculations to 12am.
            Use caution when using this together with a MidnightOffset, in which
            case you may rather want to manually edit the time just before calling
            StartDate and EditDate (use UseFixedNowDate and FixedNowDate).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.MidnightOffset">
            <summary>
            Gets and sets the amount of time to add or subtract from
            midnight when calculating date ranges.  This option will
            typically be used where a shift operates on a different
            pattern to 12am to 12am (the default).  If, for instance,
            an industry's operational day runs from 6am to 6am, this
            property can be set with a TimeSpan that adds 6 hours.
            Conversely, if the day starts 2 hours earlier, at 10pm the
            previous evening, set the property with a TimeSpan that
            subtracts 2 hours.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.WeekStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            Monday to redefine the first day of the week.  If Sunday
            is the first day of the week for the given application,
            then this property can be set with -1.  If Tuesday is the
            first day then use 1 (1+1=2).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.MonthStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            the first day of the month in order to adjust which day
            is typically the first of the month.  If the 5th is the typical start
            of a new month for the given application,
            then this property can be set to 4 (1+4=5).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.YearStartOffset">
            <summary>
            Gets and sets the number of months to add or subtract from
            January to redefine the first month of the year.  For example,
            if March is the first month of the new year for the given application,
            then this property can be set with 2 (1+2=3).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.UseFixedNowDate">
            <summary>
            Gets and sets whether the date used to calculate date ranges
            should be DateTime.Now or a fixed date that is specified.
            When false, all date ranges are calculated based on DateTime.Now.
            Setting this property to true allows you to use an alternative
            fixed date as your "Now" value, using the FixedNow property.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.FixedNowDate">
            <summary>
            Gets and sets a fixed date used to calculate date ranges, rather
            than DateTime.Now.  The UseFixedNowDate property must be set to
            true, otherwise this property will be ignored.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.Now">
            <summary>
            Returns the appropriate date used for date range calculations,
            depending on whether UseFixedNowDate has been set.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.StartDate">
            <summary>
            Returns the start date for the currently selected date range option,
            or DateTime.MinValue if no valid option is selected
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxManager.EndDate">
            <summary>
            Returns the end date for the currently selected date range option,
            or DateTime.MaxValue if no valid option is selected
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.EditableGridControlManager">
            <summary>
            This manager groups common logic for IEditableGridControl objects.
            Do not use this object in working code - rather call CreateEditableGridControl
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlManager.#ctor(Habanero.UI.Base.IEditableGridControl,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.EditableGridControlManager"/>
            </summary>
            <param name="gridControl"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlManager.Initialise(Habanero.Base.IClassDef)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlManager.Initialise(Habanero.Base.IClassDef,System.String)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef,System.String)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.EditableGridControlManager.Initialise(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IGridControl.Initialise(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewSelectedCellCollection">
            <summary>
            Represents a collection of cells that are selected in a DataGridView
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewSelectedCellCollection.Count">
            <summary>
            Gets the total number of cells in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewSelectedCellCollection.Item(System.Int32)">
            <summary>
            Gets the cell at the specified index.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewImageColumn">
            <summary>
            Hosts a collection of DataGridViewImageCell objects
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewImageColumn.Description">
            <summary>Gets or sets a string that describes the column's image. </summary>
            <returns>The textual description of the column image. The default is <see cref="F:System.String.Empty"></see>.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewImageColumn.Icon">
            <summary>Gets or sets the icon displayed in the cells of this column when the
             cell's Value property is not set and the cell's ValueIsIcon property is set to true.</summary>
            <returns>The <see cref="T:System.Drawing.Icon"></see> to display. The default is null.</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewImageColumn.Image">
            <summary>Gets or sets the image displayed in the cells of this column when the 
            cell's Value property is not set and the cell's ValueIsIcon property is set to false.</summary>
            <returns>The <see cref="T:System.Drawing.Image"></see> to display. The default is null.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewImageColumn.ValuesAreIcons">
            <summary>Gets or sets a value indicating whether cells in this column display 
            <see cref="T:System.Drawing.Icon"></see> values.</summary>
            <returns>true if cells display values of type <see cref="T:System.Drawing.Icon"></see>; false 
            if cells display values of type <see cref="T:System.Drawing.Image"></see>. The default is false.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null.</exception>
        </member>
        <member name="T:Habanero.UI.Base.AutoLoadingRelationshipComboBoxMapper">
            <summary>
            This mapper loads all the Business Objects of type relationshipDef.RelatedObjectClassDef.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.AutoLoadingRelationshipComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructs an <see cref="T:Habanero.UI.Base.AutoLoadingRelationshipComboBoxMapper"/> with the <paramref name="comboBox"/>
             <paramref name="relationshipName"/>
            </summary>
            <param name="comboBox">The combo box that is being mapped to</param>
            <param name="relationshipName">The name of the relation that is being mapped to</param>
            <param name="isReadOnly">Whether the Combo box can be used to edit from or whether it is only viewable</param>
            <param name="controlFactory">A control factory that is used to create control mappers etc</param>
        </member>
        <member name="M:Habanero.UI.Base.AutoLoadingRelationshipComboBoxMapper.LoadCollectionForBusinessObject">
            <summary>
            Provides an overrideable method for Loading the collection of business objects
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ISplitContainer">
            <summary>
            Represents a Container that has a Left Panel (Panel1) and a 
            Right Panel (Panel2) with a splitter bar seperting these two panels.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MessageBoxButtons">
            <summary>
            Specifies constants defining which buttons to display on a MessageBox.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.AbortRetryIgnore">
            <summary>
            The message box contains Abort, Retry, and Ignore buttons.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.OK">
            <summary>
            The message box contains an OK button.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.OKCancel">
            <summary>
            The message box contains OK and Cancel buttons.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.RetryCancel">
            <summary>
            The message box contains Retry and Cancel buttons.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.YesNo">
            <summary>
            The message box contains Yes and No buttons.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxButtons.YesNoCancel">
            <summary>
            The message box contains Yes, No, and Cancel buttons.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MessageBoxDefaultButton">
            <summary>
            Specifies constants defining the default button on a MessageBox.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxDefaultButton.Button1">
            <summary>
            The first button on the message box is the default button.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxDefaultButton.Button2">
            <summary>
            The second button on the message box is the default button.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxDefaultButton.Button3">
            <summary>
            The third button on the message box is the default button.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MessageBoxIcon">
            <summary>
            Specifies constants defining which information to display.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Asterisk">
            <summary>
            The message box contains a symbol consisting of a lowercase letter i in a circle.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Error">
            <summary>
            The message box contains a symbol consisting of white X in a circle with a red background.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Exclamation">
            <summary>
            The message box contains a symbol consisting of an exclamation point in a triangle with a yellow background.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Hand">
            <summary>
            The message box contains a symbol consisting of a white X in a circle with a red background.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Information">
            <summary>
            The message box contains a symbol consisting of a lowercase letter i in a circle.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.None">
            <summary>
            The message box contain no symbols.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Question">
            <summary>
            The message box contains a symbol consisting of a question mark in a circle.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Stop">
            <summary>
            The message box contains a symbol consisting of white X in a circle with a red background.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxIcon.Warning">
            <summary>
            The message box contains a symbol consisting of an exclamation point in a triangle with a yellow background.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MessageBoxOptions">
            <summary>
            Specifies options on a MessageBox.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxOptions.DefaultDesktopOnly">
            <summary>
            The message box is displayed on the active desktop.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxOptions.RightAlign">
            <summary>
            The message box text is right-aligned.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxOptions.RtlReading">
            <summary>
            Specifies that the message box text is displayed with right to left reading order.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.MessageBoxOptions.ServiceNotification">
            <summary>
            The message box is displayed on the active desktop.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewSelectedRowCollection">
            <summary>
            Represents a collection of DataGridViewRow objects that are selected in a DataGridView
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewSelectedRowCollection.Count">
            <summary>
            Gets the total number of rows in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewSelectedRowCollection.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataViewFilterClause">
            <summary>
            A super-class for filter clauses that filter which data to
            display in a DataView, according to some criteria
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DataViewFilterClause._filterValue">
            <summary>
            The actual value in the filterClause.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DataViewFilterClause._clauseOperator">
            <summary>
            The <see cref="T:Habanero.Base.FilterClauseOperator"/> to be used when creating this filterClause.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DataViewFilterClause._filterColumn">
            <summary>
            The Column Name (Property Name) to use when building this filter.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.#ctor(System.String,Habanero.Base.FilterClauseOperator,System.Object)">
            <summary>
            Constructor to create a new filter clause
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to compare to</param>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.GetFilterClauseString">
            <summary>
            Returns the full filter clause as a string
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.GetFilterClauseString(System.String,System.String)">
            <summary>
            Returns the filter clause as a string. The filter clause is a clause used for filtering
            a ADO.Net <see cref="T:System.Data.DataView"/>
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.CreateValueClause(System.String,System.String)">
            <summary>
            Returns the value part of the clause
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.CreateColumnClause">
            <summary>
            Returns the column part of the clause.  If the column contains any
            spaces or dashes, it is surrounded by square brackets.
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewFilterClause.CreateOperatorClause">
            <summary>
            Returns the operator in the clause as a string
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="T:Habanero.UI.Base.IEditableGridControl">
            <summary>
            Provides a combination of editable grid, filter and buttons used to edit a
            collection of business objects
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IEditableGridControl.Grid">
            <summary>
            Returns the editable grid object held. This property can be used to
            access a range of functionality for the grid
            (eg. myGridWithButtons.Grid.AddBusinessObject(...)).
            </summary>    
        </member>
        <member name="P:Habanero.UI.Base.IEditableGridControl.Buttons">
            <summary>
            Gets the buttons control used to save and cancel changes
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MultiplePropStringTextBoxFilter">
            <summary>
            A filter that comprises a TextBox and filters on a string type.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiplePropStringTextBoxFilter.#ctor(Habanero.UI.Base.IControlFactory,System.Collections.Generic.List{System.String},Habanero.Base.FilterClauseOperator)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.MultiplePropStringTextBoxFilter"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyNames"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.MultiplePropStringTextBoxFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.MultiplePropStringTextBoxFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiplePropStringTextBoxFilter.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiplePropStringTextBoxFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiplePropStringTextBoxFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiplePropStringTextBoxFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IFileChooser">
            <summary>
            Provides a means to choose a file and makes the selected
            path available to a control that needs it
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IFileChooser.SelectedFilePath">
            <summary>
            Gets or sets the selected file path
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ValidationCompareOperator">
            <summary>
            Operations that can be performed in a Compare validation
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.DataTypeCheck">
            <summary>
            Default - Check component DataType.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.Equal">
            <summary>
            Compare object is equal to ValueToCompare object
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.GreaterThan">
            <summary>
            Compare object is greater than ValueToCompare object
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.GreaterThanEqual">
            <summary>
            Compare object is greater than or equal to ValueToCompare object
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.LessThan">
            <summary>
            Compare object is less than ValueToCompare object
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.LessThanEqual">
            <summary>
            Compare object is less than or equal to ValueToCompare object
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ValidationCompareOperator.NotEqual">
            <summary>
            Compare object is not equal to ValueToCompare object
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MultiSelectorModel`1">
            <summary>
            The model for the multiselector control, which manages the lists of
            items in the multi-selector. The type of the items in 
            the lists is set by the template type.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.#ctor">
            <summary>
            Constructor to initialise a new model
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.Select(System.Collections.Generic.List{`0})">
            <summary>
            Selects multiple items at the same time.
            </summary>
            <param name="items">The list of items to select</param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.Select(`0)">
            <summary>
            Selects an option, removing it from the AllOptions and adding 
            it to the SelectedOptions
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.Deselect(System.Collections.Generic.List{`0})">
            <summary>
            Deselects a list of items at once
            </summary>
            <param name="items">The list of items to deselect</param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.Deselect(`0)">
            <summary>
            Deselects an option, removing it from the SelectedOptions and 
            adding it to the AllOptions
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.SelectAll">
            <summary>
            Selects all available options
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.DeselectAll">
            <summary>
            Deselects all options
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.AddOption(`0)">
            <summary>
            Adds an option to the collection of AllOptions
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.RemoveOption(`0)">
            <summary>
             Removes an option from the collection of options. 
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.OptionsChanged">
            <summary>
            Event raised when the available options have been changed
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.SelectionsChanged">
            <summary>
            Event raised when the current selection has been changed.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.OptionAdded">
            <summary>
            Event raised when a new option has been added
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.OptionRemoved">
            <summary>
            An event raised when an option has been removed
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.Selected">
            <summary>
            An event raised when an option has been selected
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.MultiSelectorModel`1.Deselected">
            <summary>
            An event raised when an option has been deselected.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.AllOptions">
            <summary>
            Sets the list of options (left hand side list).
            Note_ that this creates a shallow copy of the List.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.OptionsView">
            <summary>
            Returns a view of the AllOptions collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.SelectedOptions">
            <summary>
            Sets the list of selected items (right hand side list).
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.SelectionsView">
            <summary>
            Gets a view of the SelectedOptions collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.AvailableOptions">
            <summary>
            Returns the list of available options, which is the set 
            of AllOptions minus the set of SelectedOptions
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.Added">
            <summary>
            Returns the list of added selections (items selected since 
            setting the selections)
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.Removed">
            <summary>
            Returns the list of removed selections (items deselected 
            since setting the selections)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MultiSelectorModel`1.ModelEventArgs`1">
            <summary>
            The Event Arguements for the Multiselector Model
            </summary>
            <typeparam name="T">The object type used for the item</typeparam>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorModel`1.ModelEventArgs`1.#ctor(`1)">
            <summary>
             The constructor for the Event Arguements for the Multiselector Model
            </summary>
            <param name="item">The item in the model to which the event applies</param>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorModel`1.ModelEventArgs`1.Item">
            <summary>
            Gets the affected item
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridLoaderDelegate">
            <summary>
            The delegate used for custom loading of the grid
            </summary>
            <param name="grid">The grid to be loaded</param>
            <param name="col">The collection to load into the grid</param>
        </member>
        <member name="T:Habanero.UI.Base.IProgressBar">
            <summary>
            Represents a progress bar control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IProgressBar.Increment(System.Int32)">
            <summary>
            Advances the current position of the progress bar by the specified amount.
            </summary>
            <param name="value">The amount by which to increment the progress bar's current position. </param>
        </member>
        <member name="M:Habanero.UI.Base.IProgressBar.PerformStep">
            <summary>
            Advances the current position of the progress bar by the amount of the Step property.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IProgressBar.Maximum">
            <summary>
            Gets or sets the maximum value of the range of the control.
            </summary>
            <returns>The maximum value of the range. The default is 100.</returns>
            <exception cref="T:System.ArgumentException">The value specified is less than 0. </exception>
        </member>
        <member name="P:Habanero.UI.Base.IProgressBar.Minimum">
            <summary>
            Gets or sets the minimum value of the range of the control.
            </summary>
            <returns>The minimum value of the range. The default is 0.</returns>
            <exception cref="T:System.ArgumentException">The value specified for the property is less than 0. </exception>
        </member>
        <member name="P:Habanero.UI.Base.IProgressBar.Value">
            <summary>
            Gets or sets the current position of the progress bar.
            </summary>
            <returns>The position within the range of the progress bar. The default is 0.</returns>
            <exception cref="T:System.ArgumentException">The value specified is greater than the value of the Maximum property.-or- The value specified is less than the value of the Minimum property. </exception>
        </member>
        <member name="P:Habanero.UI.Base.IProgressBar.Step">
            <summary>
            Gets or sets the amount by which a call to the PerformStep method increases the current position of the progress bar.
            </summary>
            <returns>The amount by which to increment the progress bar with each call to the PerformStep method. The default is 10.</returns>
        </member>
        <member name="T:Habanero.UI.Base.DataGridViewSelectionMode">
            <summary>Describes how cells of a DataGridView control can be selected.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewSelectionMode.CellSelect">
            <summary>One or more individual cells can be selected.</summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewSelectionMode.FullRowSelect">
            <summary>The entire row will be selected by clicking its row's header or a cell contained in that row.</summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewSelectionMode.FullColumnSelect">
            <summary>The entire column will be selected by clicking the column's header or a cell contained in that column.</summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewSelectionMode.RowHeaderSelect">
            <summary>The row will be selected by clicking in the row's header cell. An individual cell can be selected by clicking that cell.</summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewSelectionMode.ColumnHeaderSelect">
            <summary>The column will be selected by clicking in the column's header cell. An individual cell can be selected by clicking that cell.</summary>
        </member>
        <member name="T:Habanero.UI.Base.IPanelInfo">
            <summary>
             A panel info is a class that wraps the panel and provides functionality 
              for linking a business object a layout manager and a panel.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IPanelInfo.ApplyChangesToBusinessObject">
            <summary>
             Applies any changes in any control on this panel to the business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IPanelInfo.ClearErrorProviders">
            <summary>
             Clears any error providers for all controls visible on this panel
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IPanelInfo.UpdateErrorProvidersErrorMessages">
            <summary>
            Sets the Error providers Error message with the appropriate message from the businessObject for each
            Control mapped on this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.Panel">
            <summary>
             The panel that this panel info is controlling
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.LayoutManager">
            <summary>
             Gets and sets the layout manager used for this Panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.FieldInfos">
            <summary>
             Returns a list of Field infos (info on the fields controlled by this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.BusinessObject">
            <summary>
             Sets the business object for this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.ControlsEnabled">
            <summary>
             Sets whether the controls on this panel are enabled or not
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.PanelInfos">
            <summary>
             A list of all panel infos containd in this panel info.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.UIFormTab">
            <summary>
            Gets the UIFormTab definition used to construct the panel
            for a single tab in the form.  By default, there is one
            tab for a form, even if it has not been explicitly defined.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.MinimumPanelHeight">
            <summary>
            Gets  the minimum height for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.UIForm">
            <summary>
            Gets the UIForm definition used to construct the
            panel - this is taken from the class definitions for the
            business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPanelInfo.PanelTabText">
            <summary>
            Gets the text for the panel tab (UIFormTab.Name)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataGridViewColumnSortMode">
            <summary>Defines how a <see cref="T:Habanero.UI.Base.IDataGridView"></see> column can be sorted by the user.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewColumnSortMode.NotSortable">
            <summary>
            The column can only be sorted programmatically, but it is not intended for sorting, 
            so the column header will not include space for a sorting glyph.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewColumnSortMode.Automatic">
            <summary>
            The user can sort the column by clicking the column header unless the
            column headers are used for selection. A sorting glyph will be displayed automatically.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DataGridViewColumnSortMode.Programmatic">
            <summary>
            The column can only be sorted programmatically, and the column header will include space for a sorting glyph.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGroupBoxGroupControl">
            <summary>
            Used to group a collections of Group Box Controls. This implements the <see cref="T:Habanero.UI.Base.IGroupControl"/>.
            The <see cref="T:Habanero.UI.Base.IGroupControl"/> is a control for grouping a number of child controls
            Typically properties of a Business object that are grouped together can be grouped together using this
            control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ConfirmSave">
            <summary>
            Checks whether the user wants to save
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGridWithPanelControl`1">
            <summary>
            Represents a control to edit a collection of business objects.  A grid
            lists the objects as specified by SetBusinessObjectCollection and a control
            below the grid allows the selected business object to be edited.  Default
            buttons are provided: Save, New, Delete and Cancel.
            <br/>
            The editing control is
            specified here as a IBusinessObjectControl, allowing the developer to pass
            in a custom control, but the default instantiation uses a IBusinessObjectPanel,
            which is more suited to displaying errors.  If the developer provides a custom
            control, they are responsible for updating the business object status
            and displaying useful feedback to the user (by
            catching appropriate events on the business object or the controls).
            <br/>
            Some customisation is provided through the GridWithPanelControlStrategy,
            including how controls should be enabled for the appropriate environment.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGridWithPanelControl`1.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.ReadOnlyGridControl">
            <summary>
            Gets the grid control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.BusinessObjectControl">
            <summary>
            Gets the control used to edit the selected business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.Buttons">
            <summary>
            Gets the control holding the buttons
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.CurrentBusinessObject">
            <summary>
            Gets the business object currently selected in the grid
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.GridWithPanelControlStrategy">
            <summary>
            Gets the strategy used to provide custom behaviour in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControl`1.ConfirmSaveDelegate">
            <summary>
            Called when the user attempts to move away from a dirty business object
            and needs to indicate Yes/No/Cancel to the option of saving.  This delegate
            facility is provided primarily to facilitate testing.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IGridWithPanelControlStrategy`1">
            <summary>
            Provides a strategy to add custom behaviour to a GridWithPanelControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IGridWithPanelControlStrategy`1.UpdateControlEnabledState(`0)">
            <summary>
            Provides custom control state.  Since this is called after the default
            implementation, it overrides it.
            </summary>
            <param name="lastSelectedBusinessObject">The previous selected business
            object in the grid - used to revert when a user tries to change a grid
            row while an object is dirty or invalid</param>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControlStrategy`1.ShowConfirmSaveDialog">
            <summary>
            Whether to show the save confirmation dialog when moving away from
            a dirty object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControlStrategy`1.CallApplyChangesToEditBusinessObject">
            <summary>
            Indicates whether PanelInfo.ApplyChangesToBusinessObject needs to be
            called to copy control values to the business object.  This will be
            the case if the application uses minimal events and does not update
            the BO every time a control value changes.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IGridWithPanelControlStrategy`1.RefreshGrid">
            <summary>
            Indicates whether the grid should be refreshed.  For instance, a VWG
            implementation needs regular refreshes due to the lack of synchronisation,
            but this behaviour has some adverse affects in the WinForms implementation
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.CollapsiblePanelGroupManager">
            <summary>
             The Manager for the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> that handles the Common Logic for either VWG or Win.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollapsiblePanelGroupManager.#ctor(Habanero.UI.Base.ICollapsiblePanelGroupControl,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructs the <see cref="T:Habanero.UI.Base.CollapsiblePanelGroupManager"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollapsiblePanelGroupManager.AddControl(Habanero.UI.Base.IControlHabanero,System.String,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in an <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> control.
            </summary>
            <param name="contentControl"></param>
            <param name="headingText"></param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with the <see cref="P:Habanero.UI.Base.ICollapsiblePanel.CollapseButton"/>.Height are give the 
              <see cref="P:Habanero.UI.Base.ICollapsiblePanel.ExpandedHeight"/> that the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> will be when it is 
              expanded </param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.CollapsiblePanelGroupManager.AddControl(Habanero.UI.Base.ICollapsiblePanel)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> to this control. The <paramref name="collapsiblePanel"/> is
               added to the CollapsiblePanelGroupControl.
            </summary>
            <param name="collapsiblePanel">The collapsiblePanelBeingAdded</param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelGroupManager.PanelsList">
            <summary>
            A List of all <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s that are being managed and displayed by this Control.
            Warning: This must be treated as a ReadOnly List. I.e. Adding or removing items from this list
            will result in the Panel being in an inconsitent state use AddControl instead.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelGroupManager.ControlFactory">
            <summary>
            The <see cref="T:Habanero.UI.Base.IControlFactory"/> being used to create the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelGroupManager.ColumnLayoutManager">
            <summary>
            Returns the <see cref="P:Habanero.UI.Base.CollapsiblePanelGroupManager.ColumnLayoutManager"/> that is used for Laying out the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s
              on this control.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelGroupManager.TotalExpandedHeight">
            <summary>
            Returns the Total Expanded Height of this Control. I.e. the total height of this control required
            if all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> controls are fully expanded.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollapsiblePanelGroupManager.AllCollapsed">
            <summary>
            Sets whether all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/> controls are collapsed or expanded AllCollapsed = true will 
              <see cref="P:Habanero.UI.Base.ICollapsiblePanel.Collapsed"/> = true for all the <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>s.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.WizardStepException">
            <summary>
            An exception used in Wizards denoting that some error has occurred in navigating between wizard steps.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.WizardStepException.#ctor(System.String)">
            <summary>
            Initialises the WizardStepException
            </summary>
            <param name="message">the message of the exception</param>
        </member>
        <member name="T:Habanero.UI.Base.WizardStepNotInitialised">
            <summary>
            Thrown when a wizard step is used but has not been initialised
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.WizardStepNotInitialised.#ctor(System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.WizardStepNotInitialised"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Habanero.UI.Base.WizardController">
            <summary>
            Controls the behaviour of a wizard, which guides users through a process one
            step at a time. Implementsts the <see cref="T:Habanero.UI.Base.IWizardController"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.#ctor">
            <summary>
            Initiliases the Wizard. When the Wizard is created there is no current step, the first call to GetNextStep() will move to the first step.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.AddStep(Habanero.UI.Base.IWizardStep)">
            <summary>
            Adds a step to the Wizard.  These are added in order.  To add items out of order use the WizardSteps property.
            </summary>
            <param name="step">The IWizardStep to add.</param>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.GetNextStep">
            <summary>
            Returns the next step in the Wizard and sets the current step to that step.
            </summary>
            <exception cref="T:Habanero.UI.Base.WizardStepException">Thrown if the current step is the last step.</exception>
            <returns>The next step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.GetPreviousStep">
            <summary>
            Returns the Previous Step and sets the step pointer to that step.
            </summary>
            <exception cref="T:Habanero.UI.Base.WizardStepException">Thrown if the current step is the first step.</exception>
            <returns>The previous step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.GetFirstStep">
            <summary>
            Returns the First Step of the Wizard and sets the current step to that step.
            </summary>
            <returns>The first step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.IsLastStep">
            <summary>
            Checks if the current step is the last step.
            </summary>
            <returns>True if the current step is the last step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.IsFirstStep">
            <summary>
            Checks if the current Step is the first step.
            </summary>
            <returns>True if the current step is the first step.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.Finish">
            <summary>
            Method that is to be run when the Wizard is finished. This method should do all persistance that is required.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.CanMoveOn(System.String@)">
            <summary>
            Checks if the Wizard can proceed to the next step. Calls through to the CanMoveOn method of the current IWizardStep.
            </summary>
            <param name="message">Describes why the Wizard cannot move on. Only applicable if CanMoveOn returns false.</param>
            <returns>True if moving to the next step is allowed.</returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.GetCurrentStep">
            <summary>
            Returns the step that the Wizard is currently on.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.WizardController.CancelWizard">
            <summary>
            This provides a method which is called when the wizard is cancelled. The wizard controller can 
            undo any changes that have occured up until that point so as to ensure that the objects are returned
            to their original state.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.WizardController.WizardFinished">
            <summary>
            Event Handler for the Wizard being finished. Allows you to do special handling when this occurs.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.WizardController.WizardSteps">
            <summary>
            Gets or Sets the list of Wizard Steps in the Wizard.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.WizardController.CurrentStep">
            <summary>
            Gets or Sets the Current Step of the Wizard.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.WizardController.StepCount">
            <summary>
            Returns the number of Steps in the Wizard.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PanelFactoryInfo">
            <summary>
            Manages a panel that has been created to view or edit business object
            details on a form.  This object is created when you call
            <see cref="M:Habanero.UI.Base.IPanelFactory.CreatePanel"/>, and contains references to the
            controls, mappers, the panel control itself and the business object.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactoryInfo.#ctor(Habanero.UI.Base.IPanel,Habanero.UI.Base.IControlMapperCollection,System.String,Habanero.UI.Base.IControlHabanero)">
            <summary>
            Constructor to initialise a new instance of the class
            </summary>
            <param name="panel">The panel control being managed</param>
            <param name="mappers">The control mappers collection</param>
            <param name="uiDefName">The UI definition name to use</param>
            <param name="firstControlToFocus">The first control to focus on</param>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactoryInfo.#ctor(Habanero.UI.Base.IPanel)">
            <summary>
            A constructor as before, but with only the panel specified
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelFactoryInfo.GetFormGrid(System.String)">
            <summary>
             Constructs and returns an <see cref="T:Habanero.UI.Base.IEditableGridControl"/> for a specified relationship.
            </summary>
            <param name="relationShipName"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.Panel">
            <summary>
            Returns the panel control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.ControlMappers">
            <summary>
            Returns the collection of control mappers, which map individual
            controls to the properties on the business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.FormGrids">
            <summary>
            Gets and sets the form grids
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.PreferredHeight">
            <summary>
            Gets and sets the preferred height setting
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.PreferredWidth">
            <summary>
            Gets and sets the preferred width setting
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.FirstControlToFocus">
            <summary>
            Returns the first control to focus on in the user interface
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.ToolTip">
            <summary>
            Gets and sets the tooltip for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.MinimumPanelHeight">
            <summary>
            Gets and sets the minimum height for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.MinumumPanelWidth">
            <summary>
            Gets and sets the minimum width for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.PanelTabText">
            <summary>
            Gets and sets the text for the panel tab
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.UIForm">
            <summary>
            Gets and sets the UIForm definition used to construct the
            panel - this is taken from the class definitions for the
            business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.UiFormTab">
            <summary>
            Gets the UIFormTab definition used to construct the panel
            for a single tab in the form.  By default, there is one
            tab for a form, even if it has not been explicitly defined.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelFactoryInfo.UIDefName">
            <summary>
            Gets the UI definition name as set in the "name" attribute.
            Multiple definitions are permitted for a business object.  If none
            is specified, the "default" definition will be used, which is a
            UI definition without a "name" attribute.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridLayoutManager">
            <summary>
            Manages the layout of controls in a user interface by assigning
            them to positions in a grid with rows and columns
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.#ctor(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new grid layout
            </summary>
            <param name="managedControl">The control to manage</param>
            <param name="controlFactory">The control factory used to create any controls</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.SetGridSize(System.Int32,System.Int32)">
            <summary>
            Sets the grid size as a number of rows and columns
            </summary>
            <param name="rows">The number of rows</param>
            <param name="cols">The number of columns</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Adds a control with a row and column span of 1 to the next position in the grid.
            </summary>
            <param name="control">The control to add</param>
            <returns>Returns the control once it has been added</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero,System.Int32,System.Int32)">
            <summary>
            Adds a control to the next position in the grid.
            The number of rows or columns to span are specified as parameters.
            </summary>
            <param name="control">The control to add</param>
            <param name="rowSpan">The row span for the control</param>
            <param name="columnSpan">The column span for the control</param>
            <returns>Returns the control once it has been added</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.AddControl(Habanero.UI.Base.GridLayoutManager.ControlInfo)">
            <summary>
            Adds a control as specified by the ControlInfo provided (which can provide some context for the control)
            such as number of rows or columns to span. 
            </summary>
            <param name="controlInfo">The information about the control to add to the next position in the grid.</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.RefreshControlPositions">
            <summary>
            Updates the positions and settings of the controls in the interface
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.CalcRowHeight">
            <summary>
            Calculates the average row height
            </summary>
            <returns>Returns the average row height</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.CalcColumnWidth">
            <summary>
            Calculates the average column width
            </summary>
            <returns>Returns the average column width</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.IsFixedRow(System.Int32)">
            <summary>
            Indicates whether the specified row has a fixed height
            </summary>
            <param name="rowNumber">The row number in question</param>
            <returns>Returns true if fixed, false if not</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.IsFixedColumn(System.Int32)">
            <summary>
            Indicates whether the specified column has a fixed width
            </summary>
            <param name="columnNumber">The column number in question</param>
            <returns>Returns true if fixed, false if not</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.FixColumn(System.Int32,System.Int32)">
            <summary>
            Fixes the width of a column to a specified size
            </summary>
            <param name="columnNumber">The column in question</param>
            <param name="columnWidth">The width to fix the column at</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.FixRow(System.Int32,System.Int32)">
            <summary>
            Fixes the height of a row to a specified size
            </summary>
            <param name="rowNumber">The row in question</param>
            <param name="rowHeight">The height to fix the row at</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedWidth">
            <summary>
            Returns the total width of the fixed-width columns added together
            </summary>
            <returns>Returns the total width</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedHeight">
            <summary>
            Returns the total height of the fixed-height rows added together
            </summary>
            <returns>Returns the total height</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedWidthIncludingGaps">
            <summary>
            Returns the total width of the fixed-width columns added 
            together, including the gaps and borders
            </summary>
            <returns>Returns the total width</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedHeightIncludingGaps">
            <summary>
            Returns the total height of the fixed-height rows added 
            together, including the gaps and borders
            </summary>
            <returns>Returns the total height</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedAmount(System.Int32[])">
            <summary>
            Adds the values in the array provided, as long as the values are
            above -1.  This method is used to add up fixed-height/width items.
            </summary>
            <param name="arr">The array of values</param>
            <returns>Returns the total added value</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetNumVariableColumns">
            <summary>
            Counts the number of columns that have not been assigned a
            fixed width
            </summary>
            <returns>Returns the count</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetNumVariableRows">
            <summary>
            Counts the number of rows that have not been assigned a
            fixed height
            </summary>
            <returns>Returns the count</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetNumVariableEntries(System.Int32[])">
            <summary>
            Counts the number of items in the array provided that have
            a value of -1.  This method is used to count the number of rows
            or columns that have not been assigned a fixed width/height
            </summary>
            <param name="arr">The array of sizes</param>
            <returns>Returns the count</returns>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.FixColumnBasedOnContents(System.Int32)">
            <summary>
            Fixes a specified column's width based on current or future contents
            </summary>
            <param name="columnNumber">The column in question</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.FixAllRowsBasedOnContents">
            <summary>
            Causes the fixed height of all the rows to be determined by the
            current or future contents
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.FixRowBasedOnContents(System.Int32)">
            <summary>
            Fixes a specified row's height based on current or future contents
            </summary>
            <param name="rowNumber">The row in question</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.GetFixedColumnWidth(System.Int32)">
            <summary>
            Gets the fixed width set for a specified column.  The return
            value will be -1 if the width has not been fixed.
            </summary>
            <param name="columnNumber">The column in question</param>
            <returns>Returns the fixed width or -1</returns>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.RowCount">
            <summary>
            Returns the number of rows
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.ColumnCount">
            <summary>
            Returns the number of columns
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.Rows">
            <summary>
            Returns an IList object containing all the controls row by row
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.Columns">
            <summary>
            Returns an IList object containing all the controls column by column
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.GridLayoutManager.ControlInfo">
            <summary>
            Manages specific grid information for a control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.ControlInfo.#ctor(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Constructor to initialise a new instance.  Sets the spans 
            to (1,1)
            </summary>
            <param name="control">The control in question</param>
        </member>
        <member name="M:Habanero.UI.Base.GridLayoutManager.ControlInfo.#ctor(Habanero.UI.Base.IControlHabanero,System.Int32,System.Int32)">
            <summary>
            Constructor as before, but requiring the row and column
            spans to be specified
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.ControlInfo.Control">
            <summary>
            Returns the control being represented
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.ControlInfo.RowSpan">
            <summary>
            Returns the row span (how many rows this cell spans across)
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.GridLayoutManager.ControlInfo.ColumnSpan">
            <summary>
            Returns the column span (how many columns this cell spans
            across)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IReadOnlyGridButtonsControl">
            <summary>
            Provides a set of buttons for use on an <see cref="T:Habanero.UI.Base.IReadOnlyGridControl"/>.
            By default, Add and Edit buttons are available, but you can also make the standard
            Delete button visible by setting the <see cref="P:Habanero.UI.Base.IReadOnlyGridButtonsControl.ShowDefaultDeleteButton"/>
            property to true.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IReadOnlyGridButtonsControl.DeleteClicked">
            <summary>
            Fires when the Delete button is clicked
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IReadOnlyGridButtonsControl.AddClicked">
            <summary>
            Fires when the Add button is clicked
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IReadOnlyGridButtonsControl.EditClicked">
            <summary>
            Fires when the Edit button is clicked
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IReadOnlyGridButtonsControl.ShowDefaultDeleteButton">
            <summary>
            Indicates whether the default delete button is visible.  This
            is false by default.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.CustomValidationEventHandler">
            <summary>
            Delegate for custom validation methods.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.CustomValidationEventArgs">
            <summary>
            Provides arguments for a validation event
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CustomValidationEventArgs.#ctor(System.Object,Habanero.UI.Base.ValidationRule)">
            <summary>
             Constructs the <see cref="T:Habanero.UI.Base.CustomValidationEventArgs"/>
            </summary>
            <param name="Value"></param>
            <param name="vr"></param>
        </member>
        <member name="P:Habanero.UI.Base.CustomValidationEventArgs.Value">
            <summary>
            Gets the value to validate
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CustomValidationEventArgs.IsValid">
            <summary>
            Gets or sets the validity of the validation rule
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CustomValidationEventArgs.ErrorMessage">
            <summary>
            Gets or sets the error message to display when validation fails
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CustomValidationEventArgs.ValidationRule">
            <summary>
            Gets the validation rule
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DialogResult">
            <summary>
            Specifies identifiers to indicate the return value of a dialog box
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.None">
            <summary>
            Nothing is returned from the dialog box. This means that the modal dialog continues running.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.OK">
            <summary>
            The dialog box return value is OK (usually sent from a button labeled OK)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.Cancel">
            <summary>
            The dialog box return value is Cancel (usually sent from a button labeled Cancel)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.Abort">
            <summary>
            The dialog box return value is Abort (usually sent from a button labeled Abort)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.Retry">
            <summary>
            The dialog box return value is Retry (usually sent from a button labeled Retry)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.Ignore">
            <summary>
            The dialog box return value is Ignore (usually sent from a button labeled Ignore)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.Yes">
            <summary>
            The dialog box return value is Yes (usually sent from a button labeled Yes)
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DialogResult.No">
            <summary>
            The dialog box return value is No (usually sent from a button labeled No)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FormStartPosition">
            <summary>
             An enumeration for deteriming how the Form will be positioned in the window.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormStartPosition.CenterParent">
            <summary>
            The form is centered within the bounds of its parent form.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormStartPosition.CenterScreen">
            <summary>
            The form is centered on the current display, and has the dimensions specified in the form's size.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormStartPosition.Manual">
            <summary>
            The position of the form is determined by the System.Windows.Forms.Control.Location property.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormStartPosition.WindowsDefaultBounds">
            <summary>
            The form is positioned at the Windows default location and has the bounds determined by Windows default.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormStartPosition.WindowsDefaultLocation">
            <summary>
            The form is positioned at the Windows default location and has the dimensions specified in the form's size.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FormWindowState">
            <summary>
            Specifies how a form window is displayed
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormWindowState.Maximized">
            <summary>
            A maximized window
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormWindowState.Minimized">
            <summary>
            A minimized window
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormWindowState.Normal">
            <summary>
            A default sized window
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FormBorderStyle">
            <summary>
            Specifies the border styles for a form.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.Fixed3D">
            <summary>
            A fixed, three-dimensional border.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.FixedDialog">
            <summary>
            A thick, fixed dialog-style border.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.FixedSingle">
            <summary>
            A fixed, single-line border.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.FixedToolWindow">
            <summary>
            A tool window border that is not resizable. A tool window does not appear in the taskbar or 
            in the window that appears when the user presses ALT+TAB. Although forms that 
            specify <see cref="F:Habanero.UI.Base.FormBorderStyle.FixedToolWindow"/> typically are not shown in 
            the taskbar, you must also ensure that the ShowInTaskbar
            property is set to false, since its default value is true.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.Sizable">
            <summary>
            A resizable border.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FormBorderStyle.SizableToolWindow">
            <summary>
            A resizable tool window border. A tool window does not appear in the taskbar or 
            in the window that appears when the user presses ALT+TAB.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ISplitter">
            <summary>
            Represents a splitter control that enables the user to resize docked controls.
            Splitter has been replaced by SplitContainer and is provided only for compatibility with previous versions.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IRadioButton">
            <summary>
            Enables the user to select a single option from a group of choices
            when paired with other RadioButton controls
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IRadioButton.Checked">
            <summary>
            Gets or sets a value indicating whether the control is checked.
            </summary>
            <returns>true if the check box is checked; otherwise, false.</returns>
        </member>
        <member name="T:Habanero.UI.Base.DataViewDateFilterClause">
            <summary>
            Manages a filter clause that filters which data to
            display in a DataView, according to some criteria set on a DateTime column
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewDateFilterClause.#ctor(System.String,Habanero.Base.FilterClauseOperator,System.DateTime)">
            <summary>
            Constructor to create a new filter clause
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to compare to</param>
        </member>
        <member name="M:Habanero.UI.Base.DataViewDateFilterClause.CreateValueClause(System.String,System.String)">
            <summary>
            Returns the value part of the clause
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="T:Habanero.UI.Base.DataViewCompositeFilterClause">
            <summary>
            Manages a composite filter clause, which is composed of individual
            filter clauses that filter which data to display in a DataView, 
            according to some criteria
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.#ctor(Habanero.Base.IFilterClause,Habanero.Base.FilterClauseCompositeOperator,Habanero.Base.IFilterClause)">
            <summary>
            Constructor to initialise a new composite filter clause
            </summary>
            <param name="leftClause">The left filter clause</param>
            <param name="compositeOperator">The operator to connect the
            clauses</param>
            <param name="rightClause">The right filter clause</param>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.GetFilterClauseString">
            <summary>
            Adds the clauses together to return a complete filter clause string
            </summary>
            <returns>The completed string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.GetFilterClauseString(System.String,System.String)">
            <summary>
            Returns the filter clause as a string. The filter clause is a clause used for filtering
            a ADO.Net <see cref="T:System.Data.DataView"/>
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.GetRightClause(System.String,System.String)">
            <summary>
            Returns the right filter clause surrounded by round brackets
            </summary>
            <returns>Returns the clause as a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.GetLeftClause(System.String,System.String)">
            <summary>
            Returns the left filter clause surrounded by round brackets
            </summary>
            <returns>Returns the clause as a string</returns>
        </member>
        <member name="M:Habanero.UI.Base.DataViewCompositeFilterClause.GetOperatorClause">
            <summary>
            Returns the operator
            </summary>
            <returns>Returns the operator</returns>
        </member>
        <member name="T:Habanero.UI.Base.IControlCollection">
            <summary>
            Represents a collection of controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.Add(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Adds a control to the collection
            </summary>
            <param name="value">The control to add</param>
            <returns>Returns the position at which the control was added</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.IndexOf(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Provides the index position of the control specified
            </summary>
            <param name="value">The control to search for</param>
            <returns>Returns the index position if found, or -1</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.Insert(System.Int32,Habanero.UI.Base.IControlHabanero)">
            <summary>
            Insert a control at a specified index position
            </summary>
            <param name="index">The index position at which to insert</param>
            <param name="value">The control to insert</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.Remove(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Removes the specified control from the collection
            </summary>
            <param name="value">The control to remove</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.Contains(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Indicates whether the collection contains the specified control
            </summary>
            <param name="value">The control to search for</param>
            <returns>Returns a boolean indicating whether that control is 
            found in the collection</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlCollection.Clear">
            <summary>
            Removes all controls from the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlCollection.Item(System.Int32)">
            <summary>
            Indicates the Control at the specified indexed location in the collection
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IControlCollection.Count">
            <summary>
            Gets the number of controls in the collection
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PanelInfo">
            <summary>
             A panel info is a class that wraps the panel and provides functionality 
              for linking a business object a layout manager and a panel.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.#ctor">
            <summary>
             Constructs a panel info with a list of fields and a list of children panel info.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.ClearErrorProviders">
            <summary>
            Sets all the error providers to have no errors.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.UpdateErrorProvidersErrorMessages">
            <summary>
            Sets the Error providers Error message with the appropriate message from the businessObject for each
            Control mapped on this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.Panel">
            <summary>
             The panel that this panel info is controlling
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.LayoutManager">
            <summary>
             Gets and sets the layout manager used for this Panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfos">
            <summary>
             Returns a list of Field infos (info on the fields controlled by this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.BusinessObject">
            <summary>
             Sets the business object for this panel.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.ControlsEnabled">
            <summary>
             Sets whether the controls on this panel are enabled or not
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.PanelInfos">
            <summary>
             A list of all panel infos containd in this panel info.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.UIFormTab">
            <summary>
            Gets the UIFormTab definition used to construct the panel
            for a single tab in the form.  By default, there is one
            tab for a form, even if it has not been explicitly defined.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.MinimumPanelHeight">
            <summary>
            Gets and sets the minimum height for the panel
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.UIForm">
            <summary>
            Gets and sets the UIForm definition used to construct the
            panel - this is taken from the class definitions for the
            business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.PanelTabText">
            <summary>
            Gets the text for the panel tab (UIFormTab.Name)
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PanelInfo.FieldInfoCollection">
            <summary>
             An enumeration of all 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.FieldInfoCollection.Add(Habanero.UI.Base.PanelInfo.FieldInfo)">
            <summary>
             Adds a new Field Info
            </summary>
            <param name="fieldInfo"></param>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.FieldInfoCollection.System#Collections#Generic#IEnumerable{Habanero#UI#Base#PanelInfo#FieldInfo}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.FieldInfoCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfoCollection.Item(System.String)">
            <summary>
             Returns the Field Info identified by the PropertyName.
            </summary>
            <param name="propertyName"></param>
            <exception cref="T:Habanero.Base.Exceptions.InvalidPropertyNameException"></exception>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfoCollection.Item(System.Int32)">
            <summary>
             Returns the field info at index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfoCollection.Count">
            <summary>
             The number of fields
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.PanelInfo.FieldInfo">
            <summary>
             This class provides information on the control that is visible on a user form.
             It contains a reference to the label and the control mapper for a paticular control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.PanelInfo.FieldInfo.#ctor(System.String,Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlMapper)">
            <summary>
             Constructs a Field info.
            </summary>
            <param name="propertyName">The property that this field info is for</param>
            <param name="labelControl">The label that this field info is wrapping</param>
            <param name="controlMapper">The control mapper that this field info is mapping</param>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfo.PropertyName">
            <summary>
             Returns the PropertyName of this <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfo.LabelControl">
            <summary>
             Returns the Label Control for this <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfo.Label">
            <summary>
             Returns the Label Control for this <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfo.InputControl">
            <summary>
             Returns the Input control <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.PanelInfo.FieldInfo.ControlMapper">
            <summary>
             Returns the ControlMapper <see cref="T:Habanero.UI.Base.PanelInfo.FieldInfo"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MessageBoxConfirmer">
            <summary>
            An <see cref="T:Habanero.Base.IConfirmer"/> that uses a MessageBox to get confirmation from the user.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MessageBoxConfirmer.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.UI.Base.MessageBoxIcon)">
            <summary>
             Construct a <see cref="T:Habanero.UI.Base.MessageBoxConfirmer"/> with the specified information.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.UI.Base.IControlFactory"/> to use to create the MessageBox.</param>
            <param name="title">The Title to display in the MessageBox.</param>
            <param name="messageBoxIcon">The <see cref="P:Habanero.UI.Base.MessageBoxConfirmer.MessageBoxIcon"/> to display in the MessageBox.</param>
        </member>
        <member name="M:Habanero.UI.Base.MessageBoxConfirmer.Confirm(System.String)">
            <summary>
            Gets confirmation from the user after providing them with an option
            </summary>
            <param name="message">The message to display</param>
            <returns>Returns true if the user confirms the choice and false
            if they decline the offer</returns>
        </member>
        <member name="M:Habanero.UI.Base.MessageBoxConfirmer.Confirm(System.String,Habanero.Base.ConfirmationDelegate)">
            <summary>
             Gets confirmation from the user after providing them with an option
             and executes the provided delegate once the user has responded.
            </summary>
            <param name="message">The message to display</param>
            <param name="confirmationDelegate">The delegate to execute once the user has responded.</param>
            <returns>Returns true if the user confirms the choice and false
             if they decline the offer</returns>
        </member>
        <member name="P:Habanero.UI.Base.MessageBoxConfirmer.ControlFactory">
            <summary>
             The <see cref="T:Habanero.UI.Base.IControlFactory"/> to use to create the MessageBox.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MessageBoxConfirmer.Title">
            <summary>
             The Title to display in the MessageBox.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MessageBoxConfirmer.MessageBoxIcon">
            <summary>
             The <see cref="P:Habanero.UI.Base.MessageBoxConfirmer.MessageBoxIcon"/> to display in the MessageBox.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.InputFormDate">
            <summary>
            Provides a form containing a DateTimePicker in order to get a single
            DateTime value back from a user
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.InputFormDate.#ctor(Habanero.UI.Base.IControlFactory,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.UI.Base.InputFormDate"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="message"></param>
        </member>
        <member name="M:Habanero.UI.Base.InputFormDate.createControlPanel">
            <summary>
            Creates the panel on the form
            </summary>
            <returns>Returns the panel created</returns>
        </member>
        <member name="M:Habanero.UI.Base.InputFormDate.ShowDialog">
            <summary>
            Shows the form to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormDate.DateTimePicker">
            <summary>
            Gets the DateTimePicker control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormDate.Message">
            <summary>
            Gets the message to display to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormDate.Value">
            <summary>
            Gets or sets the DateTime value held in the DateTimePicker control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IFormControl">
            <summary>
            Represents a form control and makes the control manageable by a
            central form controller for an application
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IFormControl.SetForm(Habanero.UI.Base.IFormHabanero)">
            <summary>
            Sets the form to control
            </summary>
            <param name="form">The form to control</param>
        </member>
        <member name="T:Habanero.UI.Base.ErrorBlinkStyleHabanero">
            <summary>
            Specifies constants indicating when the error icon, supplied by an ErrorProvider,
            should blink to alert the user that an error has occurred
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorBlinkStyleHabanero.AlwaysBlink">
            <summary>
            Always blink when the error icon is first displayed, or when a error description 
            string is set for the control and the error icon is already displayed.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorBlinkStyleHabanero.BlinkIfDifferentError">
            <summary>
            Blinks when the icon is already displayed and a new error string is set for the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorBlinkStyleHabanero.NeverBlink">
            <summary>
            Never blink the error icon.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ErrorIconAlignmentHabanero">
            <summary>
            Specifies constants indicating the locations that an error icon can appear in relation to the control with an error.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.BottomLeft">
            <summary>
            The icon appears aligned with the bottom of the control and the left of the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.BottomRight">
            <summary>
            The icon appears aligned with the bottom of the control and the right of the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.MiddleLeft">
            <summary>
            The icon appears aligned with the middle of the control and the left of the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.MiddleRight">
            <summary>
            The icon appears aligned with the middle of the control and the right of the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.TopLeft">
            <summary>
            The icon appears aligned with the top of the control and to the left of the control.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.TopRight">
            <summary>
            The icon appears aligned with the top of the control and to the right of the control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IErrorProvider">
            <summary>
            Provides a user interface for indicating that a control on a form has an error associated with it
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.GetError(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Returns the current error description string for the specified control.
            </summary>
            <returns>The error description string for the specified control.</returns>
            <param name="objControl">The item to get the error description string for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.GetIconAlignment(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Gets a value indicating where the error icon should be placed in relation to the control.
            </summary>
            <returns>One of the <see cref="T:Habanero.UI.Base.ErrorIconAlignmentHabanero"></see> values. The default icon alignment is <see cref="F:Habanero.UI.Base.ErrorIconAlignmentHabanero.MiddleRight"></see>.</returns>
            <param name="objControl">The control to get the icon location for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.GetIconPadding(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Returns the amount of extra space to leave next to the error icon.
            </summary>
            <returns>The number of pixels to leave between the icon and the control. </returns>
            <param name="objControl">The control to get the padding for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.SetError(Habanero.UI.Base.IControlHabanero,System.String)">
            <summary>
            Sets the error description string for the specified control.
            </summary>
            <param name="objControl">The control to set the error description string for. </param>
            <param name="strValue">The error description string. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.SetIconAlignment(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.ErrorIconAlignmentHabanero)">
            <summary>
            Sets the location where the error icon should be placed in relation to the control.
            </summary>
            <param name="objControl">The control to set the icon location for. </param>
            <param name="enmValue">One of the <see cref="T:Habanero.UI.Base.ErrorIconAlignmentHabanero"/> values. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.SetIconPadding(Habanero.UI.Base.IControlHabanero,System.Int32)">
            <summary>
            Sets the amount of extra space to leave between the specified control and the error icon.
            </summary>
            <param name="objControl">The control to set the padding for. </param>
            <param name="intPadding">The number of pixels to add between the icon and the control. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.UpdateBinding">
            <summary>
            Provides a method to update the bindings of the <see cref="P:Habanero.UI.Base.IErrorProvider.DataSource"/>, <see cref="P:Habanero.UI.Base.IErrorProvider.DataMember"/>, and the error text.
            </summary>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.UI.Base.IErrorProvider.CanExtend(System.Object)">
            <summary>
            Gets a value indicating whether a control can be extended.
            </summary>
            <returns>true if the control can be extended; otherwise, false.This property will be true if the object is a <see cref="T:Habanero.UI.Base.IControlHabanero"/>.</returns>
            <param name="objExtendee">The control to be extended. </param>
        </member>
        <member name="P:Habanero.UI.Base.IErrorProvider.BlinkRate">
            <summary>
            Gets or sets the rate at which the error icon flashes.
            </summary>
            <returns>The rate, in milliseconds, at which the error icon should flash. The default is 250 milliseconds.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.UI.Base.IErrorProvider.BlinkStyleHabanero">
            <summary>
            Gets or sets a value indicating when the error icon flashes.
            </summary>
            <returns>One of the <see cref="T:Habanero.UI.Base.ErrorBlinkStyleHabanero"/> values. The default is <see cref="F:Habanero.UI.Base.ErrorBlinkStyleHabanero.BlinkIfDifferentError"/>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:Habanero.UI.Base.ErrorBlinkStyleHabanero"/> values. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.UI.Base.IErrorProvider.DataMember">
            <summary>
            Gets or sets the list within a data source to monitor.
            </summary>
            <returns>The string that represents a list within the data source specified by the <see cref="P:Habanero.UI.Base.IErrorProvider.DataSource"/> to be monitored. Typically, this will be a <see cref="T:System.Data.DataTable"/>.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.UI.Base.IErrorProvider.DataSource">
            <summary>
            Gets or sets the data source that the <see cref="T:Habanero.UI.Base.IErrorProvider"/> monitors.
            </summary>
            <returns>A data source based on the <see cref="T:System.Collections.IList"/> interface to be monitored for errors. Typically, this is a <see cref="T:System.Data.DataSet"/> to be monitored for errors.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerUtil">
            <summary>
            Gets and sets date-time values in any given date-time picker
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerUtil.GetValue(Habanero.UI.Base.IDateTimePicker)">
            <summary>
            Gets a date-time value from the provided picker
            </summary>
            <param name="dateTimePicker">A date-time picker</param>
            <returns>Returns the DateTime value or null if none was chosen</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerUtil.SetValue(Habanero.UI.Base.IDateTimePicker,System.DateTime)">
            <summary>
            Sets the date-time value in the specified date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="date">The date to set to</param>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerUtil.SetShowUpDown(Habanero.UI.Base.IDateTimePicker,System.Boolean)">
            <summary>
            Specify the time format in the given date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="showUpDown">Specifies if the Up/Down control must be shown or not</param>
        </member>
        <member name="T:Habanero.UI.Base.FormController">
            <summary>
            Provides a controller for forms that keeps a reference to all open
            forms so that a user can switch between them.  The specific advantage
            of using a controller is that the state of the window can be maintained and
            the form regeneration time is saved.  This controller can
            be used to populate a "Window" menu item with open forms.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FormController.#ctor(Habanero.UI.Base.IFormHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new controller
            </summary>
            <param name="parentForm">The parent form</param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.FormController.SetCurrentControl(System.String)">
            <summary>
            Sets the current control to the one with the specified heading
            </summary>
            <param name="heading">The heading</param>
            <returns>Returns the relevant IFormControl object</returns>
        </member>
        <member name="M:Habanero.UI.Base.FormController.GetFormControl(System.String)">
            <summary>
            Returns the form control with the heading specified
            </summary>
            <param name="heading">The heading</param>
            <returns>Returns the IFormControl object if found</returns>
        </member>
        <member name="M:Habanero.UI.Base.FormController.GetControl(System.String)">
            <summary>
            Returns the control with the heading specified
            </summary>
            <param name="heading">The heading</param>
            <returns>Returns the control if found</returns>
        </member>
        <member name="M:Habanero.UI.Base.FormController.MdiFormClosed(System.Object,System.EventArgs)">
            <summary>
            Handles the event of a form being closed
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="P:Habanero.UI.Base.FormController.FontSize">
            <summary>
            Sets the default font size for the mdi forms.
            Don't set this if you want to get the default font size.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.RowDoubleClickedHandler">
            <summary>
            Handles the event of a user double-clicking on a row in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"/>
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="T:Habanero.UI.Base.CollectionComboBoxMapper">
            <summary>
            This is used to map a collection of Business objects to a particular property of the Business object.
            This is typically used when you are wanting to load a collection of business objects via some custom 
            collection loading code that does not allow you to use either 
            the <see cref="T:Habanero.UI.Base.LookupComboBoxMapper"/> or the <see cref="T:Habanero.UI.Base.RelationshipComboBoxMapper"/>.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.CollectionComboBoxMapper._comboBox">
            <summary>
            The actual <see cref="T:Habanero.UI.Base.IComboBox"/> control that is being mapped to the Business Object Property identified by PropertyName.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.#ctor(Habanero.UI.Base.IComboBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise the mapper
            </summary>
            <param name="cbx">The ComboBox to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">The control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.DoUpdateControlValueFromBO">
            <summary>
            This is a hack that allows Extended Combo box mapper to use Lookup ComboBox mapper code
             without having to inherit from it.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the value on the control from the corresponding property
            on the represented <see cref="P:Habanero.UI.Base.IControlMapper.BusinessObject"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.SetValueFromLookupList">
            <summary>
            Populates the ComboBox's list of items using the
            strings provided by the colleciton
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.GetPropertyValue">
            <summary>
            Returns the property value of the business object being mapped
            </summary>
            <returns>Returns the property value in appropriate object form</returns>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.InitialiseWithAttributes">
            <summary>
            Initialises the control using the attributes already provided, using
            <see cref="M:Habanero.UI.Base.ControlMapper.SetPropertyAttributes(System.Collections.Hashtable)"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.CollectionComboBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollectionComboBoxMapper.KeyPressHandler">
            <summary>
            Gets or sets the KeyPress event handler assigned to this mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollectionComboBoxMapper.SelectedIndexChangedHandler">
            <summary>
            Gets or sets the SelectedIndexChanged event handler assigned to this mapper
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollectionComboBoxMapper.MapperStrategy">
            <summary>
            Gets or sets the strategy assigned to this mapper <see cref="T:Habanero.UI.Base.IComboBoxMapperStrategy"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollectionComboBoxMapper.BusinessObjectCollection">
            <summary>
            The business object collection that is being used to fill the combo box with values.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.CollectionComboBoxMapper.OwningBoPropertyName">
            <summary>
            This is the PropertyName on the selected Business Object, which should be used to get the value to be set to the
            Property. See tests.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ValidationRule">
            <summary>
            Provides a validation rule that checks if the value in a control
            is valid.  ValidationRule is designed to be a simple as possible to
            reduce overhead in run-time.  Because each validation
            rule can be attach to a control, there could be many
            instances of this class.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ValidationRule.OnCustomValidationMethod(Habanero.UI.Base.CustomValidationEventArgs)">
            <summary>
            Delegate invoking of validation method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Habanero.UI.Base.ValidationRule.Compare(System.String,System.String,Habanero.UI.Base.ValidationCompareOperator,Habanero.UI.Base.ValidationRule)">
            <summary>
            Compare two values.
            </summary>
            <param name="leftText"></param>
            <param name="rightText"></param>
            <param name="op"></param>
            <param name="vr"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ValidationRule.Clone">
            <summary>
            ValidationRule is memberwised cloneable.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.IsCaseSensitive">
            <summary>
            Set validation case sensitivity.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.DataType">
            <summary>
            Data Type of the validation.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.ErrorMessage">
            <summary>
            ErrorMessage result of validation.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.IsValid">
            <summary>
            Get validity of control value after Validate method is called.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.InitialValue">
            <summary>
            A mandatory value does not necessarily mean a value other than "". 
            In some cases, a default control value might be used as a prompt 
            e.g. using "[Choose a value]" in a DropDownList control. In this case, 
            the required value must be different than the initial value of 
            "[Choose a value]". InitialValue supports this requirement. The 
            default is "".
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.IsRequired">
            <summary>
            Cause validation to check if field is required.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.Operator">
            <summary>
            Get or set operator to use to compare.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.ValueToCompare">
            <summary>
            Get or set value use to compare with the control value.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.MinimumValue">
            <summary>
            RangeValidator Minimum Value.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.MaximumValue">
            <summary>
            RangeValidator MaximumValue Value.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ValidationRule.RegExPattern">
            <summary>
            Regular Expression Pattern to use for validation.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ValidationRule.CustomValidationMethod">
            <summary>
            Allow for attachment of custom validation method.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ICheckBox">
            <summary>
            Represents a CheckBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICheckBox.Checked">
            <summary>
            Gets or sets whether the CheckBox is checked
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ICheckBox.CheckAlign">
            <summary>
            Gets or sets the horizontal and vertical alignment of the
            check mark on a CheckBox control
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.ICheckBox.CheckedChanged">
            <summary>
            The event that is raised when the <see cref="P:Habanero.UI.Base.ICheckBox.Checked"/> property is changed.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDefaultBOEditorForm">
            <summary>
            Provides a form used to edit business objects.  This form will usually
            be constructed using a UI Form definition provided in the class definitions.
            The appropriate UI definition is typically set in the constructor.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDefaultBOEditorForm.ShowDialog">
            <summary>
            Pops the form up in a modal dialog.  If the BO is successfully edited and saved, returns true,
            else returns false.
            </summary>
            <returns>True if the edit was a success, false if not</returns>
        </member>
        <member name="P:Habanero.UI.Base.IDefaultBOEditorForm.Buttons">
            <summary>
            Gets the button control for the buttons in the form
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDefaultBOEditorForm.PanelInfo">
            <summary>
            Gets the object containing all information related to the form, including
            its controls, mappers and business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDefaultBOEditorForm.GroupControlCreator">
            <summary>
             The Creator (<see cref="P:Habanero.UI.Base.IDefaultBOEditorForm.GroupControlCreator"/> used to create the <see cref="T:Habanero.UI.Base.IGroupControl"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FilterControlManager">
            <summary>
            This manager groups common logic for IFilterControl objects.
            Do not use this object in working code - rather call CreateFilterControl
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.#ctor(Habanero.UI.Base.IControlFactory,Habanero.UI.Base.LayoutManager)">
            <summary>
             Constructor with controlFactory and layout manager.
            </summary>
            <param name="controlFactory"></param>
            <param name="layoutManager"></param>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.GetFilterClause">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.GetFilterClause"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddStringFilterTextBox(System.String,System.String)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddStringFilterTextBox(System.String,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String,Habanero.Base.FilterClauseOperator)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String},Habanero.Base.FilterClauseOperator)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddStringFilterTextBox(System.String,System.String,Habanero.Base.FilterClauseOperator)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddStringFilterComboBox(System.String,System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddStringFilterComboBox(System.String,System.String,System.Collections.ICollection,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddBooleanFilterCheckBox(System.String,System.String,System.Boolean)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddBooleanFilterCheckBox(System.String,System.String,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddDateFilterDateTimePicker(System.String,System.String,Habanero.Base.FilterClauseOperator,System.Nullable{System.DateTime})">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddDateFilterDateTimePicker(System.String,System.String,System.Nullable{System.DateTime},Habanero.Base.FilterClauseOperator,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddCustomFilter(System.String,Habanero.UI.Base.ICustomFilter)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddCustomFilter(System.String,Habanero.UI.Base.ICustomFilter)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.ClearFilters">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.ClearFilters"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.GetChildControl(System.String)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.GetChildControl(System.String)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddDateRangeFilterComboBox(System.String,System.String,System.Collections.Generic.List{Habanero.UI.Base.DateRangeOptions},System.Boolean,System.Boolean)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IFilterControl.AddDateRangeFilterComboBox(System.String,System.String,System.Collections.Generic.List{Habanero.UI.Base.DateRangeOptions},System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterControlManager.AddStaticStringFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
             Adds a static string filter <see cref="T:Habanero.UI.Base.StringStaticFilter"/> to the Filter Control.
             This allows the developer to set a filter that is always applied and is not modifyable or visible to the End user.
            </summary>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
            <param name="filterValue"></param>
        </member>
        <member name="P:Habanero.UI.Base.FilterControlManager.CountOfFilters">
            <summary>
             See <see cref="P:Habanero.UI.Base.IFilterControl.CountOfFilters"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.FilterControlManager.FilterControls">
            <summary>
            See <see cref="P:Habanero.UI.Base.IFilterControl.FilterControls"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.FilterControlManager.LayoutManager">
            <summary>
            See <see cref="P:Habanero.UI.Base.IFilterControl.LayoutManager"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateRangeComboBoxFilter">
            <summary>
             A Filter controller for a <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> that allows you to select a range of dates e.g. Yeasterday, Last week etc
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxFilter.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
             Constructor with controlFactory, propertyName and filterClauseOperator
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.DateRangeComboBoxFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.Control">
            <summary>
            Returns the underlying <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> conrol being controlled by the Filter Control
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.DateRangeComboBoxFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.IncludeStartDate">
            <summary>
             Whether the start date is included in the Filter Clause or not
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.IncludeEndDate">
            <summary>
             Whether the End date should be included in the filter clause or not.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateRangeComboBoxFilter.OptionsToDisplay">
            <summary>
             Gets and Sets the List of <see cref="T:Habanero.UI.Base.DateRangeOptions"/>.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.StringComboBoxFilter">
            <summary>
             For Filtering a combo box of String.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.StringComboBoxFilter.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
             Constructor with the controlFactory, propertyName, filterClauseOperator.
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.StringComboBoxFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.StringComboBoxFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.StringComboBoxFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringComboBoxFilter.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringComboBoxFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringComboBoxFilter.Options">
            <summary>
             Returns a collection of Items that can be sellection from the combo box.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.StringComboBoxFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.BoolCheckBoxFilter">
            <summary>
             A <see cref="T:Habanero.UI.Base.ICustomFilter"/> for Filtering using a CheckBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BoolCheckBoxFilter.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
             A Constructor for the BoolCheckBoxFilter
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.BoolCheckBoxFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.BoolCheckBoxFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.BoolCheckBoxFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BoolCheckBoxFilter.Control">
            <summary>
            Returns the Control that is being used in the filter
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BoolCheckBoxFilter.IsChecked">
            <summary>
             returns true of false Depending Whether the <see cref="T:Habanero.UI.Base.ICheckBox"/> is checked or not&gt;
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BoolCheckBoxFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BoolCheckBoxFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerFilter">
            <summary>
             A Custom Filter Control for DateTimePickerFilter.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerFilter.#ctor(Habanero.UI.Base.IControlFactory,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
             An overridden constructor for controlFactory, propertyName and filterClauseOperator.
            </summary>
            <param name="controlFactory"></param>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerFilter.GetFilterClause(Habanero.Base.IFilterClauseFactory)">
            <summary>
             Returns the filter clause for this control
            </summary>
            <param name="filterClauseFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerFilter.Clear">
            <summary>
             Clears the <see cref="T:Habanero.UI.Base.IDateRangeComboBox"/> of its value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerFilter.Control">
            <summary>
             The control that has been constructed by this Control Manager.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.DateTimePickerFilter.ValueChanged">
            <summary>
            Event handler that fires when the value in the Filter control changes
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerFilter.PropertyName">
            <summary>
             The name of the property being filtered by.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerFilter.DefaultDate">
            <summary>
             Gets and Sets the DefaultDate that is used by the DateTimePicker.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerFilter.FilterClauseOperator">
            <summary>
             Returns the operator <see cref="P:Habanero.UI.Base.ICustomFilter.FilterClauseOperator"/> e.g.OpEquals to be used by for creating the Filter Clause.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FilterUI">
            <summary>
            A super-class for user interface elements that provide filter clauses
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FilterUI._clauseFactory">
            <summary>
            The <see cref="T:Habanero.Base.IFilterClauseFactory"/> used to create the filter clauses.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.FilterUI._columnName">
            <summary>
            The name of the property (column) that is being used in creating this filter clause.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.FilterUI.#ctor(Habanero.Base.IFilterClauseFactory,System.String)">
            <summary>
            Constructor to initialise a new instance
            </summary>
            <param name="clauseFactory">The filter clause factory</param>
            <param name="columnName">The column name</param>
        </member>
        <member name="M:Habanero.UI.Base.FilterUI.GetFilterClause">
            <summary>
            Returns the filter clause
            </summary>
            <returns>Returns the filter clause</returns>
        </member>
        <member name="M:Habanero.UI.Base.FilterUI.Clear">
            <summary>
             Clears The Filter.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.FilterUI.PropertyName">
            <summary>
             The Property name being being used in creating the filter clause.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.FilterUI.FilterControl">
            <summary>
             Returns the actual control being controlled
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerController">
            <summary>
            A controller class that wraps a DateTimePicker control and provides the additional capabilities for it to have a null value.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerController.#ctor(Habanero.UI.Base.IControlFactory,Habanero.UI.Base.IDateTimePicker,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
             Initialises a new instance of a DateTimePickerController.
            </summary>
            <param name="controlFactory">The control factory used to construct controls for the nullable picker. </param>
            <param name="dateTimePicker">The DateTimePicker control(can be any implementation)</param>
            <param name="_checkedPropInfo">The objects reflective property to be used for setting the check box checked state</param>
            <param name="_showCheckBoxPropInfo">The objects reflective property to be used for showing and hiding the checkbox.</param>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerController.Finalize">
            <summary>
            Destructor for DateTimePicker (unregisters for events to DateTimePicker.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerController.DateTimePicker">
            <summary>
             The DateTimePicker control being controlled
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerController.NullDisplayValue">
            <summary>
             The text that will be displayed when the Value is null
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerController.Value">
            <summary>
             The Value represented by the DateTimePicker
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.DateTimePickerController.ValueChanged">
            <summary>
            Occurs when the <see cref="P:Habanero.UI.Base.DateTimePickerController.Value"/> property changes.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ListViewCollectionManager">
            <summary>
            Maps a ListView object in a user interface
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.NumericUpDownCurrencyMapper">
            <summary>
            Wraps a NumericUpDown control in order to display and capture a currency
            property of the business object, where values are rounded to two decimal places
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownCurrencyMapper.#ctor(Habanero.UI.Base.IControlHabanero,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new instance of the class
            </summary>
            <param name="numericUpDownControl">The numericUpDownControl object to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">the control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.NumericUpDownCurrencyMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.FormControlCreator">
            <summary>
             A delegate for Creating a <see cref="T:Habanero.UI.Base.IFormControl"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ControlManagerCreator">
            <summary>
             A delegate definition for creating a <see cref="T:Habanero.UI.Base.IControlManager"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="T:Habanero.UI.Base.MenuItemCreator">
            <summary>
             An abstract class that provides the functionality to Add <see cref="T:Habanero.UI.Base.HabaneroMenu"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MenuItemCreator.AddToMenu(Habanero.UI.Base.HabaneroMenu,Habanero.UI.Base.IControlFactory)">
            <summary>
             Adds a <see cref="T:Habanero.UI.Base.HabaneroMenu"/>
            </summary>
            <param name="currentMenu"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="T:Habanero.UI.Base.HabaneroMenu">
            <summary>
             A class for managing a menu including its list of sub menus (other Habanero Menus).
             This class is used by a menu builder to build a specific Menu e.g. A main menu or an outlook style menu.<br/>
             With this class you can either <see cref="M:Habanero.UI.Base.HabaneroMenu.AddSubMenu(System.String)"/> or <see cref="M:Habanero.UI.Base.HabaneroMenu.AddMenuItem(System.String)"/>.
             Where adding a sub menu will create another HabaneroMenu and adding a MenuItem will add a leaf
             item to the menu. Selecting the MenuItem(<see cref="T:Habanero.UI.Base.HabaneroMenu.Item"/>) will cause the 
            </summary>
             
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.#ctor(System.String)">
            <summary>
             Constrcutor for <see cref="T:Habanero.UI.Base.HabaneroMenu"/>
            </summary>
            <param name="menuName"></param>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.#ctor(System.String,Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
              Constrcutor for <see cref="T:Habanero.UI.Base.HabaneroMenu"/>
            </summary>
            <param name="menuName"></param>
            <param name="form"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.AddSubmenu(System.String)">
            <summary>
             Adds a sub menu to this menu. This method creates a new <see cref="T:Habanero.UI.Base.HabaneroMenu"/> with the name
             <paramref name="menuName"/> and adds it as a sub menu.
            </summary>
            <param name="menuName"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.AddSubMenu(System.String)">
            <summary>
             Adds a sub menu to this menu. This method creates a new <see cref="T:Habanero.UI.Base.HabaneroMenu"/> with the name
             <paramref name="menuName"/> and adds it as a sub menu.
            </summary>
            <param name="menuName"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.AddMenuItem(System.String)">
            <summary>
             Adds a MenuItem. Creates a Menu <see cref="T:Habanero.UI.Base.HabaneroMenu.Item"/> with the name <paramref name="menuItemName"/>
            </summary>
            <param name="menuItemName"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Submenus">
            <summary>
             A list of sub Menus for this menu
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Name">
            <summary>
             The name of this menu.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.MenuItems">
            <summary>
             A list of <see cref="T:Habanero.UI.Base.HabaneroMenu.Item"/>s shown in this menu.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Form">
            <summary>
            The form that this menu is associated with.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.ControlFactory">
            <summary>
             The <see cref="T:Habanero.UI.Base.IControlFactory"/> used to Create controls for this menu.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.HabaneroMenu.Item">
            <summary>
             A particular menu item that will be built into a Leaf Node of the Relevant Menu.
             The MenuBulder will build a menu item represented by this Item.
             This Item can be set up with either a <see cref="P:Habanero.UI.Base.HabaneroMenu.Item.CustomHandler"/> <br/>
              or a <see cref="P:Habanero.UI.Base.HabaneroMenu.Item.ControlManagerCreator"/> or a <see cref="P:Habanero.UI.Base.HabaneroMenu.Item.FormControlCreator"/>.
             These are used by the relevant MenuItemControl to respond the its click event. 
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.Item.#ctor(System.String)">
            <summary>
             Consructor for an <see cref="T:Habanero.UI.Base.HabaneroMenu.Item"/>
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroMenu.Item.#ctor(System.String,Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Construcotr for an <see cref="T:Habanero.UI.Base.HabaneroMenu.Item"/>
            </summary>
            <param name="name"></param>
            <param name="form"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.Name">
            <summary>
             The menu item name.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.FormControlCreator">
            <summary>
             The Creator that creates the form when this menu Item is selected.
             This is used where a pop up form is created in response to the MenuItem Click Event.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.ControlManagerCreator">
            <summary>
             Gets and sets the <see cref="P:Habanero.UI.Base.HabaneroMenu.Item.ControlManagerCreator"/> delegate.
             This is a delegate that creates a <see cref="T:Habanero.UI.Base.IControlManager"/>. The control manager
             wraps a control.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.CustomHandler">
            <summary>
             Gets and Sets the CustomHandler that is used when the menu is clicked. This allows
             the developer to hook into this event to implement custom logic when the menu item is clicked.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.ControlFactory">
            <summary>
             Gets the <see cref="T:Habanero.UI.Base.IControlFactory"/> that is used to create control for htis menu.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.HabaneroMenu.Item.Form">
            <summary>
             Gets the <see cref="T:Habanero.UI.Base.IFormHabanero"/> that this menu is associated with
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataGridViewManager">
            <summary>
            This manager groups common logic for IDataGridView objects.
            Do not use this object in working code. Instead use one of the 
            implementations of <see cref="T:Habanero.UI.Base.IDataGridView"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataGridViewManager.#ctor(Habanero.UI.Base.IDataGridView)">
            <summary>
             Constructor for 
            </summary>
            <param name="gridBase"></param>
        </member>
        <member name="M:Habanero.UI.Base.DataGridViewManager.SetSortColumn(System.String,System.Boolean)">
            <summary>
            Sets the column to be sorted
            </summary>
            <param name="columnName"></param>
            <param name="isAscending"></param>
        </member>
        <member name="T:Habanero.UI.Base.IBOGridAndEditorControl">
            <summary>
             Interface for a control that displays a collection of a Business Object along side an editor/creator panel.
             The collection of business objects can be shown using any selector control e.g. an <see cref="T:Habanero.UI.Base.IEditableGridControl"/>,
               <see cref="T:Habanero.UI.Base.IGridControl"/> etc.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOGridAndEditorControl.BusinessObjectCollection">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOGridAndEditorControl.GridControl">
            <summary>
            Returns the <see cref="T:Habanero.UI.Base.IGridControl"/> that is being used along side of the <see cref="P:Habanero.UI.Base.IBOGridAndEditorControl.IBOEditorControl"/>
             to provide bo editing behaviour.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOGridAndEditorControl.IBOEditorControl">
            <summary>
            The <see cref="P:Habanero.UI.Base.IBOGridAndEditorControl.IBOEditorControl"/> that is being used to 
            edit the <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOGridAndEditorControl.ButtonGroupControl">
            <summary>
            The <see cref="T:Habanero.UI.Base.IButtonGroupControl"/> that is has the individual buttons that
              are shown at the bottom of this control.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IBOGridAndEditorControl.CurrentBusinessObject">
            <summary>
            Method to create a new Business Object that is part of the collection.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewAction">
            <summary>
            Specifies the action that raised a System.Windows.Forms.TreeViewEventArgs event.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewAction.ByKeyboard">
            <summary>
             The event was caused by a keystroke.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewAction.ByMouse">
            <summary>
             The event was caused by a mouse operation.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewAction.Collapse">
            <summary>
             The event was caused by TreeNode collapsing.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewAction.Expand">
            <summary>
             The event was caused by the TreeNode expanding.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.TreeViewAction.Unknown">
            <summary>
             The action that caused the event is unknown.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewEventHandler">
            <summary>
             Represents the method that will handle the 
             TreeView.AfterCheck, TreeView.AfterCollapse, 
             TreeView.AfterExpand, or TreeView.AfterSelect 
             event of a TreeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewEventArgs">
            <summary>
            Provides data for the TreeView.AfterCheck, TreeView.AfterCollapse, 
            TreeView.AfterExpand, or TreeView.AfterSelect events of a TreeView control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewEventArgs.#ctor(Habanero.UI.Base.ITreeNode)">
            <summary>
            Initializes a new instance of the TreeViewEventArgs class for the specified tree node.
            </summary>
            <param name="node">The TreeNode that the event is responding to.</param>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewEventArgs.#ctor(Habanero.UI.Base.ITreeNode,Habanero.UI.Base.TreeViewAction)">
            <summary>
            Initializes a new instance of the TreeViewEventArgs class 
            for the specified tree node and with the specified type of action that raised the event.
            </summary>
            <param name="node">The TreeNode that the event is responding to.</param>
            <param name="action">The type of TreeViewAction that raised the event.</param>
        </member>
        <member name="P:Habanero.UI.Base.TreeViewEventArgs.Action">
            <summary>
            Gets the type of action that raised the event. 
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.TreeViewEventArgs.Node">
            <summary>
            Gets the tree node that has been checked, expanded, collapsed, or selected.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewCancelEventHandler">
            <summary>
             Represents the method that will handle the 
             TreeView.BeforeCheck, TreeView.BeforeCollapse, 
             TreeView.BeforeExpand, or TreeView.BeforeSelect 
             event of a TreeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A TreeViewCancelEventArgs that contains the event data.</param>
        </member>
        <member name="T:Habanero.UI.Base.TreeViewCancelEventArgs">
            <summary>
            Provides data for the TreeView.BeforeCheck, TreeView.BeforeCollapse, 
            TreeView.BeforeExpand, and TreeView.BeforeSelect events of a TreeView control.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TreeViewCancelEventArgs.#ctor(Habanero.UI.Base.ITreeNode,System.Boolean,Habanero.UI.Base.TreeViewAction)">
             <summary>
             Initializes a new instance of the TreeViewCancelEventArgs class with the specified tree node, 
             a value specifying whether the event is to be canceled, 
             and the type of tree view action that raised the event.
             </summary>
            <param name="node">The TreeNode that the event is responding to.</param>
            <param name="cancel">true to cancel the event; otherwise, false.</param>
            <param name="action">One of the TreeViewAction values indicating the type of action that raised the event.</param>
        </member>
        <member name="P:Habanero.UI.Base.TreeViewCancelEventArgs.Action">
            <summary>
             Gets the type of TreeView action that raised the event.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.TreeViewCancelEventArgs.Node">
            <summary>
            Gets the tree node to be checked, expanded, collapsed, or selected.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ScrollBars">
            <summary>
            Specifies which scroll bars will be visible on a control
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ScrollBars.None">
            <summary>
            No scroll bars are shown
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ScrollBars.Horizontal">
            <summary>
            Only horizontal scroll bars are shown
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ScrollBars.Vertical">
            <summary>
            Only vertical scroll bars are shown
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ScrollBars.Both">
            <summary>
            Both horizontal and vertical scroll bars are shown
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ITextBox">
            <summary>
            Represents a TextBox control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITextBox.SelectAll">
            <summary>
            Selects all text in the text box
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITextBox.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multiline TextBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITextBox.AcceptsReturn">
            <summary>
            Gets or sets a value indicating whether pressing ENTER in a multiline TextBox
            control creates a new line of text in the control or activates the default button for the form
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITextBox.PasswordChar">
            <summary>
            Gets or sets the character used to mask characters of a password in a single-line TextBox control.
            Set the value of this property to 0 (character value) if you do not want
            the control to mask characters as they are typed. Equals 0 (character value) by default.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITextBox.ScrollBars">
            <summary>
            Gets or sets which scroll bars should appear in a multiline TextBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ITextBox.TextAlign">
            <summary>
            Gets or sets the alignment of text in the TextBox control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.TextBoxMapper">
            <summary>
            Wraps a TextBox control in order to display and capture a property of the business object.
            There are some  limitations with using a TextBox for numbers.  For greater control 
            of user input with numbers, you should consider using a NumericUpDown 
            control, failing this the appropriate <see cref="T:Habanero.UI.Base.ITextBoxMapperStrategy"/> can be used.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TextBoxMapper.#ctor(Habanero.UI.Base.ITextBox,System.String,System.Boolean,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new instance of the mapper
            </summary>
            <param name="tb">The TextBox to map</param>
            <param name="propName">The property name</param>
            <param name="isReadOnly">Whether this control is read only</param>
            <param name="factory">the control factory to be used when creating the controlMapperStrategy</param>
        </member>
        <member name="M:Habanero.UI.Base.TextBoxMapper.InternalUpdateControlValueFromBo">
            <summary>
            Updates the interface when the value has been changed in the
            object being represented
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TextBoxMapper.ApplyChangesToBusinessObject">
            <summary>
            Updates the properties on the represented business object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.TextBoxMapper.TextBoxMapperStrategy">
            <summary>
            Returns the <see cref="T:Habanero.UI.Base.ITextBoxMapperStrategy"/> being used by this mapper.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.TextBoxMapper.BusinessObject">
            <summary>
            Gets and sets the business object that has a property
            being mapped by this mapper.  In other words, this property
            does not return the exact business object being shown in the
            control, but rather the business object shown in the
            form.  Where the business object has been amended or
            altered, the <see cref="M:Habanero.UI.Base.ControlMapper.UpdateControlValueFromBusinessObject"/> method is automatically called here to 
            implement the changes in the control itself.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IStaticDataEditor">
            <summary>
            Provides an editor for static data in an application.  Static data serves
            a number purposes including providing source data for lookup lists used in
            drop-downs.
            <br/>
            The editor typically consists of a TreeView on the left and an EditableGrid
            on the right, where data for the selected type in the TreeView can be edited.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IStaticDataEditor.AddSection(System.String)">
            <summary>
            Adds a section to the treeview, under which individual items
            can be listed
            </summary>
            <param name="sectionName">The name of the section as it appears to the user</param>
        </member>
        <member name="M:Habanero.UI.Base.IStaticDataEditor.AddItem(System.String,Habanero.Base.IClassDef)">
            <summary>
            Adds an item to the treeview
            </summary>
            <param name="itemName">The name of the item as it appears to the user</param>
            <param name="classDef">The class definition holding a grid def used to
            construct the grid for that type</param>
        </member>
        <member name="M:Habanero.UI.Base.IStaticDataEditor.SelectItem(System.String)">
            <summary>
            Selects an item with the given name in the treeview
            </summary>
            <param name="itemName">The name of the item to select</param>
        </member>
        <member name="M:Habanero.UI.Base.IStaticDataEditor.SaveChanges">
            <summary>
            Saves the changes made to the grid
            </summary>
            <returns>Returns true if saved successfully</returns>
        </member>
        <member name="M:Habanero.UI.Base.IStaticDataEditor.RejectChanges">
            <summary>
            Rejects (restores) changes to the grid since the last save
            </summary>
            <returns>Returns true if restored successfully</returns>
        </member>
        <member name="T:Habanero.UI.Base.PictureBoxSizeMode">
            <summary>
            Specifies how an image is positioned within a <see cref="T:Habanero.UI.Base.IPictureBox"></see>.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PictureBoxSizeMode.AutoSize">
            <summary>
            The <see cref="T:Habanero.UI.Base.IPictureBox"></see> is sized equal to the size of the image that it contains.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PictureBoxSizeMode.CenterImage">
            <summary>
            The image is displayed in the center if the <see cref="T:Habanero.UI.Base.IPictureBox"></see> is larger than the image. If the image is larger than the <see cref="T:Habanero.UI.Base.IPictureBox"></see>, the picture is placed in the center of the <see cref="T:Habanero.UI.Base.IPictureBox"></see> and the outside edges are clipped.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PictureBoxSizeMode.Normal">
            <summary>
            The image is placed in the upper-left corner of the <see cref="T:Habanero.UI.Base.IPictureBox"></see>. The image is clipped if it is larger than the <see cref="T:Habanero.UI.Base.IPictureBox"></see> it is contained in.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.PictureBoxSizeMode.StretchImage">
            <summary>
            The image within the <see cref="T:Habanero.UI.Base.IPictureBox"></see> is stretched or shrunk to fit the size of the <see cref="T:Habanero.UI.Base.IPictureBox"></see>.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IPictureBox">
            <summary>
            Represents a PictureBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IPictureBox.SizeMode">
            <summary>
            Indicates how the image is displayed.
            </summary>
            <returns>One of the <see cref="T:Habanero.UI.Base.PictureBoxSizeMode"></see> values. The default is <see cref="F:Habanero.UI.Base.PictureBoxSizeMode.Normal"></see>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:Habanero.UI.Base.PictureBoxSizeMode"></see> values. </exception>
        </member>
        <member name="P:Habanero.UI.Base.IPictureBox.Image">
            <summary>
            Gets or sets the image that is displayed by <see cref="T:Habanero.UI.Base.IPictureBox"></see>.
            </summary>
            <returns>The <see cref="T:System.Drawing.Image"></see> to display.</returns>
        </member>
        <member name="T:Habanero.UI.Base.IButtonSizePolicy">
            <summary>
            Specifies an object that calculates button sizes.  This is used by the <see cref="T:Habanero.UI.Base.IButtonGroupControl"/> when a button is added to it.  You can control
            how the buttons are laid out on the <see cref="T:Habanero.UI.Base.IButtonGroupControl"/> by creating a class that implements <see cref="T:Habanero.UI.Base.IButtonSizePolicy"/>
            and setting the <see cref="P:Habanero.UI.Base.IButtonGroupControl.ButtonSizePolicy"/> property on your <see cref="T:Habanero.UI.Base.IButtonGroupControl"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IButtonSizePolicy.RecalcButtonSizes(Habanero.UI.Base.IControlCollection)">
            <summary>
            Recalculates the button sizes of the given collection of buttons.
            </summary>
            <param name="buttonCollection"></param>
        </member>
        <member name="T:Habanero.UI.Base.ButtonSizePolicyUserDefined">
            <summary>
            An implementation of <see cref="T:Habanero.UI.Base.IButtonSizePolicy"/> that does no resizing, thus allowing you to specify your own button sizes for buttons on
            an <see cref="T:Habanero.UI.Base.IButtonGroupControl"/>.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ButtonSizePolicyUserDefined.RecalcButtonSizes(Habanero.UI.Base.IControlCollection)">
            <summary>
            Recalculates the button sizes of the given collection of buttons.  This implementation does nothing to the buttons, allowing you to specify
            your own button sizes.
            </summary>
            <param name="buttonCollection"></param>
        </member>
        <member name="T:Habanero.UI.Base.BOSelectorAndEditorManager">
            <summary>
            This is a manager class that can be used to combine any <see cref="T:Habanero.UI.Base.IBOColSelectorControl"/>
              and <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/>. The selector control is essentially a control 
              for selecting a Business Object a list box, combo box. The <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/> is a control
              that is used for viewing a selected <see cref="T:Habanero.Base.IBusinessObject"/>.<br/>
            The responsibilities of this class is to link these two controls together so that if a new business object is selected
              in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"/> then its values are displayed in the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/>.<br/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BOSelectorAndEditorManager.#ctor(Habanero.UI.Base.IBOColSelectorControl,Habanero.UI.Base.IBusinessObjectControl)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.BOSelectorAndEditorManager"/>
            </summary>
            <param name="boColSelector"></param>
            <param name="boEditor"></param>
        </member>
        <member name="P:Habanero.UI.Base.BOSelectorAndEditorManager.BOColSelector">
            <summary>
             Returns the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"/> that is being managed by this <see cref="T:Habanero.UI.Base.BOSelectorAndEditorManager"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOSelectorAndEditorManager.BOEditor">
            <summary>
             Returns the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/> that is being managed by this <see cref="T:Habanero.UI.Base.BOSelectorAndEditorManager"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.MultiSelectorManager`1">
            <summary>
            This manager groups common logic for IMultiSelector objects.
            Do not use this object in working code - rather call CreateMultiSelector
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorManager`1.#ctor(Habanero.UI.Base.IMultiSelector{`0})">
            <summary>
            Constructor for <see cref="T:Habanero.UI.Base.MultiSelectorManager`1"/>
            </summary>
            <param name="multiSelector"></param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorManager`1.DoSelect(System.Object,System.EventArgs)">
            <summary>
            Event handler for Selecting an item 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorManager`1.DoDeselect(System.Object,System.EventArgs)">
            <summary>
            Event handler for deselecting an item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Habanero.UI.Base.MultiSelectorManager`1.GetButton(Habanero.UI.Base.MultiSelectorButton)">
            <summary>
            See <see cref="M:Habanero.UI.Base.IMultiSelector`1.GetButton(Habanero.UI.Base.MultiSelectorButton)"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.AllOptions">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.AllOptions"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.AvailableOptionsListBox">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.AvailableOptionsListBox"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.Model">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.Model"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.SelectedOptions">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.SelectedOptions"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.SelectionsListBox">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.SelectedOptionsListBox"/>
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.MultiSelectorManager`1.SelectionsView">
            <summary>
            See <see cref="P:Habanero.UI.Base.IMultiSelector`1.SelectionsView"/>
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ListBoxSelectionMode">
            <summary>
            Specifies the selection behavior of a list box
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ListBoxSelectionMode.MultiExtended">
            <summary>
            Multiple items can be selected, and the user can use the SHIFT, CTRL, and arrow keys to make selections
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ListBoxSelectionMode.MultiSimple">
            <summary>
            Multiple items can be selected
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ListBoxSelectionMode.None">
            <summary>
            No items can be selected
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.ListBoxSelectionMode.One">
            <summary>
            Only one item can be selected
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataViewIntegerFilterClause">
            <summary>
            Manages a filter clause that filters which data to
            display in a DataView, according to some criteria set on an integer column
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewIntegerFilterClause.#ctor(System.String,Habanero.Base.FilterClauseOperator,System.Int32)">
            <summary>
            Constructor to create a new filter clause
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to compare to</param>
        </member>
        <member name="M:Habanero.UI.Base.DataViewIntegerFilterClause.CreateValueClause(System.String,System.String)">
            <summary>
            Returns the value part of the clause
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="T:Habanero.UI.Base.HabaneroAppUI">
            <summary>
            Provides a template for a standard Habanero application, including
            standard fields and initialisations.  Specific details covered are:
            <ul>
            <li>The class definitions that define how the data is represented
            and limited</li>
            <li>The database configuration, connection and settings</li>
            <li>A logger to record debugging and error messages</li>
            <li>An exception notifier to communicate exceptions to the user</li>
            <li>Automatic version upgrades when an application is out-of-date</li>
            <li>A synchronisation controller</li>
            <li>A control factory to create controls</li>
            <li>A data accessor that specifies what type of data source is used (DB by default)</li>
            </ul>
            To set up and launch an application:
            <ol>
            <li>Instantiate the application with the constructor</li>
            <li>Specify any individual settings as required</li>
            <li>Call the Startup() method to launch the application</li>
            </ol>
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.HabaneroAppUI._privateKey">
            <summary>
            The application's private key
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.#ctor(System.String,System.String)">
            <summary>
            Constructor to initialise a new application with basic application
            information.  Use the Startup() method to launch the application.
            </summary>
            <param name="appName">The application name</param>
            <param name="appVersion">The application version</param>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.SetupControlFactory">
            <summary>
            Sets the control factory used to create controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.SetPrivateKey(System.String)">
            <summary>
            Sets the private key used to decrypt the database password. If your database password as supplied is
            in plaintext then this is not necessary. If you supply the DatabaseConfig object you can also set the
            private key on that instead.
            </summary>
            <param name="xmlPrivateKey">The private key (RSA) in xml format</param>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.GetXmlClassDefsLoader">
            <summary>
            Gets the loader for the xml class definitions
            </summary>
            <returns>Returns the loader</returns>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.SetupClassDefs">
            <summary>
            Loads the class definitions
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.SetupUISettings">
            <summary>
            Sets up the class that stores the user interface
            settings
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HabaneroAppUI.SetupDateDisplaySettings">
            <summary>
            Sets up the class that stores the date display
            settings
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ColumnLayoutManager">
            <summary>
            This allows you to add controls to a layout where the controls will be added to the columns from
            left to right until the number of columns is exceeded. When this happens the control will be 
            added on the next row. The row height is determined by the heighest control in the row.
            All controls added will have an identical width (width = managed control width - borders size)
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ColumnLayoutManager.#ctor(Habanero.UI.Base.IControlHabanero,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new layout manager
            </summary>
            <param name="managedControl">The control to manage</param>
            <param name="controlFactory">The control factory used by the layout manager to create controls</param>
        </member>
        <member name="M:Habanero.UI.Base.ColumnLayoutManager.RefreshControlPositions">
            <summary>
            Updates the layout and appearance of the managed controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ColumnLayoutManager.AddControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Add a control to those being managed in the layout
            </summary>
            <param name="control">The control to add</param>
            <returns>Returns the control after it has been added</returns>
        </member>
        <member name="M:Habanero.UI.Base.ColumnLayoutManager.RemoveControl(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Removes a control from layout manager.
            </summary>
            <param name="control">The Control to be removed.</param>
            <returns>Returns the control being removed.</returns>
        </member>
        <member name="P:Habanero.UI.Base.ColumnLayoutManager.ColumnCount">
            <summary>
            Gets and Sets the number of columns in the layout
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerManager">
            <summary>
            This manager groups common logic for IDateTimePicker control.
            Do not use this object in working code - rather call CreateDateTimePicker
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.#ctor(Habanero.UI.Base.IControlFactory,Habanero.UI.Base.IDateTimePicker,Habanero.UI.Base.DateTimePickerManager.ValueGetter{System.DateTime},Habanero.UI.Base.DateTimePickerManager.ValueSetter{System.DateTime})">
            <summary>
             The Constructor for the <see cref="T:Habanero.UI.Base.DateTimePickerManager"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="dateTimePicker"></param>
            <param name="valueGetter"></param>
            <param name="valueSetter"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.UpdateFocusState">
            <summary>
             Updates the Focus state for the control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.OnValueChanged(System.EventArgs)">
            <summary>
            Handles the event of the DateTime value being changed
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.OnResize(System.EventArgs)">
            <summary>
            Handles the event of the DateTimePicker's size being changed
            </summary>
            <param name="eventargs"></param>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.ChangeToValueMode">
            <summary>
            Changes the DatetTimePicker control to the value mode
            </summary>
            <returns>true if the mode was changed, false if the mode was already value mode</returns>
        </member>
        <member name="M:Habanero.UI.Base.DateTimePickerManager.ChangeToNullMode">
            <summary>
            Changes the DatetTimePicker control to the null mode
            </summary>
            <returns>true if the mode was changed, false if the mode was already null mode</returns>
        </member>
        <member name="E:Habanero.UI.Base.DateTimePickerManager.ValueChanged">
            <summary>
            The <see cref="T:System.EventHandler"/> for the <see cref="T:Habanero.UI.Base.IDateTimePicker"/> value changing.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerManager.DateTimePicker">
            <summary>
             Gets the <see cref="T:Habanero.UI.Base.IDateTimePicker"/> control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerManager.NullDisplayValue">
            <summary>
             The text that will be displayed when the Value is null
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerManager.ValueOrNull">
            <summary>
            Gets or sets the nullable DateTime value in the control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.DateTimePickerManager.Value">
            <summary>
             The non-nullable DateTime value represented by the DateTimePicker
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerManager.ValueGetter`1">
            <summary>
             A delegate for getting the Value of a DateTimePicker
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerManager.ValueSetter`1">
            <summary>
             A delegate for setting the value of a DateTimePicker
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Habanero.UI.Base.GroupBoxGroupControlManager">
            <summary>
             The Manager for the <see cref="T:Habanero.UI.Base.IGroupBoxGroupControl"/> that handles the Common Logic for either VWG or Win.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GroupBoxGroupControlManager.#ctor(Habanero.UI.Base.IGroupBoxGroupControl,Habanero.UI.Base.IControlFactory)">
            <summary>
            Constructs the <see cref="T:Habanero.UI.Base.CollapsiblePanelGroupManager"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.GroupBoxGroupControlManager.AddControl(Habanero.UI.Base.IControlHabanero,System.String,System.Int32,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.UI.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in the appropriate Child Control Type.
            </summary>
            <param name="contentControl">The control that is being placed as a child within this control. The content control could be 
             a Panel of <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>s or any other child control</param>
            <param name="headingText">The heading text that will be shown as the Header for this Group e.g. For a <see cref="T:Habanero.UI.Base.ITabControl"/>
              this will be the Text shown in the Tab for a <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/> this will be the text shown
              on the Collapse Panel and for an <see cref="T:Habanero.UI.Base.IGroupBox"/> this will be the title of the Group Box.</param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with any other spacing required will be used as the minimum height for the ChildControlCreated</param>
             <param name="minimumControlWidth">The minimum width that the <paramref name="contentControl"/> can be</param>
             <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IListView">
            <summary>
            Represents a list view control, which displays a collection of
            items that can be displayed using one of four different views
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ConfirmingBusinessObjectDeletor">
            <summary>
             This is an <see cref="T:Habanero.Base.IBusinessObjectDeletor"/> that uses the specified <see cref="T:Habanero.Base.IConfirmer"/> to prompt the user
             for confirmation of the deletion. If the user confirms, the BusinessObject will be deleted. 
             If the user does not confirm then the BusinessObject will not be deleted.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ConfirmingBusinessObjectDeletor.#ctor(Habanero.Base.IConfirmer)">
            <summary>
             Constructs a new <see cref="T:Habanero.UI.Base.ConfirmingBusinessObjectDeletor"/> with the specified <see cref="T:Habanero.Base.IConfirmer"/>.
            </summary>
            <param name="confirmer">The <see cref="T:Habanero.Base.IConfirmer"/> to use to prompt the user for confirmation of the deletion.</param>
        </member>
        <member name="M:Habanero.UI.Base.ConfirmingBusinessObjectDeletor.#ctor(Habanero.Base.IConfirmer,Habanero.Util.Function{Habanero.Base.IBusinessObject,System.String})">
            <summary>
             Constructs a new <see cref="T:Habanero.UI.Base.ConfirmingBusinessObjectDeletor"/> with the specified <see cref="T:Habanero.Base.IConfirmer"/>
             and a delegate for constructing the confirmation message.
            </summary>
            <param name="confirmer">The <see cref="T:Habanero.Base.IConfirmer"/> to use to prompt the user for confirmation of the deletion.</param>
            <param name="customConfirmationMessageDelegate">The delegate to use for constructing the confirmation message that will be 
             displayed to the user for a particular <see cref="T:Habanero.Base.IBusinessObject"/>.</param>
        </member>
        <member name="M:Habanero.UI.Base.ConfirmingBusinessObjectDeletor.DeleteBusinessObject(Habanero.Base.IBusinessObject)">
            <summary>
             Deletes the given business object
            </summary>
            <param name="businessObject">The business object to delete</param>
        </member>
        <member name="P:Habanero.UI.Base.ConfirmingBusinessObjectDeletor.Confirmer">
            <summary>
             The <see cref="T:Habanero.Base.IConfirmer"/> to use when prompting the user for confirmation.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.ConfirmingBusinessObjectDeletor.CustomConfirmationMessageDelegate">
            <summary>
             The delegate that has been provided for constructing the confirmation message that will be 
             displayed to the user for a particular <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DialogCompletionDelegate">
            <summary>
             This delegate provides a signature for a method to be called when a Dialog completes.
             It provides a parameter for a reference to the actal dialog that completed, and 
             the <see cref="T:Habanero.UI.Base.DialogResult"/> of the dialog.
            </summary>
            <param name="sender">A reference to the actual dialog that was completed, resulting in this delegate being called.
             This may be null if the particular Dialog implementation does not allow references to the Dialog type. eg. MessageBox in windows</param>
            <param name="dialogResult">The <see cref="T:Habanero.UI.Base.DialogResult"/> of the dialog when it was completed.</param>
        </member>
        <member name="T:Habanero.UI.Base.IControlFactory">
            <summary>
            Creates controls for a specific UI environment.
            The control Factory provides a specific piece of functionality fundamental to the 
            ability of Habanero to swap between Windows, Web and WPF. If the control factory is 
            used for creating all controls in the application, then moving the application from windows to web
            or vice versa is trivial. The control factory also provides a simple and easy way to 
            style an application: swap out the control factory and create 
            controls with any image, etc. you want.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateFilterControl">
            <summary>
            Creates a filter control with the default layout manager
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateComboBox">
            <summary>
            Creates a new empty ComboBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateListBox">
            <summary>
            Creates a ListBox control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMultiSelector``1">
            <summary>
            Creates a multi-selector control
            </summary>
            <typeparam name="T">The business object type being managed in the control</typeparam>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateButton">
            <summary>
            Creates a button control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateButton(System.String)">
            <summary>
            Creates a button control
            </summary>
            <param name="text">The text to appear on the button</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateButton(System.String,System.EventHandler)">
            <summary>
            Creates a button control with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="text">The text to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCheckBox">
            <summary>
            Creates a CheckBox control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCheckBox(System.Boolean)">
            <summary>
            Creates a CheckBox control with a specified initial checked state
            </summary>
            <param name="defaultValue">Whether the initial box is checked</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLabel">
            <summary>
            Creates a label without text
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLabel(System.String)">
            <summary>
            Creates a label with specified text
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLabel(System.String,System.Boolean)">
            <summary>
            Creates a label
            </summary>
            <param name="labelText">The text to appear in the label</param>
            <param name="isBold">Whether the text appears in bold font</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBorderLayoutManager(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Creates a BorderLayoutManager to place controls on the given parent control
            </summary>
            <param name="control">The parent control on which to managed the layout</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreatePanel">
            <summary>
            Creates a Panel control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreatePanel(Habanero.UI.Base.IControlFactory)">
            <summary>
            Creates a Panel control
            </summary>
            <param name="controlFactory">The factory that this panel will use to create any controls on it</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreatePanel(System.String,Habanero.UI.Base.IControlFactory)">
            <summary>
            Creates a Panel control
            </summary>
            <param name="name">The name of the panel</param>
            <param name="controlFactory">The factory that this panel will use to create any controls on it</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateReadOnlyGrid">
            <summary>
            Creates a read-only Grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateReadOnlyGridControl">
            <summary>
            Creates a ReadOnlyGridControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateReadOnlyGridButtonsControl">
            <summary>
            Creates a buttons control for a <see cref="T:Habanero.UI.Base.IReadOnlyGridControl"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridWithPanelControl``1">
            <summary>
            Creates a GridWithPanelControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridWithPanelControl``1(System.String)">
            <summary>
            Creates a GridWithPanelControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridWithPanelControl``1(Habanero.UI.Base.IBusinessObjectControl)">
            <summary>
            Creates a GridWithPanelControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridWithPanelControl``1(Habanero.UI.Base.IBusinessObjectControl,System.String)">
            <summary>
            Creates a GridWithPanelControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateButtonGroupControl">
            <summary>
            Creates a control to manage a group of buttons that display next to each other
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateToolTip">
            <summary>
            Creates a ToolTip
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTextBox">
            <summary>
            Creates a TextBox control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTextBoxMultiLine(System.Int32)">
            <summary>
            Creates a multi line textbox, setting the scrollbars to vertical
            </summary>
            <param name="numLines">The number of lines to show in the TextBox</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreatePasswordTextBox">
            <summary>
            Creates a new PasswordTextBox that masks the letters as the user
            types them
            </summary>
            <returns>Returns the new PasswordTextBox object</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTreeView">
            <summary>
            Creates a new empty TreeView
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTreeView(System.String)">
            <summary>
            Creates a new empty TreeView
            </summary>
            <param name="name">The name of the TreeView</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTreeNode(System.String)">
            <summary>
             Creates a new TreeNode for a TreeView control.
            </summary>
            <param name="nodeName">The name for the node</param>
            <returns>The newly created TreeNode object.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateControl">
            <summary>
            Creates a generic control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateUserControl">
            <summary>
            Creates a user control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateUserControl(System.String)">
            <summary>
            Creates a user control with the specified name.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateControl(System.String,System.String)">
            <summary>
            Creates a control for the given type and assembly name
            </summary>
            <param name="typeName">The name of the control type</param>
            <param name="assemblyName">The assembly name of the control type</param>
            <returns>Returns either the control of the specified type or
            the default type, which is usually TextBox.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateControl(System.Type)">
            <summary>
            Creates a new control of the type specified
            </summary>
            <param name="controlType">The control type, which must be a
            sub-type of <see cref="T:Habanero.UI.Base.IControlHabanero"/></param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDateTimePicker">
            <summary>
            Creates a DateTimePicker
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDateTimePicker(System.DateTime)">
            <summary>
            Creates a new DateTimePicker with a specified date
            </summary>
            <param name="defaultDate">The initial date value</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMonthPicker">
            <summary>
            Creates a new DateTimePicker that is formatted to handle months
            and years
            </summary>
            <returns>Returns a new DateTimePicker object</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDateRangeComboBox">
            <summary>
            Creates a new DateRangeComboBox control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDateRangeComboBox(System.Collections.Generic.List{Habanero.UI.Base.DateRangeOptions})">
            <summary>
            Creates DateRangeComboBox control with a specific set of date range
            options to display
            </summary>
            <param name="optionsToDisplay">A list of date range options to display</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateNumericUpDown">
            <summary>
             Creates a new numeric up-down control
            </summary>
            <returns>The created NumericUpDown control</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateNumericUpDownInteger">
            <summary>
            Creates a new numeric up-down control that is formatted with
            zero decimal places for integer use
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateNumericUpDownCurrency">
            <summary>
            Creates a new numeric up-down control that is formatted with
            two decimal places for currency use
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateProgressBar">
            <summary>
            Creates a new progress bar
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateSplitter">
            <summary>
            Creates a new splitter which enables the user to resize 
            docked controls
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateRadioButton(System.String)">
            <summary>
            Creates a new radio button
            </summary>
            <param name="text">The text to appear next to the radio button</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGroupBox">
            <summary>
            Creates a new GroupBox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGroupBox(System.String)">
            <summary>
            Creates a new GroupBox with the specified text as the title.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTabControl">
            <summary>
            Creates a TabControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTabPage(System.String)">
            <summary>
            Creates a new tab page
            </summary>
            <param name="title">The page title to appear in the tab</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateWizardControl(Habanero.UI.Base.IWizardController)">
            <summary>
            Creates a control that can be placed on a form or a panel to implement a wizard user interface.
            The wizard control will have a next and previous button and a panel to place the wizard step on.
            </summary>
            <param name="wizardController">The controller that manages the wizard process</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateWizardForm(Habanero.UI.Base.IWizardController)">
            <summary>
            Creates a form that will be used to display the wizard user interface.
            </summary>
            <param name="wizardController"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorForm(Habanero.BO.BusinessObject)">
            <summary>
            Returns a BOEditor form. This is a form that the business object can be edited in.
            </summary>
            <param name="bo"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String,Habanero.Base.PostObjectEditDelegate)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
            <param name="action">Action to be performed when the editing is completed or cancelled. Typically used if you want to update
            a grid or a list in an asynchronous environment (E.g. to select the recently edited item in the grid)</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String,Habanero.UI.Base.GroupControlCreator)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
            <param name="groupControlCreator">The Creator that will be used to Create the <see cref="T:Habanero.UI.Base.IGroupControl"/></param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateEditableGrid">
            <summary>
            Creates an editable grid
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateEditableGridControl">
            <summary>
            Creates an EditableGridControl
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateEditableGridButtonsControl">
            <summary>
            Creates an buttons control for an <see cref="T:Habanero.UI.Base.IEditableGridControl"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateFileChooser">
            <summary>
            Creates a FileChooser control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOColTabControl">
            <summary>
            Displays a business object collection in a tab control, with one
            business object per tab.  Each tab holds a business control, provided
            by the developer, that refreshes to display the business object for
            the current tab.
            <br/>
            This control is suitable for a business object collection with a limited
            number of objects.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridView">
            <summary>
             Creates a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewImageColumn">
            <summary>
            Creates a DataGridViewImageColumn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewCheckBoxColumn">
            <summary>
            Creates a DataGridViewCheckBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewTextBoxColumn">
            <summary>
            Creates a DataGridViewTextBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewComboBoxColumn">
            <summary>
            Creates a DataGridViewComboBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewDateTimeColumn">
            <summary>
            Creates a DataGridViewDateTimeColumn
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewNumericUpDownColumn">
            <summary>
             Creates a DataGridViewNumericUpDownColumn
            </summary>
            <returns>A new DataGridViewNumericUpDownColumn</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewColumn(System.String,System.String)">
            <summary>
            Creates a column for a DataGridView for the given type
            </summary>
            <param name="typeName">The name of the type</param>
            <param name="assemblyName">The name of the assembly</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDataGridViewColumn(System.Type)">
            <summary>
            Creates a column for a DataGridView for the given type
            </summary>
            <param name="columnType">The type of the column</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateErrorProvider">
            <summary>
            Creates an ErrorProvider
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateForm">
            <summary>
            Creates a Form control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateOKCancelDialogFactory">
            <summary>
            Creates an OKCancelDialog
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateControlMapperStrategy">
            <summary>
            Creates a control mapper strategy for the management of how
            business object properties and their related controls update each other.
            For example, a windows strategy might be to update the control value whenever the property 
            is updated, whereas an internet strategy might be to update the control value only
            when the business object is loaded.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateTextBoxMapperStrategy">
            <summary>
            Returns a textbox mapper strategy that can be applied to a textbox
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCheckBoxMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a CheckBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateListComboBoxMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLookupComboBoxDefaultMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a lookup ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLookupKeyPressMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of key presses on a lookup ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateNumericUpDownMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a NumericUpDown for the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateStaticDataEditor">
            <summary>
            Creates a static data editor
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.ShowMessageBox(System.String,System.String,Habanero.UI.Base.MessageBoxButtons,Habanero.UI.Base.MessageBoxIcon)">
            <summary>
             Displays a message box with specified text, caption, buttons, and icon.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <param name="title">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.ShowMessageBox(System.String,System.String,Habanero.UI.Base.MessageBoxButtons,Habanero.UI.Base.MessageBoxIcon,Habanero.UI.Base.DialogCompletionDelegate)">
            <summary>
             Displays a message box with specified text, caption, buttons, and icon.
             Once the user is has responded, the provided delegate is called with an indication of the <see cref="T:Habanero.UI.Base.DialogResult"/>.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <param name="title">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="dialogCompletionDelegate">A delegate to be called when the MessageBox has been completed.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.ShowMessageBox(System.String)">
            <summary>
             Displays a message box with specified text.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreatePictureBox">
            <summary>
            Creates a TextBox that provides filtering of characters depending on the property type.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateDateTimePickerMapperStrategy">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IDateTimePickerMapperStrategy"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridAndBOEditorControl``1">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridAndBOEditorControl(Habanero.Base.IClassDef)">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGridAndBOEditorControl``1(Habanero.UI.Base.IBOEditorControl)">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCollapsiblePanel">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCollapsiblePanel(System.String)">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.ICollapsiblePanel"/>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateButtonCollapsibleStyle">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IButton"/> configured with the collapsible style
            </summary>
            <returns>a <see cref="T:Habanero.UI.Base.IButton"/> </returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateLabelPinOffStyle">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.ILabel"/> configured with the collapsible style
            </summary>
            <returns>a <see cref="T:Habanero.UI.Base.ILabel"/> </returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.ConfigurePinOffStyleLabel(Habanero.UI.Base.ILabel)">
            <summary>
             Configures the <see cref="T:Habanero.UI.Base.ILabel"/> with the pinoff style
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.ConfigurePinOnStyleLabel(Habanero.UI.Base.ILabel)">
            <summary>
             Configures the <see cref="T:Habanero.UI.Base.ILabel"/> with the pinon style
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCollapsiblePanelGroupControl">
            <summary>
             Craetes an <see cref="T:Habanero.UI.Base.ICollapsiblePanelGroupControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateGroupBoxGroupControl">
            <summary>
             Creates a <see cref="T:Habanero.UI.Base.IGroupBoxGroupControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateComboBoxSelector">
            <summary>
             Creates an <see cref="T:Habanero.UI.Base.IBOComboBoxSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateListBoxSelector">
            <summary>
             Creates an <see cref="T:Habanero.UI.Base.IBOListBoxSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateCollapsiblePanelSelector">
            <summary>
             Creates an <see cref="T:Habanero.UI.Base.IBOCollapsiblePanelSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMainMenu">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.IMainMenuHabanero"/>
            </summary>
            <returns>returns the Created Main Menu</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMenuItem(System.String)">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.IMenuItem"/> with the name.
            </summary>
            <param name="name">The Name of the MenuItem</param>
            <returns>returns the Created MenuItem</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMenuItem(Habanero.UI.Base.HabaneroMenu.Item)">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.IMenuItem"/> with the name.
            </summary>
            <param name="item">the HabaneroMenu.Item that the IMenuItem is being created for</param>
            <returns>returns the Created MenuItem</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMainMenu(Habanero.UI.Base.HabaneroMenu)">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.IMainMenuHabanero"/> with associated habaneroMenu.
            </summary>
            <param name="habaneroMenu">the HabaneroMenu that the IMainMenuHabanero is being created for</param>
            <returns>returns the Created IMainMenuHabanero</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateSplitContainer">
            <summary>
            Creates an <see cref="T:Habanero.UI.Base.ISplitContainer"/>
            </summary>
            <returns>returns the created split container</returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorControl``1(System.String)">
            <summary>
            Creates a <see cref="T:Habanero.UI.Base.IBOPanelEditorControl"/> for the Generic Type T.<br/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object (of type T).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uiDefName">The User Interface definition to use when creating the Control</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorControl``1">
            <summary>
            Creates a <see cref="T:Habanero.UI.Base.IBOPanelEditorControl"/> for the Generic Type T.<br/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object (of type T).<br/>
            The default uiDef is used as the user interface definition for defining which controls are used to view and edit this business object
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorControl(Habanero.Base.IClassDef,System.String)">
            <summary>
            Creates a <see cref="T:Habanero.UI.Base.IBOPanelEditorControl"/> for the type defined by <paramref name="classDef"/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object.<br/>
            </summary>
            <param name="classDef"></param>
            <param name="uiDefName">The uiDef defined in the classDef that is to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateBOEditorControl(Habanero.Base.IClassDef)">
            <summary>
            Creates a <see cref="T:Habanero.UI.Base.IBOPanelEditorControl"/> for the type defined by <paramref name="classDef"/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object.<br/>
            The default uiDef is used as the user interface definition for defining which controls are used to view and edit this business object
            </summary>
            <param name="classDef"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.IControlFactory.CreateMainTitleIconControl">
            <summary>
            Creates a <see cref="T:Habanero.UI.Base.IMainTitleIconControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.UI.Base.IScreen">
            <summary>
            Provides a screen
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IControlMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a control
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperStrategy.AddCurrentBOPropHandlers(Habanero.UI.Base.ControlMapper,Habanero.Base.IBOProp)">
            <summary>
            Adds handlers to events of a current business object property.
            </summary>
            <param name="mapper">The control mapper that maps the business object property to the control</param>
            <param name="boProp">The business object property being mapped to the control</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperStrategy.RemoveCurrentBOPropHandlers(Habanero.UI.Base.ControlMapper,Habanero.Base.IBOProp)">
            <summary>
            Removes handlers to events of a current business object property.
            It is essential that if the AddCurrentBoPropHandlers is implemented then this 
            is implemented such that editing a business object that is no longer being shown on the control does not
            does not update the value in the control.
            </summary>
            <param name="mapper">The control mapper that maps the business object property to the control</param>
            <param name="boProp">The business object property being mapped to the control</param>
        </member>
        <member name="M:Habanero.UI.Base.IControlMapperStrategy.AddKeyPressEventHandler(Habanero.UI.Base.IControlHabanero)">
            <summary>
            Handles the default key press behaviours on a control.
            This is typically used to change the handling of the enter key (such as having
            the enter key cause focus to move to the next control).
            </summary>
            <param name="control">The control whose events will be handled</param>
        </member>
        <member name="T:Habanero.UI.Base.ITextBoxMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a TextBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ITextBoxMapperStrategy.AddKeyPressEventHandler(Habanero.UI.Base.TextBoxMapper,Habanero.Base.IBOProp)">
            <summary>
            Adds key press event handlers that carry out actions like
            limiting the input of certain characters, depending on the type of the
            property
            </summary>
            <param name="mapper">The TextBox mapper</param>
            <param name="boProp">The property being mapped</param>
        </member>
        <member name="M:Habanero.UI.Base.ITextBoxMapperStrategy.AddUpdateBoPropOnTextChangedHandler(Habanero.UI.Base.TextBoxMapper,Habanero.Base.IBOProp)">
            <summary>
             Add a handler to the <see cref="T:Habanero.UI.Base.ITextBox"/> TextChanged Event that
             automatically updates the Business Object with this change.
             This is only applicable in Windows not for VWG (Web).
            </summary>
            <param name="mapper"></param>
            <param name="boProp"></param>
        </member>
        <member name="T:Habanero.UI.Base.IDateTimePickerMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a TextBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDateTimePickerMapperStrategy.AddUpdateBoPropOnValueChangedHandler(Habanero.UI.Base.DateTimePickerMapper)">
            <summary>
            Adds value changed event handlers.
            </summary>
            <param name="mapper">The DateTime mapper</param>
        </member>
        <member name="T:Habanero.UI.Base.ICheckBoxMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a CheckBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ICheckBoxMapperStrategy.AddClickEventHandler(Habanero.UI.Base.CheckBoxMapper)">
            <summary>
            Adds click event handler
            </summary>
            <param name="mapper">The checkbox mapper</param>
        </member>
        <member name="T:Habanero.UI.Base.IListComboBoxMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a list ComboBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IListComboBoxMapperStrategy.AddItemSelectedEventHandler(Habanero.UI.Base.ListComboBoxMapper)">
             <summary>
             Adds an ItemSelected event handler.
             For Windows Forms you may want the business object to be updated immediately, however
             for a web environment with low bandwidth you may choose to only update when the user saves.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IComboBoxMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a lookup ComboBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxMapperStrategy.AddHandlers(Habanero.UI.Base.IComboBoxMapper)">
            <summary>
            Adds event handlers to the ComboBox that are suitable for the UI environment
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="M:Habanero.UI.Base.IComboBoxMapperStrategy.RemoveCurrentHandlers(Habanero.UI.Base.IComboBoxMapper)">
            <summary>
            Removes event handlers previously assigned to the ComboBox
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="T:Habanero.UI.Base.INumericUpDownMapperStrategy">
            <summary>
            Provides a set of behaviour strategies that can be applied to a NumericUpDown
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.INumericUpDownMapperStrategy.ValueChanged(Habanero.UI.Base.NumericUpDownMapper)">
            <summary>
            Handles the value changed event suitably for the UI environment
            </summary>
            <param name="mapper">The mapper for the NumericUpDown</param>
        </member>
        <member name="T:Habanero.UI.Base.DateTimePickerFormat">
            <summary>
            Specifies the date and time format the <see cref="T:Habanero.UI.Base.IDateTimePicker"/> control displays.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateTimePickerFormat.Custom">
            <summary>
            The <see cref="T:Habanero.UI.Base.IDateTimePicker"></see> control displays the date/time value in a custom format.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateTimePickerFormat.Long">
            <summary>
            The <see cref="T:Habanero.UI.Base.IDateTimePicker"></see> control displays the date/time value in the long date format set by the user's operating system.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateTimePickerFormat.Short">
            <summary>
            The <see cref="T:Habanero.UI.Base.IDateTimePicker"></see> control displays the date/time value in the short date format set by the user's operating system.
            </summary>
        </member>
        <member name="F:Habanero.UI.Base.DateTimePickerFormat.Time">
            <summary>
            The <see cref="T:Habanero.UI.Base.IDateTimePicker"></see> control displays the date/time value in the time format set by the user's operating system.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDateTimePicker">
            <summary>
            Represents a DateTimePicker
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.ValueOrNull">
            <summary>
            Gets or sets the date/time value assigned to the control, but returns
            null if there is no date set in the picker
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
            <returns>One of the <see cref="T:Habanero.UI.Base.DateTimePickerFormat"></see> values. The default is <see cref="F:Habanero.UI.Base.DateTimePickerFormat.Long"></see>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:Habanero.UI.Base.DateTimePickerFormat"></see> values. </exception>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether a spin button control
            (also known as an up-down control) is used to adjust the date/time value
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.ShowCheckBox">
            <summary>
            Gets or sets a value indicating whether a check box is
            displayed to the left of the selected date
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.Checked">
            <summary>
            Gets or sets a value indicating whether the Value property has
            been set with a valid date/time value and the displayed value is able to be updated
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDateTimePicker.NullDisplayValue">
            <summary>
             The text that will be displayed when the Value is null
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IDateTimePicker.Enter">
            <summary>
            Occurs when the control is entered
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.IDateTimePicker.ValueChanged">
            <summary>
            Occurs when the Value property changes
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.DataViewStringFilterClause">
            <summary>
            Manages a filter clause that filters which data to
            display in a DataView, according to some criteria set on a string column
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.DataViewStringFilterClause.#ctor(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
            Constructor to create a new filter clause
            </summary>
            <param name="filterColumn">The column of data on which to do the
            filtering</param>
            <param name="clauseOperator">The clause operator</param>
            <param name="filterValue">The filter value to compare to</param>
        </member>
        <member name="M:Habanero.UI.Base.DataViewStringFilterClause.CreateValueClause(System.String,System.String)">
            <summary>
            Returns the value part of the clause
            </summary>
            <returns>Returns a string</returns>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewRow">
            <summary>
            Represents a row in a DataGridView control
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IDataGridViewRow.SetValues(System.Object[])">
            <summary>Sets the values of the row's cells.</summary>
            <returns>true if all values have been set; otherwise, false.</returns>
            <param name="values">One or more objects that represent the cell values in the row.-or-An
             <see cref="T:System.Array"></see> of <see cref="T:System.Object"></see> values. </param>
            <exception cref="T:System.ArgumentNullException">values is null. </exception>
            <exception cref="T:System.InvalidOperationException">This method is called when the associated 
            <see cref="T:Habanero.UI.Base.IDataGridView"></see> is operating in virtual mode. -or-This row is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Cells">
            <summary>Gets the collection of cells that populate the row.</summary>
            <returns>A <see cref="T:Habanero.UI.Base.IDataGridViewCellCollection"></see> that contains all of the cells in the row.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.DataBoundItem">
            <summary>Gets the data-bound object that populated the row.</summary>
            <returns>The data-bound <see cref="T:System.Object"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.ReadOnly">
            <summary>Gets or sets a value indicating whether the row is read-only.</summary>
            <returns>true if the row is read-only; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.UI.Base.IDataGridView"></see> control and is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Selected">
            <summary>Gets or sets a value indicating whether the row is selected. </summary>
            <returns>true if the row is selected; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.UI.Base.IDataGridView"></see>
             control and is a shared row.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Index">
            <summary>
            Gets the relative position of the row within the DataGridView control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Displayed">
            <summary>Gets a value indicating whether this row is displayed on the screen.</summary>
            <returns>true if the row is currently displayed on the screen; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.UI.Base.IDataGridView"></see> control and is a shared row.</exception>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Visible">
            <summary>Gets or sets a value indicating whether the row is visible. </summary>
            <returns>true if the row is visible; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.UI.Base.IDataGridView"></see>
             control and is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewRow.Tag">
            <summary>Gets and sets a tag value for this <see cref="T:Habanero.UI.Base.IDataGridViewRow"/></summary>
        </member>
        <member name="T:Habanero.UI.Base.InputFormTextBox">
            <summary>
            Provides a form containing a TextBox in order to get a single
            string value back from a user
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.InputFormTextBox.#ctor(Habanero.UI.Base.IControlFactory,System.String,System.Int32,System.Char)">
            <summary>
            Initialises the form with a message to display to the user.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.UI.Base.IControlFactory"/> to use to create the form</param>
            <param name="message">The message to display</param>
            <param name="numLines">The number of lines to make available</param>
            <param name="passwordChar">The Char to use if the Textbox is to be used as a password field</param>
        </member>
        <member name="M:Habanero.UI.Base.InputFormTextBox.#ctor(Habanero.UI.Base.IControlFactory,System.String,System.Int32)">
            <summary>
            Initialises the form with a message to display to the user.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.UI.Base.IControlFactory"/> to use to create the form</param>
            <param name="message">The message to display</param>
            <param name="numLines">The number of lines to make available</param>
        </member>
        <member name="M:Habanero.UI.Base.InputFormTextBox.#ctor(Habanero.UI.Base.IControlFactory,System.String)">
            <summary>
            Initialises the form with a message to display to the user.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.UI.Base.IControlFactory"/> to use to create the form</param>
            <param name="message">The message to display</param>
        </member>
        <member name="M:Habanero.UI.Base.InputFormTextBox.createControlPanel">
            <summary>
            Creates the panel on the form
            </summary>
            <returns>Returns the panel created</returns>
        </member>
        <member name="M:Habanero.UI.Base.InputFormTextBox.ShowDialog">
            <summary>
            Shows the form to the user
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormTextBox.TextBox">
            <summary>
            Gets the TextBox control
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.InputFormTextBox.Message">
            <summary>
            Gets the message to display to the user
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IMenuItemCollection">
            <summary>
             This represents 
             A Collection of <see cref="T:Habanero.UI.Base.IMenuItem"/>s. A <see cref="T:Habanero.UI.Base.IMenuItem"/> is an item that 
             is shown in a Menu Control.
             <remarks>
             This Inteface is an extract of common functionality required for the IMenuItemCollection and is used to 
             isolate the implementation of the actual menu from the menu code using the menu.
             This allows the developer to swap menu's that support this interface without having to redevelop 
             any menu code.
             Habanero uses this to isolate the UIframework so that a different framework can be implemented
             using these interfaces.
             This allows the Architecture to swap between Visual Web Gui and Windows or in fact between any UI framework and
             any other UI Framework.
             </remarks>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.IMenuItemCollection.Add(Habanero.UI.Base.IMenuItem)">
            <summary>
            Adds a Menu item to the <see cref="T:Habanero.UI.Base.IMenuItemCollection"/>.
            </summary>
            <param name="menuItem"></param>
        </member>
        <member name="P:Habanero.UI.Base.IMenuItemCollection.Count">
            <summary>
             The num
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IMenuItemCollection.Item(System.Int32)">
            <summary>
             Returns the Actual Menu item identified by the index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Habanero.UI.Base.HelpAboutBoxManager">
            <summary>
            This manager groups common logic for IHelpAboutBox objects.
            Do not use this object in working code - rather call CreateHelpAboutBox
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.HelpAboutBoxManager.#ctor(Habanero.UI.Base.IControlFactory,Habanero.UI.Base.IFormHabanero,System.String,System.String,System.String,System.String)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.HelpAboutBoxManager"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="formHabanero"></param>
            <param name="programName"></param>
            <param name="producedForName"></param>
            <param name="producedByName"></param>
            <param name="versionNumber"></param>
        </member>
        <member name="M:Habanero.UI.Base.HelpAboutBoxManager.OKButtonClickHandler(System.Object,System.EventArgs)">
            <summary>
             the handler for when the OK button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Habanero.UI.Base.HelpAboutBoxManager.MainPanel">
            <summary>
             The Main Panel
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.IDataGridViewTextBoxColumn">
            <summary>
            Hosts a collection of DataGridViewTextBoxCell cells
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.IDataGridViewTextBoxColumn.MaxInputLength">
            <summary>Gets or sets the maximum number of characters that can be entered into the text box.</summary>
            <returns>The maximum number of characters that can be entered into the text box; the default value is 32767.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null.</exception>
        </member>
        <member name="T:Habanero.UI.Base.IListViewItem">
            <summary>
            Represents an item in a ListView control
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.ButtonGroupControlManager">
            <summary>
            This manager groups common logic for IButtonGroupControl objects.
            Do not use this object in working code - rather call CreateButtonGroupControl
            in the appropriate control factory.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.ButtonGroupControlManager.#ctor(Habanero.UI.Base.IButtonGroupControl,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.ButtonGroupControlManager"/>
            </summary>
            <param name="buttonGroupControl"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.ButtonGroupControlManager.AddButton(System.String)">
            <summary>
             Adds a button with te button name and text equal to buttonName.
            </summary>
            <param name="buttonName"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.ButtonGroupControlManager.AddButton(System.String,System.String,System.EventHandler)">
            <summary>
            Adds a new button to the control by the name specified
            </summary>
            <param name="buttonName">The name that the button is created with</param>
            <returns>Returns the Button object created</returns>
            <param name="buttonText">The text to appear on the button</param>
            <param name="clickHandler">The event handler to be triggered on the button click</param>
        </member>
        <member name="P:Habanero.UI.Base.ButtonGroupControlManager.LayoutManager">
            <summary>
             Returns the Layout manager being used by this control.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.TabPageEventArgs">
            <summary>
            Provides arguments to attach for an event involving business objects
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.TabPageEventArgs.#ctor(Habanero.UI.Base.ITabPage,Habanero.UI.Base.IBusinessObjectControl)">
            <summary>
            Constructor to initialise a new set of arguments
            </summary>
            <param name="tabPage">The related business object</param>
            <param name="boControl"></param>
        </member>
        <member name="P:Habanero.UI.Base.TabPageEventArgs.TabPage">
            <summary>
            Returns the Tab Page related to the event
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.TabPageEventArgs.BOControl">
            <summary>
             Returns the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/> associated with this Event.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.BusinessObjectControlCreatorDelegate">
            <summary>
            This is a delegate for creating a  Business Object Control.<br/>
             This can be used as an alternate to setting the control
            on the <see cref="T:Habanero.UI.Base.IBOColTabControl"/> so that a different instance of the control
             is created for each tab instead of them  using the same control with diff data.<br/>
            This has been created for performance reasons.
            </summary>
        </member>
        <member name="T:Habanero.UI.Base.BOColTabControlManager">
            <summary>
            This manager groups common logic for <see cref="T:Habanero.UI.Base.IBOColTabControl"/>  objects.
            Do not use this object in working code - rather call CreateBOColTabControl
            in the appropriate control factory.
            <remarks>
            This Manager is an extract of common functionality required for the <see cref="T:Habanero.UI.Base.IBOColTabControl"/> it is used to 
            as part of the pattern to isolate the implementation of the actual BOColTabControl from the code using the BOColTabControl.
            This allows the developer to swap <see cref="T:Habanero.UI.Base.IBOColTabControl"/>s that support this interface without having to redevelop 
            any code.
            Habanero uses this to isolate the UIframework so that a different framework can be implemented
            using these interfaces. This allows swapping in custom controls as well total other control libraries without 
             modifying the app.
            This allows the Architecture to swap between Visual Web Gui and Windows or in fact between any UI framework and
            any other UI Framework.
            </remarks>
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.#ctor(Habanero.UI.Base.ITabControl,Habanero.UI.Base.IControlFactory)">
            <summary>
             Constructor for the <see cref="T:Habanero.UI.Base.BOColTabControlManager"/>
            </summary>
            <param name="tabControl"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.GetBusinessObjectControl(Habanero.UI.Base.ITabPage)">
            <summary>
            returns the Business Object control for any particular Tab.
            </summary>
            <param name="selectedTab"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.TabChangedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the event that the user chooses a different tab. Calls the
            TabChanged() method.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.TabChanged">
            <summary>
            When the SelectedTab Changes manages the Logic of setting up the Business Object
            and the <see cref="T:Habanero.UI.Base.IBusinessObjectControl"/> if appropriate.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.GetBo(Habanero.UI.Base.ITabPage)">
            <summary>
            Returns the business object represented in the specified tab page
            </summary>
            <param name="tabPage">The tab page</param>
            <returns>Returns the business object, or null if not available
            </returns>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.AddTabPage(Habanero.UI.Base.ITabPage,Habanero.Base.IBusinessObject)">
            <summary>
            Adds a tab page to represent the given business object
            </summary>
            <param name="page">The TabPage object to add</param>
            <param name="bo">The business ojbect to represent</param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.AddBoPageIndexing(Habanero.Base.IBusinessObject,Habanero.UI.Base.ITabPage)">
            <summary>
            Adds the necessagry indexing for a Business Object and TabPage relationship.
            </summary>
            <param name="bo">The Business Object related to the Tab Page</param>
            <param name="page">The Tab Page related to the Business Object</param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.AddTabPageToEnd(Habanero.UI.Base.ITabPage)">
            <summary>
            Adds a tab page to the end of the tab order
            </summary>
            <param name="page">The Tab Page to be added to the Tab Control</param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.GetTabPage(Habanero.Base.IBusinessObject)">
            <summary>
            Returns the TabPage object that is representing the given
            business object
            </summary>
            <param name="bo">The business object being represented</param>
            <returns>Returns the TabPage object, or null if not found</returns>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.Clear">
            <summary>
            Clears the Business Object collection and removes all tab pages.
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.ClearTabPages">
            <summary>
            Clears the tab pages
            </summary>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.BusinessObjectRemovedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been removed from
            the collection - it subsequently removes the item from the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.UI.Base.BOColTabControlManager.BusinessObjectAddedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been added to
            the collection - it subsequently adds the item to the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="E:Habanero.UI.Base.BOColTabControlManager.TabPageAdded">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.BOColTabControlManager.TabPageRemoved">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.BusinessObjectControl">
            <summary>
            Gets and sets the boControl that will be displayed on each tab page.  This must be called
            before the BoTabColControl can be used.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.BusinessObjectCollection">
            <summary>
            Sets the collection of tab pages for the collection of business (<see cref="T:Habanero.Base.IBusinessObjectCollection"/>)
            objects used to Create teh Tab Pages.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.TabControl">
            <summary>
            Returns the TabControl object
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.CurrentBusinessObject">
            <summary>
            Returns the business object represented in the currently
            selected tab page
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.PageBoTable">
            <summary>
             A dictionalry linking the Tab Page to the particular Business Object.
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.BoPageTable">
            <summary>
             A dictionary linking the Business Object to a particular TabPage
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.NoOfItems">
            <summary>Gets the number of rows displayed in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</summary>
            <returns>The number of rows in the <see cref="T:Habanero.UI.Base.IBOColSelectorControl"></see>.</returns>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.BusinessObjectControlCreator">
            <summary>
             
            </summary>
        </member>
        <member name="P:Habanero.UI.Base.BOColTabControlManager.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="E:Habanero.UI.Base.BOColTabControlManager.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
    </members>
</doc>
